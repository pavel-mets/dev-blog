insert into blog.posts (id, is_active, moderation_status, text, time, title, view_count, moderator_id, user_id)
values  (1, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <p>Győző Kmethy – исполнительный директор и президент ассоциации DLMS – и Milan Kozole – председатель технического комитета ассоциации DLMS – в своей статье «Efficiency of DLMS/COSEM for large systems with constrained resources» рассказывают о способах и средствах эффективного использования стека DLMS/COSEM, позволяющие до 10 раз сократить объем передаваемых данных и уменьшить количество информационных обменов между клиентом и сервером. </p><a name="habracut"></a>
 <br> 
 <h3 id="vvedenie">Введение</h3>
 <br> 
 <p>DLMS/COSEM – это ведущий мировой стандарт (IEC/EN 62056, EN 13757), регламентирующий обмен данными с интеллектуальными устройствами. В настоящее время применяется, преимущественно, в интеллектуальных системах учёта потребления. Как правило такие системы состоят из головной подсистемы, которая собирает данные с миллионов устройств, а также управляет этими устройствами, используя для этих целей различные среды передачи данных.</p>
 <br> 
 <p>DLMS/COSEM включает в себя три основные составляющие: (1) объектная модель COSEM, с помощью которой описывается функциональность конечного устройства; (2) прикладной уровень DLMS, который определяет сервисы для доступа к объектам COSEM; и (3) коммуникационные профили, которые определяют то, как эти сервисы могут быть переданы через различные среды передачи данных. Кроме того, DLMS/COSEM основан на клиент-серверной архитектуре, где головная подсистема выполняет роль клиента, посылающего запросы конечному устройству, а конечное устройство – роль сервера, посылающего ответы на запросы клиента.</p>
 <br> 
 <p>Некоторые сети связи и устройства, реализующие DLMS/COSEM, обладают достаточными ресурсами, но DLMS/COSEM всё чаще применяется там, где эти ресурсы ограничены. Ресурсы устройства могут быть ограничены его возможностью обработки и хранения данных или питанием от встроенных батарей в течении всего срока его службы. Сети связи могут быть ограничены по количеству и длине передаваемых пакетов данных, а ограниченность системы может быть обусловлена требованием соответствия заданным уровням обслуживания.</p>
 <br> 
 <p>DLMS/COSEM был разработан с акцентом на эффективность, что позволяет успешно применять его в условиях ограниченности ресурсов, о которых было сказано выше. По мере распространения DLMS/COSEM в новые области применения, также развивались и способы повышения его эффективности.</p>
 <br> 
 <h3 id="sposoby-povysheniya-effektivnosti-dlmscosem">Способы повышения эффективности DLMS/COSEM</h3>
 <br> 
 <p>Способы повышения эффективности DLMS/COSEM определены, как на уровне объектной модели COSEM, так и на прикладном уровне DLMS. Все они приведены в <em>табл. 1</em>.</p>
 <br> 
 <p>Таблица 1 – Способы повышения эффективности DLMS/COSEM</p>
 <br> 
 <div class="scrollable-table">
  <table> 
   <thead> 
    <tr> 
     <th><strong>Уровень объектной модели COSEM</strong></th> 
     <th><strong>Прикладной уровень DLMS</strong></th> 
    </tr> 
   </thead> 
   <tbody> 
    <tr> 
     <td><a href="#r1">Разделение значений на динамические и статические</a></td> 
     <td></td> 
    </tr> 
    <tr> 
     <td><a href="#r2">Агрегирование данных</a></td> 
     <td><a href="#r7">Агрегирование сервисов</a></td> 
    </tr> 
    <tr> 
     <td><a href="#r3">Использование селективной выборки</a></td> 
     <td><a href="#r8">Использование составных сообщений</a></td> 
    </tr> 
    <tr> 
     <td><a href="#r4">Использование NULL-data сжатия</a></td> 
     <td><a href="#r9">Использование предустановленных и неразрывных ассоциаций приложений</a></td> 
    </tr> 
    <tr> 
     <td><a href="#r5">Использование данных типа compact-array</a></td> 
     <td><a href="#r10">Использование инициативных сообщений</a></td> 
    </tr> 
    <tr> 
     <td><a href="#r6">Использование интерфейсного класса «Compact data»</a></td> 
     <td><a href="#r11">Использование широковещательных и многоадресных сообщений</a></td> 
    </tr> 
   </tbody> 
  </table>
 </div>
 <br> 
 <p>Различные способы могут быть скомбинированы для достижения максимальной эффективности с учетом характеристик устройств и сетей передачи данных. Далее будет приведено краткое описание каждого способа повышения эффективности. Более подробная информация доступна в <a href="https://www.dlms.com/files/Blue_Book_Edition_13-Excerpt.pdf" rel="nofollow">BlueBook</a>, в которой описана объектная модель COSEM, и в <a href="https://www.dlms.com/files/Green_Book_Edition_9-Excerpt.pdf" rel="nofollow">GreenBook</a>, в которой описан протокол прикладного уровня DLMS.</p>
 <br> 
 <h4 id="r1">Разделение значений на динамические и статические</h4>
 <br> 
 <p>Объекты COSEM представляют данные, которые содержатся в атрибутах и включают в себя:</p>
 <br> 
 <ul> 
  <li>атрибут <code>logical_name</code>, который вместе с другими атрибутами определяет смысловое значение каждого элемента данных;</li> 
  <li>атрибут <code>value</code>, представляющий значение параметра или значение, полученное в результате вычислений или измерений;</li> 
  <li>и другие атрибуты, представляющие метаданные, например, множители, единицы измерений, метки времени, статус и т.п. </li> 
 </ul>
 <br> 
 <p>Некоторые метаданные могут храниться в отдельных объектах COSEM, например, серийный номер прибора учёта, номер договора, цена за единицу и т.п.</p>
 <br> 
 <p>Значения, полученные в результате вычислений или измерений, как правило являются динамическими, поэтому их приходиться передавать довольно часто. Метаданные, как правило статичны, поэтому их достаточно передать один раз, или во всяком случае передавать не так часто. </p>
 <br> 
 <p>Разделение значений на динамические и статические значительно повышает эффективность за счёт сокращения объема передаваемых данных.</p>
 <br> 
 <h4 id="r2">Агрегирование данных</h4>
 <br> 
 <p>Данный способ позволяет собрать любую комбинацию данных (значений атрибутов) в одном атрибуте. Таким образом доступ к данным может быть осуществлен за один вызов сервиса DLMS, что позволяет сократить количество сообщений при обмене данными. Агрегирование данных доступно c:</p>
 <br> 
 <ul> 
  <li>объектами интерфейсного класса «Profile Generic», позволяющие захватывать значения нескольких атрибутов и сохранять их в атрибуте <code>buffer</code>, с заданной периодичностью или при возникновении определенных событий. Значения в атрибуте <code>buffer</code> представляются в виде таблицы, имеющей несколько столбцов и строк/записей. Например, объектами данного интерфейсного класса являются: профиль нагрузки, журнал событий, профиль мгновенных значений;</li> 
  <li>объектами интерфейсного класса «Data Protection», позволяющие защитить значения агрегированных атрибутов криптографическими методами;</li> 
  <li>объектами интерфейсного класса «Register table», позволяющие захватывать однотипные значения, представляя их в табличном виде. Например, объекты данного интерфейсного класса могут захватывать значения, связанные с гармониками, фазовыми углами, составом газа;</li> 
  <li>объектами интерфейсного класса «Compact data», позволяющие захватывать не кодированные данные, которые затем могут быть загружены в предопределенный шаблон; см. <a href="#r6">ниже</a>.</li> 
 </ul>
 <br> 
 <h4 id="r3">Использование селективной выборки</h4>
 <br> 
 <p>Когда данные уже агрегированы, может потребоваться выбрать только часть данных, например, для того чтобы получить только те данные, которые интересны именно сейчас или восстановить потерянные данные. Селективная выборка может быть абсолютной, например, когда указан временной интервал или диапазон записей, или относительной, например, относительно текущего времени или текущей записи. Селективная выборка доступна в объектах классов «Profile generic», «Data protection» и «Compact data». </p>
 <br> 
 <h4 id="r4">Использование NULL-data сжатия</h4>
 <br> 
 <p><code>NULL-data</code> сжатие эффективно при передаче массивов данных, подобных тем, что содержатся в атрибуте <code>buffer</code> объектов класса «Profile Generic», хранящие профиль нагрузки или журнал событий. Если текущие значения данных могут быть определенны из их предыдущих значений, то они заменяются на <code>null-data</code>, размер которого равен одному байту. Потому что значения данных либо не изменились (например, при чтении регистра или статуса было получено значение, равное предыдущему), либо эти изменения известны (например, в случае с метками времени, когда задано определённое расписание).</p>
 <br> 
 <p>В разработке находится более совершенный способ, так называемое <code>delta-array</code> сжатие. Оно также применимо для передачи массивов данных и позволяет динамически использовать максимально короткий тип данных в зависимости от изменения значения. </p>
 <br> 
 <p>Например, значение <code>long-64-unsigned</code>, которое занимает 9 байт (включая тег), может быть заменено на значение <code>delta-unsigned</code>, которое занимает всего 2 байта, если его изменение было небольшим. </p>
 <br> 
 <p>Оба способа значительно сокращают размер сообщений.</p>
 <br> 
 <h4 id="r5">Использование данных типа compact-array</h4>
 <br> 
 <p>Тип <code>compact-array</code> применим, когда массив содержит однотипные данные. В этом случае, типы данных, одинаковые для каждого элемента массива, передаются только один раз в виде одного значения. Данный способ повышения эффективности значительно сокращает накладные расходы, связанные с кодированием значений.</p>
 <br> 
 <h4 id="r6">Использование интерфейсного класса «Compact data»</h4>
 <br> 
 <p>Интерфейсный класс «Compact data», который уже упоминался выше, разработан с целью захвата не кодированных данных в атрибут <code>compact_buffer</code>. Захватываемые данные могут иметь простой или сложный тип, кроме того к ним применима селективная выборка. Например, можно захватить атрибуты <code>buffer</code> объектов интерфейсного класса «Profile generic» в объекты класса «Compact data».</p>
 <br> 
 <p>Тип и длина каждого элемента не кодированных данных описываются в шаблоне, который является значением атрибута <code>template_description</code>. Каждый шаблон имеет свой уникальный идентификатор <code>template_id</code>. В атрибуте <code>compact_buffer</code> содержатся как не кодированные данные, так и идентификатор <code>template_id</code>. Значение атрибута <code>compact_buffer</code> может быть прочитано по запросу клиента или отправлено ему в виде инициативного сообщения. </p>
 <br> 
 <p>Данный способ повышения эффективности практически полностью устраняет накладные расходы на кодирование, сокращая их до одного байта. </p>
 <br> 
 <h4 id="r7">Агрегирование сервисов</h4>
 <br> 
 <p>Сервисы DLMS – это средства для доступа к атрибутам и методам объекта COSEM. Запросы содержат ссылку на атрибут или метод, а ответы – результат операции. Запросы и ответы также могут содержать данные.</p>
 <br> 
 <p>Агрегирование сервисов означает, что с помощью одного запроса/ответа можно обратиться к нескольким атрибутам и/или методам. Данный способ сокращает количество информационных обменов, необходимых для выполнения всех требуемых операций. </p>
 <br> 
 <p>Сервисы типа <code>WITH-LIST</code> позволяют агрегировать сервисы одного и того же типа. Они доступны с сервисами <code>GET</code>, <code>SET</code>, <code>ACTION</code>, <code>READ</code>, <code>WRITE</code> и <code>UnconfirmedWrite</code>. Запросы типа <code>WITH-LIST</code> содержат список ссылок на атрибуты/методы и соответствующий им список данных, а ответы типа <code>WITH-LIST</code> – список результатов и список данных, если таковые есть. </p>
 <br> 
 <p>Сервис <code>ACCESS</code> объединяет сервисы <code>GET-SET-ACTION</code>, предоставляя тем самым возможность чтения и записи атрибутов, а также вызова некоторого числа методов, за один запрос/ответ.</p>
 <br> 
 <h4 id="r8">Использование составных сообщений</h4>
 <br> 
 <p>Превосходный способ повышения эффективности на прикладном уровне стека DLMS/COSEM предоставляет концепция составных сообщений. Она сочетает в себе несколько этапов процесса, который позволяет сократить как размер сообщения, так и количество информационных обменов, обеспечивая тем самым оптимальное использование пропускной способности канала связи. Схема, иллюстрирующая данную концепцию, приведена на <em>рис. 1</em>.<br> <img src="https://habrastorage.org/webt/gr/dr/36/grdr36cxsbvyrduq22gqlre4rk8.png"><br> Рисунок 1 — Составные сообщения</p>
 <br> 
 <p>На первом этапе кодируется xDLMS APDU, представляющий собой один сервис или несколько агрегированных сервисов прикладного уровня DLMS. APDU содержит данные, которые могут быть оптимизированы с помощью одного или нескольких способов повышения эффективности на уровне объектной модели COSEM, о которых было сказано выше. </p>
 <br> 
 <p>На втором этапе возможно сжатие данных с применением алгоритма V.44.</p>
 <br> 
 <p>На третьем этапе, по мере необходимости, возможно применение одного или нескольких уровней криптографической защиты для обеспечения конфиденциальности, подлинности и целостности передаваемых данных. Полученный APDU может быть передан с помощью механизма <code>General Block Transfer</code> в виде блоков данных. <code>General Block Transfer</code> позволяет осуществлять двунаправленный обмен данными, потоковую передачу и восстанавливать потерянные блоки данных.</p>
 <br> 
 <h4 id="r9">Использование предустановленных и неразрывных ассоциаций приложений</h4>
 <br> 
 <p>Обмен данными в DLMS/COSEM осуществляется в рамках логического соединения между клиентом и сервером, так называемой ассоциации приложений. В ассоциации приложений идентифицируются партнеры (клиент и сервер) и определяется контекст взаимодействия в рамках сеанса связи, который включает информацию об использовании/неиспользовании криптографической защиты данных, список доступных сервисов и максимальный размер сообщений прикладного уровня. </p>
 <br> 
 <p>В начале сеанса связи устанавливается ассоциация приложений и при необходимости осуществляется аутентификация двух взаимодействующих узлов. В конце сеанса связи эта ассоциация разрывается. Схематично процесс обмена данными между клиентом и сервером показан на <em>рис. 2</em>.<br> <img src="https://habrastorage.org/webt/ka/fi/qu/kafiqueb5kv6ytns4ahksidtgrs.png"><br> Рисунок 2 — Схема сеанса связи с явно установленным и предустановленным логическим соединением </p>
 <br> 
 <p>В сетях с нестабильной связью соединение между клиентом и сервером может пропадать. При этом, когда теряется соединение на уровне протоколов, обеспечивающих передачу данных прикладного уровня DLMS, то явно установленная ассоциация приложений также разрывается.</p>
 <br> 
 <p>Неразрывная ассоциация приложений позволяет продолжить информационный обмен при восстановлении соединения, без необходимости её повторной установки. Если требуется изменить её контекст, то в этом случае она принудительно разрывается и устанавливается заново с новым контекстом.</p>
 <br> 
 <p>Предустановленная ассоциация приложений позволяет вовсе исключить процедуры, связанные с установкой и разрывом логического соединения между клиентом и сервером, если стороны информационного обмена заранее согласовали контекст взаимодействия, например, в соответствующей спецификации. Предустановленные ассоциации, в отличии от неразрывных, не могут быть разорваны.</p>
 <br> 
 <p>Оба способа повышения эффективности позволяют уменьшить или вовсе исключить процедуры, связанные с установкой и разрывом логического соединения между клиентом и сервером.</p>
 <br> 
 <h4 id="r10">Использование инициативных сообщений</h4>
 <br> 
 <p>В DLMS/COSEM определены два вида операций, как показано на <em>рис. 3</em>:<br> <img src="https://habrastorage.org/webt/u1/4v/jr/u14vjrsethbokwhzbgwka6tlymk.png"><br> Рисунок 3 — Операции ЗАПРОС-ОТВЕТ и инициативные сообщения</p>
 <br> 
 <ul> 
  <li>Операция ЗАПРОС-ОТВЕТ, при которой клиент (например, устройство сбора и передачи данных) отправляет ЗАПРОС серверу (например, прибор учёта), а сервер отправляет ОТВЕТ клиенту. К этому виду операций относятся следующие сервисы: <code>GET</code>, <code>SET</code>, <code>ACTION</code>, <code>ACCESS</code> и <code>Read/Write</code>;</li> 
  <li>Инициативные сообщения – когда при определенных условиях, сервер отправляет определенным адресатам определенный набор данных. Клиент может в любой момент времени изменить те самые условия, адресаты и набор данных. Инициативные сообщения генерируются внутри сервера, при этом не требуется операции ЗАПРОС со стороны клиента. Однако клиент может удаленно инициировать в сервере процедуру передачи инициативного сообщения, например, для получения недостающих данных. </li> 
 </ul>
 <br> 
 <p>Для отправки инициативных сообщений используется сервис <code>DataNotification</code> и применяется способ повышения эффективности, описанный в разделе <a href="#r8">«Использование составных сообщений»</a>.</p>
 <br> 
 <h4 id="r11">Использование широковещательных и многоадресных сообщений</h4>
 <br> 
 <p>Широковещательные и многоадресные сообщения используются для отправки данных с головной системы в множество конечных устройств, с помощью одного запроса. При условии, что среда передачи данных позволяет это делать. Такие сообщения могут быть использованы, например, для рассылки тарифного расписания, синхронизации часов и т.п.<br> <img src="https://habrastorage.org/webt/1z/gp/gp/1zgpgpripfmgn-ilw-uxb04fmp0.png"><br> Кроме того, они могут применяться вместе с механизмом передачи образа «прошивки», который используется для загрузки и активации нового образа «прошивки» в группе устройств. Он позволяет восстанавливать потерянные блоки данных и гарантирует идентичность переданного и принятого образов «прошивок».</p>
 <br> 
 <h3 id="zaklyuchenie">Заключение</h3>
 <br> 
 <p>Варианты применения в которых осуществлялось чтение больших объемов данных, включая значение атрибута <code>object_list</code> объекта интерфейсного класса «Association LN», чтение или инициативная передача профиля нагрузки для нескольких измерительных каналов вместе со статусной информацией и меткой времени, обновление образа «прошивки» с применением потоковой передачи и широковещательных или многоадресных сообщений, показали сокращение объема передаваемых данных до 10 раз и снижение количества информационных обменов, при использовании приведенных способов повышения эффективности.<br> <img src="https://habrastorage.org/webt/ox/8s/kz/ox8skza0wca2-0vntohq4ouycny.png"></p>
</div>', '2020-11-27 14:23:00', 'Эффективное применение DLMS/COSEM в больших системах с ограниченными ресурсами', 79, null, 6),
        (2, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <p>Бывает такой заходишь на почту и видишь очередную подборку статей, которые никогда не прочитаешь, но тут так сошлись звезды, что и открыл статью, и прочел, и придумал, где на практике пригодится. А теперь хочу поделиться статьей с Хабром, чтобы если кому-то нужен будет простой и понятный гайд по работе с изображениями на Python — пожалуйста. </p>
 <br> 
 <p><a href="https://pillow.readthedocs.io/en/stable/" rel="nofollow">Pillow</a> — это свободно распространяемая библиотека для работы с изображениями (<em>далее Imaging Library</em>) на <strong>Python</strong> с открытым исходным кодом, которая добавляет вашему коду поддержку открытия, изменения и сохранения изображений в различных расширениях.</p><a name="habracut"></a>
 <br> 
 <h3 id="davayte-nachnem">Давайте начнем</h3>
 <br> 
 <p>Самый важный класс в Imaging Library Python — это класс Image, определенный в одноименном модуле. Мы используем open(), чтобы открыть изображение в нашей локальной директории, как показано ниже:</p>
 <br> 
 <pre><code class="python">from PIL import Image
sample = Image.open(''pena.jpg'')</code></pre>
 <br> 
 <p>Это просто! Теперь вы умеете считывать изображения с помощью <strong>Pillow</strong>, а значит можно приступать к обработке изображения с его помощью. Вы также можете проверить тип изображения, которое мы только что загрузили.</p>
 <br> 
 <pre><code class="python">type(sample)
PIL.JpegImagePlugin.JpegImageFile</code></pre>
 <br> 
 <p>Вы можете посмотреть свойства изображения, например: </p>
 <br> 
 <ul> 
  <li>формат</li> 
  <li>размер</li> 
  <li>цветовой режим</li> 
 </ul>
 <br> 
 <pre><code class="python">sample.format
''JPEG''
sample.size
(640, 640)
sample.mode
''RGB''</code></pre>
 <br> 
 <p>Кроме того, вы можете вывести на экран изображение, используя метод <em>show</em></p>
 <br> 
 <pre><code class="python">sample.show() #Открывает в новом окне, расширение изображения меняется на PNG</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/y3/dj/vb/y3djvbqsq0cotkez16uocp-nafg.jpeg"></p>
 <br> 
 <h3 id="konvertirovanie-rasshireniya-izobrazheniya">Конвертирование расширения изображения</h3>
 <br> 
 <p>Когда вы закончите работать с изображением при помощи библиотеки <strong>Pillow</strong>&nbsp; в изначальном расширении, вы можете пересохранить его в других форматах, например, их jpg сделать png или многие другие.</p>
 <br> 
 <p>Для примера, давайте попробуем написать простую программу на Python для преобразования всех изображений в каталоге вашего проекта, которые находятся в формате jpg, в формат png.</p>
 <br> 
 <pre><code class="python">import os
import sys
from PIL import Image
jpg_images = [image for image in os.listdir() if image.endswith(''.jpg'')]
for jpg_image in jpg_images:
    try:
        new_name = jpg_image.split(''.'')[0] + ''.png''
        Image.open(jpg_image).save(new_name)
    except IOError as error:
        print(''Couldn\\''t read {} ''.format(jpg_image))</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/om/ov/qn/omovqnxdlw-avcd7abgpliu2nmq.jpeg"></p>
 <br> 
 <p>После того, как вы запустите приведенный выше код, в каталоге проекта, состоящем из изображений в формате jpg, откроются все изображения и преобразуются в .png, как показано на скриншоте. Вы можете повторить тот же процесс для преобразования изображений в другие преобразований.</p>
 <br> 
 <h3 id="obrezka-izobrazheniya">Обрезка изображения</h3>
 <br> 
 <p><strong>Pillow</strong> также может использоваться для обрезки изображения, при этом вы можете получить производный прямоугольник выбранного изображения, указав координаты, по которым преобразовать изображение.</p>
 <br> 
 <pre><code class="python">from PIL import Image
picture = Image.open(''pena.png'')
cord = (10, 10, 640, 340) # лево, верх, право, низ
new_picture = picture.crop(cord)
new_picture.show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/al/ja/lx/aljalxt3ejzshxjmjtlpnuf0ssa.jpeg"></p>
 <br> 
 <p>Как мы видим, изображение было успешно обрезано. Координаты обрезанной поверхности представлены диагональными координатами.</p>
 <br> 
 <p>При этом первые две точки находятся (x, y) от верхней левой диагональной точки, а следующие две точки (x2, y2) также являются диагональной точкой снизу справа.</p>
 <br> 
 <h3 id="geometricheskoe-preobrazovanie">Геометрическое преобразование</h3>
 <br> 
 <p>С помощью <strong>Pillow</strong> мы можем выполнять некоторые геометрические преобразования над изображением, включая изменение размера и поворот изображения.</p>
 <br> 
 <p>Эти знания играют большую роль при генерации данных для глубокого обучения путем преобразования одного изображения в тонны других изображений с разных ракурсов.</p>
 <br> 
 <h3 id="izmenenie-razmera-izobrazheniya">Изменение размера изображения</h3>
 <br> 
 <pre><code class="python">from PIL import Image
image = Image.open(''pena.png'')
resized_image = image.resize((320, 320))
resized_image.save(''resized.png'')</code></pre>
 <br> 
 <p>Когда вы запустите приведенный выше код, вы должны увидеть новое изображение с измененным размером в вашем каталоге с размером <strong>320 на 320</strong>.</p>
 <br> 
 <h3 id="povorot-izobrazheniya">Поворот изображения</h3>
 <br> 
 <pre><code class="python">from PIL import Image
image = Image.open(''pena.png'')
rotated_img = image.rotate(80)
rotated_img.save(''./rotation/rotated_img.png'')</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/bm/6f/wr/bm6fwrsbit58pjoc6jyw5iimg88.jpeg"></p>
 <br> 
 <p>Используйте функцию вращения для создания 360 изображений одного из того же изображения под разными углами — это поможет сгенерировать данные, которые вы потенциально можете использовать для обучения своей модели глубокого обучения.</p>
 <br> 
 <h3 id="generator-izobrazheniy">Генератор изображений</h3>
 <br> 
 <pre><code class="python">from PIL import Image 
images = [''pena.jpg'']
for img in images:
    try:
        org_img = Image.open(img)
        for angle in range(1, 361):
            image_name = str(angle)+''.jpg''
            new_img = org_img.rotate(angle)
            new_img.save(''./rotation/''+image_name)
    except IOError:
        print(''Couldn\\''t read {}''.format(img))</code></pre>
 <br> 
 <p>После запуска скрипта, вы должны увидеть 360 изображений одного и того же исходного изображения с разным поворотом, как показано ниже.</p>
 <br> 
 <p><img src="https://habrastorage.org/webt/0n/4b/es/0n4besqzxbogm_kie2ajdfxocww.jpeg"></p>
 <br> 
 <h3 id="filtraciya-izobrazheniy">Фильтрация изображений</h3>
 <br> 
 <p><strong>Фильтрация</strong> — это метод изменения или улучшения изображения. Например, вы можете отфильтровать изображение, чтобы выделить определенные особенности или удалить другие.</p>
 <br> 
 <p>Фильтрация изображений используется для получения различных результатов, как, например,- сглаживание, повышение резкости, удаление шума и обнаружение краев.</p>
 <br> 
 <p>В библиотеке <strong>Pillow</strong> доступно множество фильтров, включая BLUR, BoxBlur, CONTOUR, FIND_EDGES, Filter, GaussianBlur, Kernel, MaxFilter, MedianFilter, SHARPEN, SMOOTH и т.д.</p>
 <br> 
 <h3 id="primer-ispolzovaniya">Пример использования</h3>
 <br> 
 <p>Давайте попробуем найти края на изображении ниже, используя фильтр FIND_EDGES.</p>
 <br> 
 <pre><code class="python">from PIL import Image
from PIL import Image, ImageFilter
image = Image.open(''pena.jpg'')
edges = image.filter(ImageFilter.FIND_EDGES)
edges.show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/to/xw/v9/toxwv9f2ykc9dorn17ii35ftf0o.jpeg"></p>
 <br> 
 <p>Таким же образом вы можете экспериментировать с другими фильтрами в Python библиотеке <strong>Pillow</strong> в зависимости от того, что вы пытаетесь сделать.</p>
 <br> 
 <h3 id="chtenie-izobrazheniya-iz-otkrytogo-fayla">Чтение изображения из открытого файла</h3>
 <br> 
 <p>Кроме того, вы можете использовать <strong>Pillow</strong> для чтения изображения из файлового объекта Python, как показано ниже</p>
 <br> 
 <pre><code class="python">from PIL import Image
image = Image.open(open(''pena.jpg'', ''rb''))</code></pre>
 <br> 
 <h3 id="chtenie-izobrazheniya-iz-url">Чтение изображения из URL</h3>
 <br> 
 <p>В этом случае вам придется использовать <strong>Pillow</strong> в сочетании с запросами. Запросы должны будут отправлять GET-request на сервер, чтобы получить необработанные байты изображения, а уже <strong>Pillow</strong> считает эти байты.</p>
 <br> 
 <pre><code class="python">import requests
from PIL import Image
url = ''http://pena.marketing/images/Logo1.png''
raw = requests.get(url, stream=True).raw
Image.open(raw).show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/km/je/tj/kmjetjqgc43mob32lawa8uzg8jg.jpeg"></p>
 <br> 
 <h3 id="sozdanie-novyh-izobrazheniy">Создание новых изображений</h3>
 <br> 
 <p>С помощью <strong>Pillow</strong> вы также можете создать новое пустое изображение, которое может понадобиться для различных целей. Используйте <strong>Image.new()</strong> для создания совершенно нового изображения.</p>
 <br> 
 <p><strong>Синтаксис</strong>:</p>
 <br> 
 <pre><code class="python">new = Image.new(mode, shape, color)</code></pre>
 <br> 
 <p><strong>Пример использования</strong>:</p>
 <br> 
 <pre><code class="python">from PIL import Image
new_img = Image.new(''RGB'', (500, 500), ''blue'')
new_img.show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/0s/cu/du/0scudu3xgec0a5a_gl9y12sd-tw.jpeg"></p>
 <br> 
 <h3 id="risovanie-pryamougolnikov-na-izobrazheniyah">Рисование прямоугольников на изображениях</h3>
 <br> 
 <p><strong>Pillow</strong> также может использоваться для рисования прямоугольника на изображениях. Обычно это делают при обнаружении объекта. При этом вы можете нарисовать не просто прямоугольник, а рамку над обнаруженным объектом.</p>
 <br> 
 <h3 id="primer-ispolzovaniya-1">Пример исползования</h3>
 <br> 
 <p>Давайте попробуем нарисовать прямоугольную рамку внутри пустого изображения.</p>
 <br> 
 <pre><code class="python">from PIL import Image, ImageDraw
new_img = Image.new(''RGB'', (400, 400), ''black'')
pencil = ImageDraw.Draw(new_img)
pencil.rectangle((200, 50, 300, 300), fill =''green'')
new_img.show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/sd/_d/qu/sd_dqufizi5z7blob0ttjljcbu8.jpeg"></p>
 <br> 
 <p>Первые две координаты представляют (x, y) левой верхней части, а следующие две (x2, y2) представляют координатную точку правой нижней части.</p>
 <br> 
 <h3 id="risovanie-teksta-na-izobrazheniyah">Рисование текста на изображениях</h3>
 <br> 
 <p>Мы также можем использовать библиотеку <strong>Pillow</strong> для рисования текста на изображениях.</p>
 <br> 
 <pre><code class="python">from PIL import Image , ImageDraw, ImageFont 
new_img = Image.new(''RGB'', (200, 200), ''black'')
font = ImageFont.load_default()
pencil = ImageDraw.Draw(new_img)
pencil.text((100,100),''Hello World'',  font=font, fill=''blue'', size = 36)
new_img.show()</code></pre>
 <br> 
 <p><img src="https://habrastorage.org/webt/u3/ll/iw/u3lliwm5au3oglbinftlpzyx8cu.jpeg"></p>
 <br> 
 <p><strong>Ссылки:</strong></p>
 <br> 
 <ul> 
  <li><a href="https://kalebujordan.com/a-brief-introduction-to-python-pillow/" rel="nofollow">Оригинал статьи</a></li> 
  <li><a href="https://pillow.readthedocs.io/en/stable/" rel="nofollow">Библиотека Pillow</a></li> 
  <li><a href="https://clck.ru/SFKFA" rel="nofollow">Jupyter Notebook с переведённой статьей и примерами кода</a></li> 
 </ul>
</div>', '2020-12-01 16:28:00', 'Введение в обработку изображений в Python при помощи Pillow', 2, null, 4),
        (3, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/df/ng/cj/dfngcj2k1cnzkqjoutagnb-9trc.png">
 <br> 
 <br> Коллеги, добрый день!
 <br> 
 <br> Мы продолжаем цикл статей про решения <a href="https://www.ptsecurity.com/ru-ru/">Positive Technologies</a>, разработчика инновационных средств защиты и лидера в области противодействия актуальным киберугрозам. Сегодня поговорим о системе контроля защищенности и соответствия стандартам <a href="https://tssolution.ru/katalog/positive-technologies/maxpatrol-8">MaxPatrol 8</a> и о том, с чего стоит начать работу при внедрении продукта.
 <br> <a name="habracut"></a>
 <br> Для начала пару слов о конфигурации.
 <br> 
 <br> В минимальном варианте MaxPatrol 8 представляет из себя лицензию сервера с модулем сканирования в режиме Pentest. Модули Audit и Compliance лицензируются отдельно. При заполнении вами опросника сотрудники Positive Technologies рассчитывают необходимый вам вариант конфигурации, в который могут быть включены дополнительные сканеры для ускорения процесса сканирования больших сетей, мобильные сканеры, размещенные на ноутбуках для возможности сканирования филиалов при маленькой пропускной способности канала или полного его отсутствия, а также сервера консолидации и обновления.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/6a/cd/bi/6acdbi14dpkyfmqgcduiifj4abg.png">
 <br> 
 <br> Итак, вы приобрели решение, произвели установку и активацию лицензии, что дальше?
 <br> В первую очередь вам необходимо определить для себя существует ли необходимость разделения полномочий для пользователей MaxPatrol 8. В случае необходимости рекомендуется создать различные группы пользователей, например “Администраторы ИТ” и “Администраторы ИБ”. Также можно создать отдельные роли для администраторов филиалов. 
 <br> 
 <br> Для грамотной настройки системы в MaxPatrol 8 предусмотрена ролевая модель. Role-BAC позволяет гибко настроить доступ к нужным разделам соответствующим пользователям.
 <br> 
 <br> Так, например, ИТ-персонал может получить доступ в систему и настроить пул активов, которые необходимо сканировать, при этом осуществлять сканирования такая роль не сможет.
 <br> 
 <br> MaxPatrol 8 имеет крайне гибкую настройку привилегий как отдельных учетных записей, так и групп пользователей, например:
 <br> 
 <br> 
 <ol> 
  <li>Настройки сервера (изменение, обновление, консолидация)</li> 
  <li>Создание учетных записей, используемых для сканирования активов</li> 
  <li>Создание и редактирование профилей сканирования</li> 
  <li>Создание и редактирование задач сканирования с разделением доступа к активам и сканерам</li> 
  <li>Создание и редактирование стандартов</li> 
  <li>Доступ к результатам сканирования</li> 
  <li>Создание и редактирование шаблонов отчетов, а также выпуск самих отчетов</li> 
 </ol>
 <br> 
 <img src="https://habrastorage.org/webt/jl/c3/bu/jlc3buzevk9i_4ur-loxqibnav4.png">
 <br> 
 <br> Итак, вы разделили полномочия управления системой. Что дальше?
 <br> Следующим этапом является заведение активов в систему. Это можно выполнить несколькими способами, путем:
 <br> 
 <br> 
 <ol> 
  <li>Ручного заведения активов</li> 
  <li>Импорта узлов из Active Directory</li> 
  <li>В режиме Host Discovery</li> 
  <li>Используя профиль сканирования Pentest Inventory</li> 
 </ol>
 <br> <b>Ручное заведение</b> — позволяет подключить специфические активы не под управлением Windows. Заводить вручную весь перечень активов имеет смысл при небольшом количестве активов.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ax/rm/t_/axrmt_1qxjpkrhyxa-e54buff-w.png">
 <br> 
 <br> <b>Импорт узлов из Active Directory</b> — наиболее подходящий вариант для заведения Windows-активов. Импорт происходит посредством LDAP-запроса к серверу Active Directory. Соответственно необходимо иметь учетную запись для доступа к Active Directory.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wh/q0/08/whq008ltfnrki2y2aka_-qvtk5e.png">
 <br> 
 <br> <b>Режим Host Discovery</b> — производит поиск активов методом ICMP и TCP ping по заданному пулу адресов. При включении “Определение операционной системы” и “Определение имен” появляется возможность разделить в адресном пространстве активы по операционным системам.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/of/op/4j/ofop4jlg2bkctg09vnbggj_epi8.png">
 <br> 
 <br> <b>Профиль сканирования Pentest Inventory</b> — предназначен для обнаружения работающих узлов и открытых на них портов, а также определения служб (сервисов) и проведения инвентаризационных проверок.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/cm/pw/pz/cmpwpzuglqmyintarsrzlsfagu0.png">
 <br> 
 <br> Итак, активы заведены в систему, что дальше?
 <br> 
 <br> Дальше необходимо создать и завести в MaxPatrol 8 учетные записи для сканирования в режимах Audit и Compliance (подробнее о режимах сканирования можно будет прочитать в следующих статьях данного цикла материалов).
 <br> 
 <br> Для доменных активов необходима одна учетная запись с правами локального администратора.
 <br> Для всех не доменных активов при отсутствии централизованных систем аутентификации придется создавать локальные учетные записи с необходимыми привилегиями.
 <br> 
 <br> При большом количестве активов процесс становится долгим и непростым, но руководство администратора поможет вам настроить все необходимые учетные записи и завести их в MaxPatrol 8, кроме того есть примеры скриптов настройки учетных записей для различных систем. Но следует помнить, что учетные записи создают администраторы, для специалистов по ИБ важно согласовать создание таких учетных записей. В данном случае рекомендуется выстраивать правильные регламентированные отношения с администраторами IT, так как от таких отношений зависит правильное функционирование процесса в целом.
 <br> 
 <br> IT-отдел — важный игрок в данном случае, они настраивают системы, открывают доступы, согласуют время сканирования, устраняют уязвимости. Более того, речь не только о создании учетных записей, но и о подготовке систем для сканирования, так как для этого необходимо предоставить доступы по портам и т.д. Все это делают администраторы. Задача специалиста по ИБ подготовить необходимую информацию, и добиться того, чтобы узлы сканировались в полном объеме.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/8x/kr/ls/8xkrlsdmivrgqm2-k-9mamct6ii.png">
 <br> 
 <br> В результате кропотливой работы мы наконец можем начать сканирование, но об этом более подробно расскажем в следующих статьях данного цикла.
</div>', '2020-12-07 12:36:00', 'MaxPatrol 8 — с чего начать?', 40, null, 6),
        (4, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 В последнее время часто попадаются на глаза статьи о новых языках программирования, а так же различные рейтинги и прогнозы, связанные с популярностью компьютерных языков. 
 <br> 
 <br> Заявляют о себе и новые <a href="https://habr.com/ru/company/testo_lang/blog/521682/">инструментальные средства</a>, которые в своей работе используют собственные форматы описания конфигурационных файлов или последовательности выполняемых команд, которые так же очень сильно приближает их к понятию «язык программирования».
 <br> 
 <br> Цель написания данной статьи — формулировка ожиданий и возможной реализации абстрактного языка программирования, который может стать универсальным инструментом для общения между компьютером и человеком.
 <br> <a name="habracut"></a>
 <br> 
 <h2>О программистах.</h2>
 <br> Если начинать с самого начала, то когда-то давно я слышал перефразированное высказывание, «каждый программист должен написать свою базу данных, текстовый редактор и язык программирования». И если первые две вещи я уже давным давно написал, то с языком программирования пока не сложилось.
 <br> 
 <br> Ведь как обычно создаются языки программирования?
 <br> 
 <br> У каждого программиста всегда есть какой-то своей предыдущий опыт:
 <br> 
 <br> 
 <ul> 
  <li>знания одного или нескольких языков программирования (как же без этого)</li> 
  <li>негативный опыт от их использования (в противном случае, если все устраивает, то зачем придумывать что-то новое?)</li> 
  <li>желания получить новые возможности (когда в существующих языках чего-то не хватает).</li> 
 </ul>
 <br> А перед тем, как описывать синтаксис, выбирать ключевые слова и начинать основную работу: лексер, парсер, базовые библиотеки, нужно дать ответ на основные вопросы: 
 <br> 
 <br> 
 <ul> 
  <li>Компилятор/интерпретатор/транспилятор(transpiler)?</li> 
  <li>Статическая или динамическая типизация?</li> 
  <li>Ручное управление памятью или автоматическое со сборщиком мусора?</li> 
  <li>Модель программирования: ООП, функциональное, структурное или что-то новое?</li> 
  <li>Разрешены ли вставки из других языков программирования и т. д.?</li> 
 </ul>
 <br> У меня, наверно, как и у большинства читателей, присутствует опыт использования нескольких языков программирования. Поэтому давно сложилось практика, что для решения задачи лучше взять известный язык или даже выучить новый, вместо того, чтобы начинать писать собственный.
 <br> 
 <br> Тем более, что не хочется придумывать еще один язык просто ради галочки или ради самого языка. Я считаю, что цель его создания должна быть за пределами потребностей самого разработчика.
 <br> 
 <br> И мне кажется, что удалось определить область, для которой разработка языка программирования может быть востребованной, а потраченные на него усилия могут принести реальную пользу.
 <br> 
 <br> 
 <h2>О не программистах.</h2>
 <br> Эта область — программирование для «не программистов» на «естественном» языке. Я специально взял слова «не программистов» и «естественном» в кавычки, т.к. эти термины являются очень условными.
 <br> 
 <br> Ведь если не программист начинает программировать, то сам того не осознавая, он автоматически становится программистом ;-). А «естественным» язык программирования быть не может по определению. Точнее для компьютеров скорее всего «естественным» будет язык Assembler или набор машинных команд.
 <br> 
 <br> 
 <blockquote>
  Поэтому, цель максимум — приблизить язык программирования к естественному человеческому языку. 
  <br> 
 </blockquote>
 <br> Это не только сделает чтение текста программы более понятным для не профессионалов, но и позволит начинать составлять программы просто освоив письменную речь, используя самый минимум основных правил.
 <br> 
 <br> Но в подобной формулировке кроется очень большая проблема!
 <br> 
 <br> 
 <blockquote>
  Любой язык программирования является интернациональным, т.к. его синтаксис не зависит от естественного языка, на котором общается программист. 
  <br> 
  <br> А если текст программы будет на «естественном» языке, то она станет понятной только для знающих этот язык, одновременно становясь непонятной для всех остальных.
  <br> 
  <br> В качестве иллюстрации: <a href="http://espressocode.top/natural-language-programming/" rel="nofollow">раз</a> или <a href="https://habr.com/ru/post/268401/">два</a>.
 </blockquote>
 <br> Если пофантазировать насчет хотелок к такому языку, то видятся следующие требования и ограничения:
 <br> 
 <br> 
 <ul> 
  <li>Так как каждый пользователь является носителем своего родного естественного языка (или даже нескольких), то жестко задавать ключевые слова невозможно, из чего следует, что основой такого языка должны стать только правила пунктуации, но никак не лексика или грамматика.</li> 
  <li>Компилятор/транслятор должен уметь преобразовывать исходный текст программы не только в машинный код для компьютера, но в другой вариант «естественного» языка, чтобы пользователь мог работать с исходным текстом на известном ему «естественном» языке.</li> 
  <li>Очень хочется видеть в новом языке <s>толерантность</s> терпимость к очепяткам. Подобная «фича» присутствует в письме на естественном языке, и несмотря на наличие опечаток, практически всегда сохраняется смысл. Естественно, в данном случае не стоит доходить до фанатизма. Компилятор не читает мысли и не может в действительности «понять», что имел ввиду пользователь, и все же довольно часто можно игнорировать опечатки в тексте программы исходя из контекста (пусть и с выводом предупреждающих сообщений).</li> 
 </ul>
 <br> Тем не менее, такой язык должен оставаться именно языком программирования со всеми возможностями создания программ любого уровня сложности, включая функциональное и объектно-ориентированное программирование и однозначное понимание написанного.
 <br> 
 <br> 
 <h2>О гипотетическом языке</h2>
 <br> Если взять за основу правила письменной речи, то основные соглашения и пунктуация для нового языка могут выглядеть примерно так:
 <br> 
 <br> 
 <ul> 
  <li>Любой текст состоит из предложений и комментариев. Предложения обрабатываются, а комментарии игнорируются.</li> 
  <li>Предложение состоит из последовательности терминов, литералов и символов, разделенных пробелами и знаками препинания и завершается символом конца предложения.</li> 
  <li>Термин — слитно написанная последовательность букв, цифр и символов ":" и "_".</li> 
  <li>Литерал — константы, включаемые непосредственно в текст программы, тип которой определяется однозначно. Это символьные строки в кавычках, целые и вещественные числа, и некоторые специальные форматы (время, дата).</li> 
  <li>Символы — все остальное символы, которые не относятся к знакам препинания, пробельным символам, цифрам и буквам.</li> 
  <li>Знаки препинания — символы пунктуации, имеющие специальное значение при разборе текста программы:<br> <br> 
   <ul> 
    <li>«.»,«;»,«!»,«?»,«…» — конец предложения.</li> 
    <li>«=» — присвоение значения.</li> 
    <li>"" (кавычки) — определение символьной строки.</li> 
    <li>«()» — передача параметров/аргументов или группировка операторов для определения приоритета выполнения операций.</li> 
    <li>«[]» — массив или обращение к элементу массива.</li> 
    <li>«{}» — включение в текст исходного кода программы на обычном языке программирования.</li> 
    <li>«$» — системная переменная.</li> 
    <li>«@» — системная функция.</li> 
    <li>«,» (запятая) — перечисление.</li> 
    <li>«:» (двоеточие) — список или логическая связь.</li> 
   </ul></li> 
 </ul>
 <br> Если с символом присвоения, кавычками, круглыми и квадратными скобками все должно быть более-менее понятно, т.к. их назначение соответствует аналогичному в подавляющем большинстве языков программирования, то про назначение остальных символов (фигурных скобок, двоеточия, запятой и системных функций/переменной), следует немного пояснить.
 <br> 
 <br> Раз цель гипотетического языка программирования все же написание программ, то необходимо предусмотреть возможность делать вставки обычного программного кода без учета всех возможностей и неоднозначностей, которые присущи любому естественному языку. 
 <br> 
 <br> Так же эта возможность требуется для реализации низкоуровневых функций и для взаимодействия с внешними библиотеками.
 <br> 
 <br> При создании подобных вставок и могут использоваться фигурные скобки, весь текст между которыми будет вставляться в итоговый файл практически без обработки.
 <br> 
 <br> Для похожих целей служат и символы «$» — системная переменная и «@» — системная функция. Если такой символ поставить в начале слова, тогда он станет обозначать объект с соответствующим назначением. Например «@exit» — будет означать функцию, а «$var» — переменную с соответствующими именами, а сами объекты станут доступны как в обычном коде, так и в программных вставках внутри фигурных скобок.
 <br> 
 <br> Аналогичным образом организуется и доступ к отдельным полям/методам объектов:
 <br> «объект@метод» или «объект$поле».
 <br> 
 <br> Символ запятая «,» применяется для указание последовательности равноправных логических блоков в одном предложении или для создания списков.
 <br> 
 <br> Символ двоеточия «:» используется для создания списков и для обозначения логической связи между двумя частями слова/текста, в том числе для указания полного пути модуля.
 <br> 
 <br> Например, создание списка:
 <br> 
 <br> <code>В_строку: элемент 1, элемент 2, последний элемент.</code>
 <br> <code>Форматированный_список:<br> - элемент 1;<br> - элемент 2;<br> - последний элемент.</code>
 <br> 
 <br> Логическое следствие/указание связи: 
 <br> 
 <br> <code>module:calc //термин «calc», который находится в модуле «module»<br> super:module:example$var //переменная «$var» которая находится в указанной иерархии.<br> </code>
 <br> Как можно заметить, использование знаков препинания взято из их прямого назначения, принятого в письменной речи, что должно обеспечить определенный компромисс между синтаксисом в стандартных языках программирования и письмом на естественном языке.
 <br> 
 <br> 
 <h2>О компьютерах</h2>
 <br> Так как речь идет все же о языке программирования, то не обойтись без стандартных алгоритмических конструкций: следования, ветвления и циклов.
 <br> 
 <br> Следование легко описывается обычными правилам письма на естественном языке. В случае последовательного выполнения в одном предложении, операции и вызовы функций записываются последовательно через запятую. Если они располагаются в разных предложениях, то они записываются так же друг за другом. Причем форматирование по абзацам служит только для лучшего восприятия текста и логического разделения отдельных фрагментов.
 <br> 
 <br> При создании условных и циклических управляющих конструкций уже потребуются ключевые слова. Но так как согласно исходным пожеланиям к языку, резервировать обычные термины для записи алгоритмических конструкций нельзя, то перед ключевыми словами достаточно указывать символ системной функции, что позволит отличить обычный термин от ключевого (управляющего) слова.
 <br> 
 <br> Естественно, при программировании, данными терминами хоть и можно будет пользоваться, но делать это совсем не обязательно. Так как при настройке под конкретный естественный язык, системным функциям и ключевым словам нужно обязательно присвоить конкретные термины и пользоваться уже ими, например:
 <br> 
 <br> <code>перейти = @goto,<br> метка = @label,<br> продолжить = @continue,<br> прервать=@break и т.д.</code>
 <br> 
 <br> И последняя по очереди, но наверно самая важная по сути конструкция: передача параметров при вызовах функций. Если стремиться к полностью естественному синтаксису, тогда мы получим тот самый естественный язык, который очень сложно анализировать.
 <br> 
 <br> Тем не менее, мне кажется, что можно скомбинировать оба два подхода, если отказаться от обязательного использования круглых скобок, там, где это допустимо по синтаксису.
 <br> 
 <br> <code>Компьютерный: функция(параметр1, функция2(), параметр3=значение).<br> Естественный: функция параметр1 функция2 параметр3=значение.</code>
 <br> 
 <br> Но:
 <br> 
 <br> <code>Компьютерный: функция( функция2(параметр) ).<br> Естественный: функция функция2(параметр).<br> Или так: функция (функция2 параметр).</code>
 <br> 
 <br> Другими словами, для естественного порядка указания аргументов, скобки для функций и запятые между параметрами могут быть опущены. Хотя их использование должно определяться в первую очередь целевым естественным языком, а не синтаксисом.
 <br> 
 <br> 
 <h2>О возражениях</h2>
 <br> Предвижу обоснованные возражения против использования подобного языка со стороны программистов. Программа на нем по любому получится значительно многословнее, чем с использованием строгого формального синтаксиса обычных компьютерных языков.
 <br> 
 <br> Поэтому напомню про его обязательное свойство — умение преобразовывать текст программы с одного языка на другой. Это позволяет писать программы как с использованием строго формального синтаксиса без использования переопеределенных терминов на естественном языке, так и преобразовывать исходный текст в «естественный» язык для «не программиста».
</div>', '2020-12-05 12:26:00', 'Интернациональное программирование на естественных языках', 8, null, 4),
        (5, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b2b/7f1/9ca/b2b7f19ca74c742b90699e8b3e27e26f.jpg" width="1600" height="915">
  <figcaption></figcaption>
 </figure>
 <p>Международная команда учёных-египтолог использовала рентгеновские лучи для анализа 12 фрагментов древнеегипетских папирусов и обнаружила соединения свинца как в красных, так и в чёрных чернилах. Это говорит о том, что их добавляли не для цвета, а из-за того, что они помогали чернилам быстрее высыхать. Статья учёных <a href="https://www.pnas.org/content/117/45/27825" rel="noopener noreferrer nofollow">опубликована</a> на сайте журнала Proceedings of the National Academy of Sciences.&nbsp;</p>
 <p>Благодаря тому, что соединения свинца в чернилах ускоряли их высыхание, удавалось писать на папирусе, при этом не размазывая их, считают учёные. Подобная технология использовалась европейскими художниками XV века при создании масляных красок, однако исследование предполагает, что древние египтяне открыли её на 1400 лет раньше эпохи Возрождения. Значит, эта практика могла быть гораздо более распространённой, чем считалась раньше, полагают учёные.&nbsp;</p>
 <p>Чернила — это история в том смысле, что они использовались для написания на огромном количестве языков на самых различных носителях в течение пяти тысяч лет, пишут авторы исследования. В Древнем Египте они были известны как минимум с 3200 г. до н.э. Египтяне использовали чёрные чернила для написания основной части текста и красные — для выделения заголовков и ключевых слов.&nbsp;</p>
 <p>Изготавливали чернила обычно из сажи и охры, которую брали из глины — благодаря наличию железа в составе последней удавалось достичь красного и оранжевого цветов. Их смешивали с каким-либо связующим веществом (обычно это был гуммиарабик — акациевая смола), а затем суспензировали в животном клее, растительном масле или уксусе. Эту смесь высушивали и скатывали в шарики, которые писцы могли носить с собой — для использования достаточно было размешать такой шарик в воде.&nbsp;</p>
 <p>По словам учёных, исследованные рукописи были найдены в двух небольших подвалах библиотеки храма Тебтунис к юго-западу от Каира и относятся к периоду от 30 г. до н.э. до 400 г. н.э. В чернилах с этих рукописей и были обнаружены смеси их фосфатов, сульфатов, хлоридов и карбоксилатов свинца. При этом ни одно из веществ не было идентифицировано как пигмент, однако находили их в обоих видах чернил — поэтому учёные решили, что соединения свинца использовались для ускорения высыхания чернил, а не для того, чтобы придать им какой-либо цвет.&nbsp;</p>
 <p>Исследователи полагают, что сами жрецы не создавали чернила, которыми писали. По их словам, это требует определённых знаний и большого количества сырья, которое потребовалось бы для их изготовления. Вероятно, чернила в Древнем Египте могли готовить в мастерских по заказу храмовых жрецов, считают учёные.</p>
 <p>Исследователи использовали в своей работе синхротронное излучение — направленный пучок рентгеновских лучей высокой интенсивности. Попадая на изучаемый объект, излучение переводит атомы вещества в возбуждённое состояние, после чего они сами испускают электромагнитные лучи. Каждый химический элемент обладает собственными частотой и длиной волны, что позволяет определить наличие тех или иных веществ на исследуемом объекте.&nbsp;</p>
 <p>В 2008 году этот метод <a href="https://ru.ergonengineering.com/hidden-van-gogh-painting-revealed-327332" rel="noopener noreferrer nofollow">использовался</a> для обнаружения портрета женщины под слоем краски в картине Винсента Ван Гога «Клочок травы». Смутные очертания человеческой головы выявляли и ранее, но использование синхротронного рентгеновского излучения позволило увидеть её на полотне без снятия краски более поздней картины, которой художник закрасил портрет. Работа получила название «Портрет крестьянки».&nbsp;</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c2e/518/222/c2e518222ae865f9ed066f8beac45b4b.jpg" width="700" height="450">
  <figcaption></figcaption>
 </figure>
 <p></p>
</div>', '2020-12-07 19:37:00', 'В египетских папирусах нашли технологию изготовления чернил со свинцом — считалось, что её изобрели в Европе в XV веке', 9, null, 9),
        (6, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/os/oj/m6/osojm6blfp_o6q9wdwsvxvxwobe.jpeg">
 <br> 
 <br> Компания Google 8 декабря 2020 года <a href="https://opensource.googleblog.com/2020/12/expanding-fuchsias-open-source-model.html" rel="nofollow">сообщила</a> об изменении модели лицензирования операционной системы Fuchsia. Теперь коммиты и патчи принимают от всех желающих.
 <br> <a name="habracut"></a>
 <br> Google впервые опубликовала исходный код операционной системы Fuchsia в августе 2016 года. В течение четырёх лет разработчики компании вели публичную разработку, <a href="https://fuchsia.googlesource.com/" rel="nofollow">репозиторий</a> проекта был открыт.
 <br> 
 <br> Компания переносит разработку в ещё более открытый формат. Для желающих создали <a href="https://fuchsia.dev/fuchsia-src/contribute/community/get-involved" rel="nofollow">публичные рассылки</a> для обсуждения проектов с полным списком принятых и отклонённых предложений и текущих проектов.
 <br> 
 <br> Также в репозиторий теперь принимают коммиты. В <a href="https://fuchsia.dev/fuchsia-src/contribute/governance/governance" rel="nofollow">руководстве</a> авторы проекта рассказали, как присоединиться к команде. Полная инструкция для подключения Git опубликована на <a href="https://fuchsia.dev/fuchsia-src/development/source_code/contribute_changes" rel="nofollow">странице</a> Fuchsia.
 <br> 
 <br> Основные решения о разработке Fuchsia будет принимать управляющий совет. В его состав вошла небольшая группа старших технических руководителей Google. Они будут согласовывать действия разработчиков с представлениями о новой операционной системе. Совет будет поддерживать дорожную карту проекта и администрировать изменения, предложенные пользователями.
 <br> 
 <br> Для эффективного управления разработкой Fuchsia компания представила процесс Fuchsia Requests for Comments (RFC). RFC нужны для разработки дорожной карты и архитектуры системы. Так Google планирует обеспечить последовательный и прозрачный путь принятия технических решений.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ir/la/yf/irlayfvpvuijtkxjvrqbezhmgaa.png">
 <br> 
 <br> Разработчики получат доступ к багтрекеру, чтобы каждый мог наблюдать за действиями коллег. В трекере доступна информация о типе ошибки, её статусе, приоритете, авторе и т. д.
 <br> 
 <br> В технической дорожной карте разработчики будут описывать текущие проекты команд, участвующих в создании новой операционной системы. Совет будет вносить в документ активные проекты, обладающие высоким приоритетом разработки. Сейчас команды работают над фреймворком для обновления ядра системы независимо от драйверов и над проектом Fuchsia Interface Definition Language для описания протоколов.
 <br> 
 <br> Команда разработки Fuchsia выделяет основные архитектурные принципы — безопасность и обновляемость. Однако проект не имеет точно очерченной целевой платформы. Издание Verge <a href="https://www.theverge.com/2020/12/8/22163225/google-fuchsia-os-call-contributors-mailing-list-governance" rel="nofollow">считает</a>, что новая операционная система от Google будет использоваться для различных типов устройств, в том числе для компьютеров, телевизоров и колонок.
 <br> 
 <br> Операционная система не использует Linux-ядро, вместо этого она работает на микроядре Zircon, которое обладает <a href="https://habr.com/ru/post/435482/">несколькими отличиями</a>.
 <br> 
 <br> В 2019 году издание Ars Technica <a href="https://arstechnica.com/gadgets/2017/05/googles-fuchsia-smartphone-os-dumps-linux-has-a-wild-new-ui/" rel="nofollow">опубликовало</a> скриншоты пользовательского интерфейса. Он был создан на языке программирования Dart и использовал фреймворк Flutter. Фреймворк даёт возможность для кроссплатформенной разработки для основных мобильных систем. В Fuchsia реализовали поддержку языков C и С++, Dart, Go, Rust и Python.
</div>', '2020-12-09 18:20:00', 'Google меняет модель лицензирования операционной системы Fuchsia: теперь это полностью открытый проект', 49, null, 6),
        (7, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 В любой большой компании, и X5 не исключение, имеется «старое железо» которое успешно работает и работает хорошо, но приходит время и с него тоже необходимо начать забирать логи и метрики. В нашем случае это машины c x86_32 Debian 9.5 и 512Мб оперативной памяти. 
 <br> <a name="habracut"></a>
 <br> 
 <blockquote>
  <h3>Небольшой Disclaimer</h3>
  <br> <b>Автор статьи не является экспертом по языку Rust</b> и соответственно любые улучшения, и конкретные рекомендации от гуру приветствуются. <b>Статья не является рекламой Vector и автор никак не связан с компанией Timber и ее контрибуторами.</b> Все ниже описанное является чистым DIY экспериментом с целью показать, что нет непреодолимых барьеров, если очень хочется.
 </blockquote>
 <br> 
 <h3>Итак, начнем</h3>
 <br> Речь пойдет о Vector версии 0.10.0, хотя модный и хайповый лог коллектор только недавно обновился до версии 0.11.0, возможно этот способ подойдет и для него.
 <br> 
 <br> Нам в компании X5 нравится Vector и мы хотели его попробовать на архитектуре x86_32. Тогда как из коробки он доступен для почти любых операционок в двух архитектурах x86_64 и ARM7.
 <br> 
 <br> Собирать будем в Docker на основе рекомендаций, <a href="https://vector.dev/docs/setup/installation/manual/from-source/#compiling-using-docker">изложенных тут</a>.
 <br> 
 <br> Описание по ссылке выше подходит только частично, так как нам нужна некая i686-unknown-linux-gnu конфигурация для Rust, как показывает великий Гугл. Собирать будем в докере «целевой» системы (x86_32 Debian 9.5) потому что я понял, что компиляция 32bit Rust в 64bit окружении мне не под силу.
 <br> 
 <br> FYI: Да, до этого я попробовал i686-unknown-linux-musl и мне не удалось заставить ее работать.
 <br> 
 <br> 
 <h3>Магия Docker</h3>
 <br> Копируем файлы из репозитория на github:
 <br> 
 <br> 
 <pre><code class="bash">mkdir -p vector &amp;&amp; \\
  curl -sSfL --proto ''=https'' --tlsv1.2 https://api.github.com/repos/timberio/vector/tarball/v0.10.0 | \\
  tar xzf - -C vector --strip-components=1</code></pre>
 <br> В директории vector/scripts/ci-docker-images создаем папку builder-i686-unknown-linux-gnu, базовый Dockerfile берем из vector/scripts/ci-docker-images/builder-x86_64-unknown-linux-gnu и начинаем править.
 <br> 
 <br> После нескольких часов экспериментов, гугления и мук выбора, получилось следующее:
 <br> 
 <br> 
 <pre><code class="bash">FROM i386/debian:9.5 as builder
# This is formatted "$UID:$GID" by the docker-compose/scripts.
ARG USER

RUN apt-get update &amp;&amp; \\
    apt-get -y upgrade

RUN apt-get install -y \\
        make libssl-dev cmake git \\
        build-essential sudo curl
        
RUN curl -L https://cpanmin.us | perl - App::cpanminus

RUN cpanm File::Rename \\
 &amp;&amp; rename --version

RUN cd /tmp &amp;&amp; \\
  git clone https://github.com/github/cmark-gfm &amp;&amp; \\
  cd cmark-gfm &amp;&amp; \\
  git checkout 0.29.0.gfm.0 &amp;&amp; \\
  make install INSTALL_PREFIX=/usr &amp;&amp; \\
  ldconfig &amp;&amp; \\
  cd .. &amp;&amp; \\
  rm -rf cmark-gfm &amp;&amp; \\
  cmark-gfm --version

RUN sudo adduser runner
RUN sudo usermod -aG sudo runner

USER runner
RUN curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-host i686-unknown-linux-gnu -y
ENV PATH=/home/runner/.cargo/bin:$PATH
RUN echo "export PATH=/home/runner/.cargo/bin:$PATH" &gt;&gt; ~/bashrc
ENV LIBRARY_PATH /usr/local/lib:$LIBRARY_PATH
ENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH

RUN rustup update stable
RUN rustup run stable cargo install cargo-deb --target=i686-unknown-linux-gnu --version ''^1.24.0''

CMD ["bash"]</code></pre>
 <br> Также пришлось поправить файл vector/Makefile.
 <br> 
 <br> Добавив и описав build-i686-unknown-linux-gnu в нескольких местах и сделав ее единственным вариантом сборки.
 <br> 
 <br> Кусочек файла vector/Makefile для примера:
 <br> 
 <br> 
 <pre><code class="bash">#build-all: build-x86_64-unknown-linux-musl build-armv7-unknown-linux-musleabihf build-aarch64-unknown-linux-musl  ## Build the project in release mode for all supported platforms
build-all: build-i686-unknown-linux-gnu

….

package-archive-i686-unknown-linux-gnu: build-i686-unknown-linux-gnu ## Build the x86_32 archive
$(RUN) package-archive-i686-unknown-linux-gnu</code></pre>
 <br> Конфигурация зависимостей Rust лежит в файле vector/Cargo.toml. Туда была добавлена секция profile.release:
 <br> 
 <br> 
 <pre><code class="bash">[profile.release]
opt-level = ''z''  # Optimize for size.
debug = false
debug-assertions = false
lto = true
codegen-units = 1</code></pre>
 <br> Это было сделано из соображений оптимизации, т.к. первые собранные бинарники были размером с чугунный мост ~ 60Мб, что не приемлемо. Размер оригинальных бинарников с сайта примерно 7Мб.
 <br> 
 <br> Вдохновение навеяно на мой взгляд великолепным описанием методик уменьшения размеров бинарников Rust от @johnthagen тут: <a href="https://github.com/johnthagen/min-sized-rust">https://github.com/johnthagen/min-sized-rust</a>
 <br> 
 <br> В стремлении сэкономить на размере в секциях sources, transforms закомментированы
 <br> logplex|splunk_hec и aws_ec2_metadata|lua соответсвенно, что позволило без секции profile.release сэкономить примерно 10Мб в собранном состоянии.
 <br> 
 <br> 
 <pre><code class="bash"># Sources
sources = [
  "sources-docker",
  "sources-file",
  "sources-generator",
  "sources-http",
  "sources-internal_metrics",
  "sources-journald",
  "sources-kafka",
  #"sources-logplex",
  "sources-prometheus",
  "sources-socket",
  #"sources-splunk_hec",
  "sources-statsd",
  "sources-stdin",
  "sources-syslog",
  "sources-tls",
  "sources-vector",
]

# Transforms
transforms = [
  "transforms-add_fields",
  "transforms-add_tags",
  "transforms-ansi_stripper",
  #"transforms-aws_ec2_metadata",
  "transforms-coercer",
  "transforms-concat",
  "transforms-dedupe",
  "transforms-field_filter",
  "transforms-filter",
  "transforms-geoip",
  "transforms-grok_parser",
  "transforms-json_parser",
  "transforms-log_to_metric",
  "transforms-logfmt_parser",
  #"transforms-lua",
  "transforms-merge",
  "transforms-regex_parser",
  "transforms-remove_fields",
  "transforms-remove_tags",
  "transforms-rename_fields",
  "transforms-sampler",
  "transforms-split",
  "transforms-swimlanes",
  "transforms-tag_cardinality_limit",
  "transforms-tokenizer",
  "transforms-reduce",
]</code></pre>
 <br> 
 <h3>Сборка</h3>
 <br> Запускаем все это дело командой:
 <br> 
 <br> 
 <pre><code class="bash">PASS_FEATURES=default-cmake ./scripts/docker-run.sh builder-i686-unknown-linux-gnu make build</code></pre>
 <br> В процессе сборки могут вываливаться ошибки вроде этой:
 <br> 
 <br> 
 <pre><code class="bash">error: Input/output error (os error 5)
warning: build failed, waiting for other jobs to finish...
    Building [===&gt;                                                    ] 40/537: regex-syntax                                                                                                             
error: build failed
Makefile:156: recipe for target ''build'' failed
make: *** [build] Error 101</code></pre>
 <br> Унывать не советую, перезапускаем make и после “бесконечного” cargo downloading component, Updating crates.io index и Updating git repository сборка продолжается с того места, на котором прервалась. Кстати если кто-то знает, как это прекратить и заставить cargo и crates использовать локальный кэш было бы супер)
 <br> 
 <br> На macbook pro i5 8gb этот процесс длится примерно 2 часа, из них сама сборка минут 50.
 <br> 
 <br> После сборки файлик можно сжать UPX’ом:
 <br> 
 <br> 
 <pre><code class="bash">upx --best --lzma target/release/vector</code></pre>
 <br> <b>На этом все. </b>
 <br> 
 <br> Репозиторий github с исправленными файлами и Vector 0.10.0 <a href="https://github.com/sergeymaslov/vector-x86_32">тут</a>
 <br> Собранный бинарник 8,7Мб, сжатый UPX <a href="https://github.com/sergeymaslov/vector-x86_32/releases/tag/0.10.0">тут</a>
</div>', '2020-12-14 22:42:00', 'Коллектор логов на старом железе или встречайте Vector 32bit', 11, null, 2),
        (8, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/he/3k/tx/he3ktxqvctv6rwmsmknznsq-etq.png">
 <br> 
 <br> Приглашаем Вас принять участие в Международном Научном Конгрессе по применению технологий виртуальной реальности и современных IT решений в науке, промышленности и бизнесе FIT-M 2020.
 <br> 
 <br> Ссылки на трансляцию уже сейчас доступны для всех желающих узнать, что нас ждёт в 2021-2030 гг. Без цензуры и ангажированности. По существу и без лирики.
 <br> 
 <br> Зарегистрироваться на Конгресс FIT-M 2020 Вы можете по ссылке: <a href="https://fit-m.org/" rel="nofollow">fit-m.org</a>
 <br> <a name="habracut"></a>
 <br> 
 <h3>Трансляция Конгресса осуществляется по двум основным потокам:</h3> 
 <br> <b>1. Конференция</b>
 <br> Ссылка на трансляцию: <a href="https://youtu.be/TgJAzTMlbOM" rel="nofollow">youtu.be/TgJAzTMlbOM</a>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/0q/2v/jr/0q2vjraxp1pzxw5awbmwbcynzz0.png">
 <br> 
 <br> <b>2. Лекторий — расширенные доклады (продолж. 1,5 ч.) ТОП Спикеров </b>
 <br> Ссылки на трансляцию: 
 <br> 
 <ul> 
  <li>17 декабря: <a href="https://youtu.be/10GCeFFq-l8" rel="nofollow">youtu.be/10GCeFFq-l8</a></li> 
  <li>18 декабря: <a href="https://youtu.be/QhyoCOneCA4" rel="nofollow">youtu.be/QhyoCOneCA4</a></li> 
  <li>19 декабря: <a href="https://youtu.be/PDjptjgZzr8" rel="nofollow">youtu.be/PDjptjgZzr8</a></li> 
 </ul>
 <br> 
 <h3>ТОП СПИКЕРЫ ЛЕКТОРИЯ FIT-M 2020</h3>
 <br> 
 <img src="https://habrastorage.org/webt/3j/qd/oi/3jqdoi2_-h5g_evngsyt_t7aqmg.gif">
 <br> 
 <br> <b>Делягин Михаил Геннадьевич</b>, д-р экон. наук, научный руководитель Института проблем глобализации (ИПРОГ).
 <br> <i>Тема доклада: «Другие мы: как новые технологии преобразуют человека и человечество».</i>
 <br> 
 <br> <b>Лукша Павел Олегович</b>, основатель инициативы Global Education Futures, профессор Московской школы управления СКОЛКОВО, член экспертного совета Агентства стратегических инициатив, член Попечительского совета Университета 20.35, создатель методики Rapid Foresight.
 <br> <i>Тема доклада: «Краткий гид по третьему десятилетию 21 века».</i>
 <br> 
 <br> <b>Козаченко Дмитрий Александрович</b>, директор по технологическому развитию и сервису Dassault Systemes.
 <br> <i>Тема доклада: «Новый цифровой мир. Киберфизические системы».</i>
 <br> 
 <br> <b>Переслегин Сергей Борисович</b>, физик, военный историк, футуролог.
 <br> <i>Тема доклада: «От цифровой науки к человеческой постнауке».</i>
 <br> 
 <br> <b>Вахштайн Виктор Семенович</b>, канд. социол. наук, MA in sociology, декан факультета социальных наук МВШСЭН «ШАНИНКА».
 <br> <i>Тема доклада: ««Консервативная революция» искусственного интеллекта: технический прогресс и социальный порядок».</i>
 <br> 
 <br> <b>Нестерович Сергей Александрович</b>, исполнительный директор ANNA Systems.
 <br> <i>Тема доклада: «Математические модели на базе новых технологий обработки больших данных для мониторинга экономики и прогнозирования кризисных событий».</i>
 <br> 
 <br> <b>Алексей Аникин</b>, PhD, Industrial Solutions IBM CEE.
 <br> <i>Тема доклада: «Оптимизация промышленных предприятий с помощью искусственного интеллекта — Multi Plant Optimization with AI».</i>
 <br> 
 <br> <b>Котов Артемий Александрович</b>, канд. филол. наук, ведущий научный сотрудник НИЦ «Курчатовский институт», старший научный сотрудник РГГУ.
 <br> <i>Тема доклада «Будущее эмоциональных роботов: как создать искусственное сознание?».</i>
 <br> 
 <br> С ПОЛНОЙ ТРЁХДНЕВНОЙ ПРОГРАММОЙ ЛЕКТОРИЯ FIT-M 2020 можно ознакомиться по ссылке: <a href="https://fit-m.org/uploads/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0_%D0%9B%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B9_FIT-M_2020.pdf" rel="nofollow">fit-m.org/uploads/Программа_Лекторий_FIT-M_2020.pdf</a>
 <br> 
 <br> 
 <h3>КОНФЕРЕНЦИЯ</h3>
 <br> 
 <img src="https://habrastorage.org/webt/kc/xl/wo/kcxlwoigyt7eb8nyh-w6mnf9td0.jpeg">
 <br> 
 <br> В работе Конференции примут участие известные ученые и исследователи по наиболее актуальным направлениям цифровизации науки, промышленности и бизнеса: 
 <br> 
 <br> <b>Удовиченко Сергей Юрьевич</b>, д-р физ.-мат. наук, профессор кафедры прикладной и технической физики, Физико-технический институт, руководитель НОЦ «Нанотехнологии», Тюменский государственный университет. 
 <br> <i>Тема доклада: «Компьютерная симуляция биоморфного нейропроцессора — носителя искусственного интеллекта».</i>
 <br> 
 <br> <b>Нартова Анна Владимировна</b>, Новосибирский национальный исследовательский государственный университет. 
 <br> <i>Тема доклада: «ParticlesNN: онлайн-сервис для распознавания наночастиц на изображениях сканирующей микроскопии с использованием нейронной сети Cascade Mask-RCNN».<br> </i>
 <br> <b>Бондарев Александр Евгеньевич</b>, канд. физ.-мат. наук, старший научный сотрудник отдела компьютерной графики и вычислительной оптики Института прикладной математики имени М.В. Келдыша РАН. 
 <br> <i>Тема доклада: «Построение обобщенного вычислительного эксперимента в задачах механики сплошных сред».</i>
 <br> 
 <br> <b>Барулина Марина Александровна</b>, д-р физ.-мат. наук, заведующий лабораторией Анализ и синтез динамических систем в прецизионной механике, Институт проблем точной механики и управления РАН. 
 <br> <i>Тема доклада: «Интернет нановещей».</i>
 <br> 
 <br> <b>Гушанский Сергей Михайлович</b>, Южный федеральный университет Институт компьютерных технологий и информационной безопасности. 
 <br> <i>Тема доклада: «Разработка аппаратного подхода к моделированию квантовых вычислений и алгоритмов».</i>
 <br> 
 <br> <b>Массель Людмила Васильевна</b>, д-р техн. наук, профессор, зав. отделом «Системы искусственного интеллекта в энергетике» Института систем энергетики им. Л.А. Мелентьева СО РАН.
 <br> <i>Тема доклада: «Использование научной ИТ-инфраструктуры исследований энергетики для построения цифровых теней и цифровых двойников объектов и систем энергетики».</i>
 <br> 
 <br> С ПОЛНОЙ ТРЁХДНЕВНОЙ ПРОГРАММОЙ КОНФЕРЕНЦИИ 
 <br> FIT-M 2020 можно ознакомиться по ссылке: <a href="https://fit-m.org/uploads/program.pdf" rel="nofollow">fit-m.org/uploads/program.pdf</a> 
 <br> 
 <br> <i>С более подробной информацией можно ознакомиться на сайте мероприятия:</i> <a href="https://fit-m.org/" rel="nofollow">fit-m.org</a>
</div>', '2020-12-15 10:54:00', 'Хотите узнать, что нас ждёт в 2021-2030 гг.? — Присоединяйтесь к трансляции Международного Научного Конгресса FIT-M', 96, null, 3),
        (9, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <blockquote>
  <p><strong>Будущих студентов курса </strong><a href="https://otus.pw/pp4K/"><strong>"QA Engineer"</strong></a><strong> и всех желающих приглашаем записаться на открытый урок по теме </strong><a href="https://otus.pw/eegS/"><strong>"Как правильно составлять баг репорт".</strong></a><br><br>Также делимся переводом полезного материала. </p>
 </blockquote>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/20a/4fc/7d3/20a4fc7d3ab4d3783bdacf45ed003fdb" width="780" height="439">
  <figcaption></figcaption>
 </figure>
 <hr>
 <p></p>
 <p>Методология agile гарантирует, что команда с самого начала разработки принимает меры по обеспечению качества продукта. На ранних этапах тестировщики исследуют фичи и варианты их использования. Во время анализа эпиков они больше вникают в проект, обсуждают статус-кво и помогают вырабатывать пользовательские запросы с учетом технических и бизнес аспектов. Наконец, тестировщики тесно работают с командой над проектированием и внедрением, поднимая вопросы тестируемости, юзабилити и пограничных случаев.</p>
 <p>Голос тестировщика имеет значение на протяжении всего процесса разработки, так как тестировщик представляет точку зрения как пользователя, так и инженера, особенностью мышления которого является поиск лазеек и вероятных проблемных областей как в технических, так и в бизнес аспектах.</p>
 <p>Когда тестировщики инициируют и поощряют диалог, это может пролить свет на более мелкие детали элементов незавершенных задач (бэклога), что позволит инженерам прицельнее сосредоточить свои усилия. Хорошо сформулированные вопросы результируют в полезных дискуссиях и ответах. Когда тестировщики четко излагают свою стратегию, разработчики могут помочь обеспечить тестируемость кода, а также могут написать более прицельные модульные и интеграционные тесты. Все эти меры способствуют получению хорошо протестированного кода.</p>
 <p>В этой статье описаны 10 примеров ситуаций, когда хорошо развитые коммуникативные навыки тестировщиков могут стать решающим фактором.</p>
 <h3>1. Тестирование начинается с анализа и проектирования</h3>
 <p>Как в каскадной, так и в agile среде, встречи по анализу, проектированию и планированию требуют тщательного изучения формулировки задачи и предлагаемых решений. Цель состоит в том, чтобы обеспечить наилучшее возможное разрешение с учетом всех накопленных знаний и опыта. Жизненно важно, чтобы каждый член команды четко понимал видение и намеченный путь.&nbsp;</p>
 <p>В этой обстановке тестировщику необходимо общаться с людьми, у которых есть широкий спектр приоритетов и опыта. Это подходящее время для того, чтобы озвучивать свои наблюдения, задавать вопросы, выступать за интересы пользователей, высказывать обоснованные опасения и давать рекомендации. Вот некоторые темы, которые тестировщик может поднять в этой ситуации:</p>
 <ul>
  <li><p>Характерный опыт тестирования аналогичного продукта в прошлом, а именно — что было легко, а что было сложно, особенно если это неочевидные или неожиданные вещи;</p></li>
 </ul>
 <ul>
  <li><p>Особые юзкейсы или пользовательские запросы — доступность, тестируемость, пограничные случаи, и другие относящиеся к делу элементы;</p></li>
 </ul>
 <ul>
  <li><p>Юзабилити и дизайн-мышление;</p></li>
 </ul>
 <ul>
  <li><p>Подходы к тестированию, особенности фреймворков автоматизации и т. д.</p></li>
 </ul>
 <h3>2. Тестировщики как представитель интересов пользователей</h3>
 <p>Тестировщикам всегда необходимо ставить себя на место пользователя системы. Это помогает понять, что нужно пользователю и какие действия он может выполнить.</p>
 <p>Многие из этих аспектов рассматриваются в ходе планирования сквозных тест кейсов. Некоторые аспекты тестирования невозможно охватить, просто представив себя на месте пользователя, но все-равно важно, чтобы сами пользователи были вовлечены в тестирование системы, чтобы представления об их ожидания от системы были основаны не на одних лишь предположениях.</p>
 <p>Тестировщик должен выступать в роли представителя интересов клиента и может делать это посредством:</p>
 <ul>
  <li><p>Изучения дефектов, о которых сообщают пользователи;</p></li>
 </ul>
 <ul>
  <li><p>Управления ожиданиями пользователей относительно того, когда дефект будет устранен;</p></li>
 </ul>
 <ul>
  <li><p>Информирования пользователя об обходных путях решения проблемы до исправления дефекта, если он мешает пользователю что-либо делать;</p></li>
 </ul>
 <ul>
  <li><p>Ссылаясь на существующую техническую документацию, когда это уместно, или сообщая авторам о необходимых изменениях;</p></li>
 </ul>
 <ul>
  <li><p>Сообщая клиентам, когда для бета-тестирования будут доступны новые фичи.</p></li>
 </ul>
 <p>Хорошие коммуникативные навыки могут сделать управление ожиданиями и планирование релизов гладким и четким.</p>
 <h3>3. Голос качества</h3>
 <p>Agile команда склонна к самоорганизации. Благодаря такой гибкости, тестировщик может давать рекомендации по качеству продукта для своих товарищей по команде по любому из этих поводов:</p>
 <ul>
  <li><p>Код ревью;</p></li>
 </ul>
 <ul>
  <li><p>Обсуждение стратегии тестирования;</p></li>
 </ul>
 <ul>
  <li><p>Разбор плана/кейсов тестирования;</p></li>
 </ul>
 <ul>
  <li><p>Обзор/оптимизация процессов тестирования;</p></li>
 </ul>
 <ul>
  <li><p>Планирование релиза;</p></li>
 </ul>
 <ul>
  <li><p>Работа с разработчиками технической документации;</p></li>
 </ul>
 <ul>
  <li><p>Обеспечение адекватного кода и покрытия тестами;</p></li>
 </ul>
 <ul>
  <li><p>Борьба с запоздалой отправкой на тесты;</p></li>
 </ul>
 <ul>
  <li><p>Обсуждение проблем;</p></li>
 </ul>
 <ul>
  <li><p>Обзор процесса разработки и его улучшений;</p></li>
 </ul>
 <h3>4. Обмен знаниями</h3>
 <p>Следует отметить, что не каждый знающий человек может быть учителем. Решающим моментом зачастую является качество общения. Важно то, как вы делаете концепции, содержание и другие стратегии тестирования ясными и простыми для понимания. Это влияет на то, как хорошо вы обучаете младших членов команды пониманию лучших практик, а также насколько легко вы будете передавать работу новому члену тестовой группы, который должен сотрудничать с вами, чтобы разделить рабочую нагрузку.</p>
 <h3>5. Фидбэк&nbsp;</h3>
 <p>Очень важна обратная связь о любых рисках, обнаруженных намного позже в SDLC (жизненном цикле разработки ПО), или любых тревожных сигналах, которые могут поставить под угрозу план релиза. Тестировщики должны эффективно и своевременно сообщать об этом другим членам команды — разработчикам и товарищам по тестированию; а также доносить их до своего руководителя и других заинтересованных сторон. Этот канал обратной связи очень важен, поскольку такая информация может привести к принятию важных и трудных, но своевременных решений.</p>
 <h3>6. Связь с пользователями</h3>
 <p>Время от времени тестировщики общаются с пользователями в рамках исследования дефектов, оценки времени исправления кода, о планах релизов и других ситуациях. Здесь требуется более формальный, более функциональный и менее технический стиль общения. Будьте краткими, предельно ясными и говорите по существу. Навыки общения с клиентами приходят с опытом и часто прививаются наставником.</p>
 <h3>7. Документация</h3>
 <p>Инженеры по тестированию могут задокументировать юзкейсы, шаблоны использования и сценарии пограничных случаев. После продукт-менеджеров они являются лучшими кандидатами для сотрудничества с разработчиками технической документации, потому что могут помочь описать эти юзкейсы и лучшие практики реализации и использования новой фичи. Хорошие письменные коммуникативные навыки очень помогают во всех этих небольших, но важных аспектах продукта.</p>
 <h3>8. Задавать правильные вопросы</h3>
 <p>Один из самых важных навыков для быстрого получения правильных ответов и нужной информации — это умение задавать правильные вопросы. Технику работы с вопросами можно улучшить — этому навыку можно научиться. Как совершенно верно отмечено в <a href="https://www.mindtools.com/pages/article/newTMC_88.htm">этой статье</a>:</p>
 <blockquote>
  <p>«<em>Вы можете получать более полезную информацию и узнавать больше, вы можете строить более прочные отношения, более эффективно управлять людьми и помогать другим учиться».</em></p>
 </blockquote>
 <h3>9. Коучинг и руководство командой тестирования</h3>
 <p>По мере продвижения тестировщиков вверх по карьерной лестнице, будь то индивидуальное развитие или налаженный корпоративный план, коучинг и руководство младшими членами команды становится решающим фактором. Это становится очевидным по мере роста команды и при появлении новых фич: это упрощает планирование, разработку стратегии тестирования, получение фидбека и обмен планами и лучшими практиками.</p>
 <p>Сбор идей, отзывов и умение проводить продуктивные обсуждения тестов - это часть навыков, которые заставят вашу команду ценить вас как руководителя.</p>
 <h3>10. Когда нужно выразить несогласие</h3>
 <p>Когда организация еще не перешла на agile или не внедрила ее полностью, команда тестирования часто попадает в позицию привратников релизов. Хорошо это или плохо, но решение о выпуске релиза часто остается за тестировщиками, а не за всей командой или руководителем высшего звена. Такая ситуация часто влечет за собой твердый, но вежливый отпор.&nbsp;</p>
 <p>Для agile команд решение о релизе становится командным решением, что по-прежнему означает, что если есть риски и требуется отложить релиз, инженерам-тестировщикам необходимо будет подкрепить ответ данными, хорошо изложенными причинами и важной информацией. Это требует четкого понимания проблемы, риска, а также анализа и обобщения основных причин.</p>
 <h3>Рекомендации по улучшению коммуникации</h3>
 <p>Вот некоторые способы улучшить ваше общение:</p>
 <ul>
  <li><p>Помните о возможностях высказаться в командных обсуждениях, оперативных сводках или других подобных беседах — используйте эти возможности для улучшения и практики приобретенных коммуникативных навыков.</p></li>
 </ul>
 <ul>
  <li><p>Изучайте аудиторию, с которой вы общаетесь — ваша коммуникационная стратегия и выбор слов будут меняться в зависимости от целевой аудитории. Осознание этого помогает направлять дискуссии в нужное русло и сохранять сосредоточенность. Это также помогает сделать встречи и презентации более эффективными.</p></li>
 </ul>
 <ul>
  <li><p>Научитесь задавать правильные вопросы — как упоминалось выше, изучите различные онлайн-беседы, презентации и статьи о том, как задавать более точные вопросы. Это сложный навык, но он того стоит!</p></li>
 </ul>
 <ul>
  <li><p>Больше слушайте — вы можете эффективно общаться, только если знаете тему, которую хотите затронуть. Например, только слушая, вы можете получить подробную информацию и понять серьезность дефекта. Это, в свою очередь, поможет вам определить свои ожидания.</p></li>
 </ul>
 <ul>
  <li><p>Старайтесь говорить проще — технический и деловой жаргон обычно используется и понимается в командах разработчиков программного обеспечения. Однако недопонимания все же могут случаться время от времени. Особенно, когда вы работаете с межфункциональными командами или группами, которые могут работать и общаться в разных контекстах. Конечно, использование стандартного технического и делового жаргона в нашей области имеет смысл — все в конечном итоге сводится к аудитории, к которой вы обращаетесь. Но есть такая фраза «объясни, как будто мне пять лет» — делайте так, когда это возможно, и уточняйте вопрос, как только вы заметили, что пришли хотя бы к базовому пониманию.</p></li>
 </ul>
 <ul>
  <li><p>Анализируйте и консолидируйте, прежде чем предоставлять информацию — это сделает содержание вашего сообщения точным и, следовательно, намного более эффективным и хорошо продуманным. Применяйте эту технику в презентациях, демонстрациях и оперативных сводках.</p></li>
 </ul>
 <ul>
  <li><p>Будьте бесстрашными — не уклоняйтесь от любой формы общения. Если вы не будете делиться информацией и задавать вопросы, это только замедлит вашу работу и, в конечном итоге, работу всей команды. Не бойтесь задавать глупые вопросы и высказывать тривиальные измышления. Наберитесь смелости&nbsp; спрашивать, демонстрировать, указывать и обсуждать.</p></li>
 </ul>
 <ul>
  <li><p>Знайте свое дело/Делайте свою домашнюю работу — когда то, чем вы делитесь, подкреплено данными, фактами и наблюдениями, на которые вы можете сослаться, ваша способность разъяснять и извлекать информацию становится более мощной. Используйте эту способность в своих интересах.</p></li>
 </ul>
 <ul>
  <li><p>Постоянно развивайтесь — стремитесь работать над собой, если вы один из тех, кто от природы не наделен хорошими коммуникативными навыками, с практикой приходит совершенство… или, по крайней мере, становится чуточку ближе!</p></li>
 </ul>
 <ul>
  <li><p>Поощряйте фидбек. Получение фидбека от доверенных людей в вашем профессиональном кругу и за его пределами может помочь вам направить ваши усилия по улучшению в правильную сторону и подарит вам прилив сил и мотивации, когда он станет стабильно положительным.</p></li>
 </ul>
 <hr>
 <blockquote>
  <p><a href="https://otus.pw/pp4K/"><strong>Узнать подробнее о курсе</strong></a><strong> "QA Engineer".<br><br></strong><a href="https://otus.pw/eegS/"><strong>Записаться на открытый урок по теме</strong></a><strong> "Как правильно составлять баг репорт"</strong><a href="https://otus.pw/eegS/"><strong>.</strong></a></p>
 </blockquote>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e79/783/280/e79783280e1a0c6e73868386df772786.jpg" width="780" height="300">
  <figcaption></figcaption>
 </figure>
 <p><a href="https://otus.pw/EipQ/"><strong>ЗАБРАТЬ СКИДКУ</strong></a></p>
</div>', '2020-12-16 18:25:00', '10 примеров эффективного общения для тестировщиков', 57, null, 2),
        (10, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 За последние 5 лет мне приходилось работать над несколькими крупными проектами, и во всех из них неизменным было одно: сервисы релизили в наименее нагруженные часы, релиз подразумевал отказ в обслуживании клиентов, а любые проблемы стоили неимоверно дорого, потому что план отхода подразумевал сложные манипуляции с БД и с сопутствующими сервисами. В этой статье я расскажу, как изменить подход к релизам таким образом, чтобы этот процесс становился абсолютно рутинным и не требовал большого количества ресурсов. Замечу, что это не единственно возможный вариант.
 <br> 
 <br> В качестве примера я взял приложение, которое использует PostgreSQL в качестве БД и имеет публичный и приватный REST API. Основным клиентом у нас будет SPA, написанное на Angular. И вот со всем этим добром мы попытаемся взлететь :)
 <br> <a name="habracut"></a>
 <br> Двумя основными целями всех изменений будут:
 <br> 
 <br> 
 <ul> 
  <li>релиз без даунтайма;</li> 
  <li>возможность без проблем вернуться на предыдущую версию приложения.</li> 
 </ul>
 <br> Другими словами, мы хотим реализовать вариацию Canary release. Подробнее с концептом Canary можно ознакомиться <a href="https://martinfowler.com/bliki/CanaryRelease.html">у Мартина Фаулера</a>.
 <br> 
 <br> Основной идеей подхода является сохранение обратной совместимости на одну версию по всем контрактам: БД, REST, MQ и т. д.
 <br> 
 <br> Так как мы в ДомКлике используем Kubernetes, то новую версию приложения мы развёртываем с помощью стратегии RollingUpdate, которая запускает новые поды приложения параллельно старым, а старые гасит только после того, как запущены новые. Таким образом это уже canary в облегченном варианте, 2 разные версии приложения работают на одной БД, а запрос от клиента может попасть как на новую, так и на старую версию.
 <br> 
 <br> В конечном итоге наш релиз будет выглядеть следующим образом:
 <br> 
 <br> 
 <ol> 
  <li>Развёртывание новой версии приложения параллельно с текущей версией на одной и той же БД, а клиентский трафик балансируется между разными экземплярами. В это время все старые клиенты продолжают работать как с новой, так и со старой версией.</li> 
  <li>Проверка работоспособности новой версии.</li> 
  <li>Релиз сопутствующих сервисов, которые используют новый API приложения.</li> 
  <li>В случае каких-либо проблем с новой версией должен быть выполнен быстрый откат на предыдущую версию. Откат подразумевает только исполняемый код.</li> 
 </ol>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/c18/fa2/39e/c18fa239e4fa740a5d9481090a8e6d59.png">
 </div>
 <br> Для достижения этих условий мы должны уметь делать следующее:
 <br> 
 <br> 
 <ul> 
  <li>Возможность запуска приложения в несколько экземпляров на одной БД с балансированием трафика между экземплярами.</li> 
  <li>Обратная совместимость приложения по всем существующим контрактам: схема БД, REST API, MQ и т. д.</li> 
  <li>И feature-toggle, как опциональная возможность.</li> 
 </ul>
 <br> В этой статье я не буду рассматривать проблемы одновременного запуска нескольких экземпляров приложения, которые не связаны со схемой БД.
 <br> 
 <br> 
 <h2>Совместимость по БД</h2>
 <br> Обратная совместимость по БД нас интересует по следующим причинам:
 <br> 
 <br> 
 <ul> 
  <li>Возможность развёртывания приложения без остановки (canary release, когда у нас одновременно оказываются запущены две версии приложения).</li> 
  <li>Откат новой версии приложения без отката БД.</li> 
 </ul>
 <br> Если мы можем погасить сервис, то миграция данных и БД выглядит следующим образом и проводится за один подход:
 <br> 
 <br> 
 <ul> 
  <li>Изменение схемы БД в планируемую.</li> 
  <li>Миграция старых данных в новые сущности.</li> 
  <li>Навешивание ограничений.</li> 
  <li>Удаление больше ненужных колонок и таблиц.</li> 
 </ul>
 <br> Если же нам необходима обратная совместимость, то процедура разбивается на несколько подряд идущих релизов, потому что на каждом этапе нам необходимо поддерживать обратную совместимость. Рассмотрим несколько примеров изменений с поддержкой обратной совместимости. 
 <br> 
 <br> Обозначения и условия:
 <br> 
 <br> 
 <ul> 
  <li><strong>appN</strong> — приложение с версией N, где 0 — базовая версия до всех изменений;</li> 
  <li><strong>dbN</strong> — схема БД N, где 0 — базовая схема до всех изменений;</li> 
  <li>новая версия развёртывается как Rolling update, то есть текущая версия продолжает работать в момент релиза новой версии;</li> 
  <li>новая версия выполняет миграцию схемы БД до того, как начинает обслуживать клиентов;</li> 
  <li>миграции БД выполняется только самим приложением, то есть смена схемы БД подразумевает релиз новой версии приложения (<strong>это не ограничение подхода</strong>).</li> 
 </ul>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/3c9/4d9/0b6/3c94d90b66a75112c41bd1b9d8200e37.png">
 </div>
 <br> 
 <h3>Удаление колонки</h3>
 <br> Предположим, что сейчас мы имеем следующую таблицу:
 <br> 
 <br> 
 <pre><code class="plaintext">CREATE TABLE account(
    id serial PRIMARY KEY,
    username VARCHAR (50) UNIQUE NOT NULL,
    password VARCHAR (50) NOT NULL,
    email VARCHAR (355) UNIQUE NOT NULL,
    age INT NOT NULL
);
</code></pre>
 <br> На ранней стадии разработки требовалось, чтобы каждый пользователь сервиса указывал свой возраст, но от этого решили отказаться, и колонка <code>age</code> нам больше не нужна.
 <br> 
 <br> Если бы мы не думали об обратной совместимости, то:
 <br> 
 <br> 
 <ul> 
  <li>перестали использовать колонку <code>age</code> в коде приложения;</li> 
  <li>удалили колонку из БД.</li> 
 </ul>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/ca2/324/e75/ca2324e75e80149460bfb06d94bb76c6.png">
 </div>
 <br> И всё это делается в рамках одного релиза.
 <br> 
 <br> Если же мы сохраняем обратную совместимость, то процесс немного усложняется, и поставка новой функциональности разбивается на несколько релизов:
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/ee7/a45/071/ee7a4507119b3ca9fd776d39938f9822.png">
 </div>
 <br> 
 <div class="scrollable-table">
  <table> 
   <tbody>
    <tr> 
     <td><strong>Релиз 1</strong></td> 
     <td><strong>Релиз 2</strong></td> 
     <td><strong>Релиз 3</strong></td> 
    </tr> 
    <tr> 
     <td>
      <ul> 
       <li>Исправляем работу с <code>age</code> таким образом, что чтение <code>age</code> из БД может вернуть NULL.</li> 
      </ul><br> </td> 
     <td>Снятие ограничения NOT NULL с колонки <code>age</code>.<br> Перестаем использовать <code>age</code> в коде приложения.<br> </td> 
     <td>
      <ul> 
       <li>Удаление колонки из БД.</li> 
      </ul><br> </td> 
    </tr> 
   </tbody>
  </table>
 </div>
 <br> Через какие этапы мы проходим, чтобы удостовериться, что всё в порядке:
 <br> 
 <br> 
 <ul> 
  <li>app0-db1</li> 
  <li>app0-app1-db1</li> 
  <li>app1-db1</li> 
 </ul>
 <br> В этой версии мы продолжаем использовать колонку, но только с тем ограничением, что в БД может быть NULL, хотя пока что она записана как NOT NULL. Это необходимо для того, чтобы в случае отката версии app2 (в которой уже могут быть null) мы не получили ошибок.
 <br> 
 <br> Следующая версия:
 <br> 
 <br> 
 <ul> 
  <li>app1-db1</li> 
  <li>app1-app2-db2</li> 
  <li>app2-db2</li> 
 </ul>
 <br> Здесь мы убрали ограничение с колонки и перестали записывать ее в БД. Откат на предыдущую версию также возможен, ведь мы подготовились к возможному отсутствию значения в таблице.
 <br> 
 <br> Следующая версия:
 <br> 
 <br> 
 <ul> 
  <li>app2-db2</li> 
  <li>app2-app3-db3</li> 
  <li>app3-db3</li> 
 </ul>
 <br> В этой версии мы полностью изменили схему БД, а исходный код больше не работает с колонкой, при этом мы еще можем откатиться на старую версию.
 <br> 
 <br> 
 <h3>Переименование колонки (сократить, упростить, все уже всё поняли)</h3>
 <br> Эта миграция ощутимо сложнее, чем может показаться на первый взгляд. Рассмотрим такую структуру:
 <br> 
 <br> 
 <pre><code class="plaintext">CREATE TABLE account(
    id serial PRIMARY KEY,
    username VARCHAR (50) UNIQUE NOT NULL,
    first_name VARCHAR (50) NOT NULL,
    surname VARCHAR (50) NOT NULL,
    password VARCHAR (50) NOT NULL,
    email VARCHAR (355) UNIQUE NOT NULL
);
</code></pre>
 <br> У нас есть таблица пользователя, в которой есть колонка <code>surname</code>. Предположим, что нас не устраивает ее название и мы решили сменить его на <code>last_name</code>. В случае, если мы можем погасить сервис, то процесс миграции выглядит довольно просто:
 <br> 
 <br> 
 <ul> 
  <li>Создаем новую колонку <code>last_name</code>.</li> 
  <li>Копируем в нее значения из <code>surname</code>.</li> 
  <li>Добавляем на нее ограничение NOT NULL.</li> 
  <li>Меняем исходный код таким образом, чтобы он работал с новой колонкой.</li> 
 </ul>
 <br> Чтобы провести релиз без даунтайма и с обратной совместимостью, нам нужно сделать следующее:
 <br> 
 <br> <strong>Релиз 1 (app1, db1):</strong>
 <br> 
 <br> 
 <ul> 
  <li>Создаем колонку <code>last_name</code> в БД без ограничения NOT NULL.</li> 
  <li>Снимаем ограничение NOT NULL с <code>surname</code>.</li> 
  <li>В коде приложения начинаем записывать значения как в <code>surname</code>, так и в <code>last_name</code>.</li> 
  <li>Чтение должно быть из <code>last_name</code>, но колонка <code>surname</code> должна быть как fallback в случае, если <code>last_name</code> не содержит значения.</li> 
 </ul>
 <br> После релиза этой версии мы должны убедиться, что для всех новых записей и тех, в которых менялась <code>surname</code>, колонка <code>last_name</code> содержит значения, а <code>surname</code> всё также остается заполненной.
 <br> 
 <br> <strong>Релиз 2 (app2, db2):</strong>
 <br> 
 <br> 
 <ul> 
  <li>Копируем данные из <code>surname</code> в <code>last_name</code> для всех записей.</li> 
  <li>Перестаем записывать и читать данные в <code>surname</code>, потому что <code>last_name</code> теперь всегда содержит корректные значения.</li> 
  <li>Добавляем ограничение NOT_NULL на <code>last_name</code>.</li> 
 </ul>
 <br> <strong>Релиз 3 (app3, db3):</strong>
 <br> 
 <br> 
 <ul> 
  <li>Удаляем колонку <code>surname</code> из БД.</li> 
 </ul>
 <br> Приведенные выше примеры не исчерпывающие, и каждая конкретная ситуация требует отдельного планирования и подготовки к миграциям.
 <br> 
 <br> Но в рамках миграции схемы БД существует еще одна проблема, которая не может быть не затронута хотя бы поверхностно: блокировки БД в момент миграции. Надо не забывать, что в момент миграции БД мы также обслуживаем пользователей, и неправильно составленная миграция может как не выполниться (хотя без нагрузки всё будет хорошо), так и «положить» приложение. Чтобы грамотно составлять миграции предлагаю ознакомиться с несколькими статьями:
 <br> 
 <br> 
 <ul> 
  <li><a href="https://medium.com/braintree-product-technology/postgresql-at-scale-database-schema-changes-without-downtime-20d3749ed680">https://medium.com/braintree-product-technology/postgresql-at-scale-database-schema-changes-without-downtime-20d3749ed680</a></li> 
  <li><a href="https://leopard.in.ua/2016/09/20/safe-and-unsafe-operations-postgresql#.Xtsrep4zZ95">https://leopard.in.ua/2016/09/20/safe-and-unsafe-operations-postgresql#.Xtsrep4zZ95</a></li> 
  <li><a href="https://www.braintreepayments.com/blog/safe-operations-for-high-volume-postgresql/">https://www.braintreepayments.com/blog/safe-operations-for-high-volume-postgresql/</a></li> 
 </ul>
 <br> Со знанием всего этого мы получаем схему, когда приложение обратно совместимо с БД, но у нас есть еще несколько точек взаимодействия с другими сущностями, которые до сих пор мешают нам проводить бесшовные релизы.
 <br> 
 <br> 
 <h2>Frontend REST API</h2>
 <br> Как я уже говорил выше, у нас есть SPA, написанное на Angular, которое общается с нашим бэкендом посредством REST API. Весь фронтенд хостится отдельно от бэкенда и, в целом, независим от него. Обеспечение обратной совместимости по API следует тем же базовым принципам, что и по схеме БД, но сильно отличается в деталях. 
 <br> 
 <br> 
 <h3>SPA</h3>
 <br> Сам по себе подход, когда фронтовое приложение сразу же полностью загружается пользователю и общается с бэкендом посредством REST, доказал свою практичность, но для разработки это принесло дополнительные проблемы. Основные из них:
 <br> 
 <br> 
 <ul> 
  <li>Обновление фронтенда с внесением новой функциональности или исправлением ошибок, возможно, критических.</li> 
  <li>Несовместимые изменения в API сервиса.</li> 
 </ul>
 <br> 
 <h3>Изменения только фронтенда</h3>
 <br> Если у нас есть сервис типа CRM или какой-либо соцсети, то пользователи могут неделями не перезагружать страницу, что не позволяет нам оперативно доставлять обновления. Для решения этой проблемы можно использовать подход, когда фронтенд периодически опрашивает сервер о текущей актуальной версии, и в случае расхождения с текущей версией предлагает пользователю перезагрузить страницу (но не делает этого автоматически, никто не любит принудительные обновления во время работы). Также надо корректно настроить кэширование, подходящее для всех браузеров и позволяющее оперативно инвалидировать кэш.
 <br> 
 <br> 
 <h3>Изменения в REST API</h3>
 <br> Версионирование REST API довольно подробно описано в многочисленных руководствах, но очень часто мы этим пренебрегаем, потому что у нас только один клиент (наше фронтовое приложение).
 <br> 
 <br> Создание новой версии REST API занимает значительное время и ведет к дублированию и временной поддержке старого кода. Поэтому часто изменения производятся в существующем API: добавляются/убираются параметры, меняются форматы ответов и т. д. Соответственно, к этим изменениям готовится новая версия фронтенда, которая должна быть развёрнута «одновременно» с бэкендом.
 <br> 
 <br> Часто такие изменения оправданы и мы действительно можем не обработать корректно небольшое число запросов. Но в случае с SPA, как я писал выше, это становится сложнее, потому что фронтенд может долго не обновляться и несовместимые изменения просто сломают работу всего приложения.
 <br> 
 <br> Чтобы избежать этого, стоит использовать следующие подходы:
 <br> 
 <br> 
 <ul> 
  <li>Вносить в API только обратно совместимые изменения. Если мы меняем конкретные параметры одного запроса, то не навешивать ограничения обязательности и т. д. Если мы вводим новый API, то не удалять старый.</li> 
  <li>Необходимо понимать, сколько пользователей какие версии используют. Предположим, что мы создали вторую версию метода получения данных о пользователе, и сохранили при этом первую версию. Мы не можем просто так удалить первую версию, потому что мы не знаем, сколько человек осталось на старой версии API. Для этого необходимо иметь конкретные метрики и сегментах пользователей, и уже на основе этих данных принимать решения об отказе от старого API.</li> 
  <li>Предложение пользователю о загрузке новой версии приложения. Как уже говорил выше, эта функциональность не должна быть принудительной, потому что пользователь может активно пользоваться приложением, а неожиданная перезагрузка будет воспринята очень негативно.</li> 
 </ul>
 <br> 
 <h2>Feature-management</h2>
 <br> Разговор об обратной совместимости будет неполным, если не упомянуть про feature-management.
 <br> 
 <br> Первое, что приходит на ум, это kill-switches, которые позволяют быстро включать/выключать функциональность без переразвёртывания приложения. Kill-switch, по сути, это просто булево значение <code>enabled</code>/<code>disabled</code>. С помощью kill-switch мы можем перейти к парадигме release ≠ deploy, что позволяет нам избежать стресса релиза и сделать его более контролируемым.
 <br> 
 <br> Feature-management через feature-flags позволяет нам делать более хитрые изменения, которые помогают избежать «факапов» в проде.
 <br> 
 <br> 
 <ul> 
  <li><strong>Тестирование в проде</strong>. Звучит очень страшно, но на самом деле это довольно полезная возможность. Часто мы не можем воспроизвести полное окружение в среде разработки, и полноценное тестирование возможно только в боевом окружении. При таком подходе мы можем выбирать группы и количество пользователей, которым «выпала честь» попробовать новую функциональность. В таком варианте мы получаем абсолютно контролируемое тестирование, а не тысячи одновременно проблемных пользователей.</li> 
  <li><strong>Контролируемые миграции</strong>. Переключение на новые версии смежных сервисов, смена адресов других сервисов и т. д.</li> 
  <li><strong>A/B-тестирование</strong>, по сути немного схоже с тестированием в проде, но позволяет нам проверять бизнесовые гипотезы.</li> 
 </ul>
 <br> Важным заметить, что мы можем предоставлять feature-flags и для фронта, при этом вычисляться они будут на бэке.
 <br> 
 <br> 
 <h2>Что в итоге?</h2>
 <br> С помощью этого подхода мы существенно упрощаем как релиз, так и дальнейшую поддержку приложения. Мы можем:
 <br> 
 <br> 
 <ul> 
  <li>релизиться в любой момент, не беспокоясь за отказ в обслуживании клиентов;</li> 
  <li>откатить приложение на стабильную версию в случае каких-либо проблем в новой версии;</li> 
  <li>плавно развернуть новую функциональность в удобное для нас время, а также отключать её в случае неработоспособности или отказа сегмента.</li> 
 </ul>
 <br> Но этот подход, как и любой другой, требует свой плату, а именно:
 <br> 
 <br> 
 <ul> 
  <li>увеличивается время разработки;</li> 
  <li>изменения требуют более вдумчивого планирования;</li> 
  <li>в код вносится техдолг, который подразумевает его периодическую чистку;</li> 
  <li>в некоторых случаях новая функциональность дольше доставляется в прод.</li> 
 </ul>
</div>', '2020-12-24 11:10:00', 'На пути к Canary', 2, null, 6),
        (11, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/4d/nu/vu/4dnuvuld8acuwmfhqisppqndqxk.jpeg">
 <br> 
 <br> 17 декабря 2020 года Евросоюз одобрил <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:L:2020:426I:FULL&amp;from=EN" rel="nofollow">третий пакет санкций в отношении юридических и физических лиц из Беларуси</a> (7 юрлиц, 29 физлиц). Среди пострадавших оказалась частная IT-компания Synesis: она разработала систему распознавания лиц для камер видеонаблюдения, которую использует МВД.
 <br> 
 <br> Synesis <a href="https://synesis-group.com/ru/blog/synesis-will-appeal-the-sanctions-of-the-council-of-the-european-union/" rel="nofollow">категорически не согласна</a> с санкциями конкретно против неё. Компания заявила, что не получила денег от МВД за использование её системы.
 <br> <a name="habracut"></a>
 <br> Компания намерена обжаловать неправомерное включение компании в список санкционных организаций.
 <br> 
 <br> Фрагмент официального заявления:
 <br> 
 <br> 
 <blockquote>
  Synesis считает, что для включения компании в данный список нет никаких юридических или рациональных оснований. Причина, указанная Советом, глубоко ошибочна и основана на неправильном понимании функционирования технологий распознавания лиц, которыми занимается компания. Synesis решительно отвергает ошибочное предположение Совета о том, что технология может использоваться или когда-либо использовалась правительством Беларуси для идентификации протестующих.
  <br> 
  <br> Компания хочет подчеркнуть, что технология распознавания лиц никогда не использовалась и фактически не может быть использована для установки участников антиправительственных протестов в Минске или деятелей белорусской оппозиции. Платформа Kipod предназначена для обнаружения заранее идентифицированных лиц, загруженных в базу данных (разыскиваемых преступников, пропавших без вести, включая пропавших без вести детей и т.д.), но не способна идентифицировать людей по записям. Более того, Synesis никогда не получала платежей от Министерства внутренних дел Беларуси или каких-либо белорусских правоохранительных органов.
  <br> 
  <br> Synesis выражает свои глубочайшие сожаления сотням сотрудников и их семьям, финансовая стабильность которых поставлена решением Совета ЕС под угрозу, и уверяет в своем твердом намерении отменить его. В данный момент компания делает все возможное, чтобы смягчить любое возможное влияние решения на сотрудников и международных партнеров.
 </blockquote>
 <br> Synesis не первый год работает над облачной платформой для мониторинга общественной безопасности — Kipod. В Беларуси она стала основой для внедрения Республиканской системы мониторинга общественной безопасности, <a href="https://dev.by/news/synesis-otvet-es" rel="nofollow">пишет</a> dev.by, крупнейший белорусский портал для разработчиков. 
 <br> 
 <br> Весной прошлого года в <a href="https://dev.by/news/shatrov-txt" rel="nofollow">интервью</a> глава Synesis Александр Шатров отмечал, что в ближайшие пять лет по всей стране к платформе будут подключены 360 тысяч камер.
 <br> 
 <br> В электронном журнале ЕС опубликовано <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:L:2020:426I:FULL&amp;from=EN" rel="nofollow">краткое объяснение</a>, почему компанию добавили в список: 1)&nbsp;среди пользователей системы КГБ и МВД; 2)&nbsp;CEO Synesis публично критиковал протесты; 3)&nbsp;работникам Synesis запрещено вести коммуникацию на белорусском языке. 
 <br> 
 <br> В октябре этого года компания Synesis <a href="https://dev.by/news/shatrov-protesty" rel="nofollow">пожаловалась на травлю</a> из-за системы распознавания лиц, действующей в Минске.
 <br> 
 <br> 
 <blockquote>
  <img src="https://habrastorage.org/webt/jy/sd/rr/jysdrr7tqgfjt50wtcshw89ctho.png" align="left">
  <h3>Минутка заботы от НЛО</h3>
  <br> Этот материал мог вызвать противоречивые чувства, поэтому перед написанием комментария освежите в памяти кое-что важное:
  <br> 
  <br> 
  <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Как написать комментарий и выжить</b> 
   <div class="spoiler_text">
    <ul> 
     <li>Не пишите оскорбительных комментариев, не переходите на личности.</li> 
     <li>Воздержитесь от нецензурной лексики и токсичного поведения (даже в завуалированной форме).</li> 
     <li>Для сообщения о комментариях, нарушающих правила сайта, используйте кнопку «Пожаловаться» (если доступна) или <a href="https://habr.com/feedback/?type=4">форму обратной связи</a>.</li> 
    </ul>
    <br> Что делать, если: <a href="https://habr.com/info/help/karma/#recovery">минусуют карму</a> | <a href="https://habr.com/info/help/sandbox/">заблокировали аккаунт</a>
    <br> 
    <br> → <a href="https://habr.com/ru/docs/authors/codex/">Кодекс авторов Хабра</a> и <a href="https://habr.com/ru/docs/help/rules/#culture">хабраэтикет</a>
    <br> → <a href="https://habr.com/info/help/rules/">Полная версия правил сайта</a>
   </div> 
  </div>
 </blockquote>
</div>', '2020-12-18 16:02:00', 'Частная компания Synesis протестует против санкций Евросоюза', 25, null, 2),
        (12, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div class="oembed">
  <iframe id="5fdf0caad4323713fd415951" src="https://embedd.srv.habr.com/iframe/5fdf0caad4323713fd415951"></iframe>
 </div>
 <br> Иэн Харрис утверждает, что возможно <b>более половины часто выполняемых хирургических операций – не более чем плацебо</b>, и что необходимы слепые тесты с контрольными группам.
 <br> 
 <br> Иэн Харрис, профессор ортопедической хирургии в Университете Нового Южного Уэльса в Сиднее, Австралия, написал книгу под названием «Хирургия, абсолютное плацебо» (Surgery, The Ultimate Placebo). Книгу я не читала, но видела на<a href="https://www.youtube.com/watch?v=IzueFu1cq5U" rel="nofollow"> YouTube его отличную лекцию на эту же тему</a>. В ней он дает оценку множеству часто совершаемых хирургических операций и открывает глаза на тот факт, что зачастую они не более эффективны (а может даже и хуже) чем плацебо или лекарства, которые не проходили тестирование. Он освещает историю исследований фиктивной хирургии, говорит об эффекте плацебо и объясняет почему многие хирурги игнорируют различные доказательства и продолжают проводить неэффективные операции. Также из этой лекции у него можно поучиться методам критического мышления.
 <br> <a name="habracut"></a>
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Список операций</b> 
  <div class="spoiler_text"> <b>Операции, которые не лучше плацебо, иными словами, бесполезные, как доказано в плацебо-контролируемых экспериментах:</b>
   <br> 
   <br> 
   <ul> 
    <li> Операция по блокированию артерии в грудной клетке для увеличения притока крови при стенокардии (angina pectoris).</li> 
    <li> Трансплантация дофаминергетических клеток в мозг при болезни Паркинсона.</li> 
    <li> Операция по снижению или выравниванию давления во внутреннем ухе при болезни Меньера.</li> 
    <li> Операция по закрытию открытого овального ока в сердце для лечения мигрени.</li> 
    <li> Артроскопия коленного сустава при артрите (только в США делают около миллиона таких операций в год).</li> 
    <li> Артроскопия коленного сустава при разрыве мениска.</li> 
    <li> Внутридисковая электротермальная терапия при болях в позвоночнике.</li> 
    <li> Операция по обработке мышц при боковом эпикондилите («локте теннисиста»).</li> 
    <li> Вертебропластика – введение костного цемента в тело позвоночника.</li> 
    <li> — Операция по денервации (повреждению) почечного нерва для лечения гипертонии</li> 
   </ul>
   <br> <b>Другие операции с доказанной неэффективностью:</b>
   <br> 
   <br> 
   <ul> 
    <li>Лоботомия – по киношному ужасная операция, которая, впрочем, изначально предполагалась как средство лечения психиатрических заболеваний. Автор операции получил Нобелевскую премию.</li> 
    <li> Радикальная мастэктомия.</li> 
    <li> Операция по внутричерепному-внечерепному обходу для улучшения мозгового кровообращения.</li> 
    <li> Операция при синдроме плики</li> 
   </ul>
   <br> <b>Операции которые вызывают много вопросов по эффективности и необходимости:</b>
   <br> 
   <br> 
   <ul> 
    <li> Спондилодез – сращивание позвонков для обездвижения части позвоночника для лечения многих патологий.</li> 
    <li> Операция при рассеянном склерозе.</li> 
    <li> Гистерэктомия, удаление матки.</li> 
    <li> Кесарево сечение.</li> 
    <li> Артроскопия коленного сустава.</li> 
    <li> Операция по удалению аппендикса (имеется в виду превентивное удаление или удаление его, когда можно было бы обойтись другими мерами).</li> 
    <li> Коронарное шунтирование.</li> 
    <li> Установка венозного фильтра при тромбозе глубоких вен.</li> 
    <li> Закрепление блуждающей почки</li> 
   </ul>
   <br> 
  </div> 
 </div>
 <br> Впервые со скептицизмом Харрис познакомился в 18 лет, когда смотрел телевизионный документальный фильм, в котором Джеймс Рэнди и Дик Смит проводили контролируемые тесты на контрольных группах лозоискателей. Исследователи закопали 10 труб и попросили лозоискателей определить по какой из них течет вода. Когда им сообщили какая из труб активна, все они определили ее верно, но когда он этого не знали, верными были лишь 12% ответов. Харрис был впечатлен тем, что столь простой тест мог с легкостью опровергнуть базовое утверждение.
 <br> 
 <br> Когда он недавно пересмотрел этот фильм, он был впечатлен реакцией лозоискателей, когда им показали, что лозоискательство не работает. В них он узнал хирургов, операции которых не проверялись и не помогали пациентам. Они придумывали различные отговорки и гипотезы о том, почему эксперименты не давали ожидаемых результатов и говорили, что не откажутся от тех или иных операций «потому что они работают».
 <br> 
 <br> В начале XX века обычной операцией при сердечных заболеваниях была перевязка внутренней грудной артерии. Тогда казалось очевидным, что это работает: пациентам становилось лучше. В 1939 году эксперимент по фиктивной хирургии показал, что <b>если хирург просто делал разрез, но не делал перевязку, то ровно такому же количеству пациентов становилось лучше</b>. Хирурги прислушались и перестали делать перевязки.
 <br> 
 <br> Харрис берет нас в исторический тур по хирургическим операциям, неэффективность которых была доказана исследованиями. Хирурги часто отвергают доказательства и придумывают объяснения, почему те или иные операции не срабатывали в этих исследованиях – они остаются убежденными в том, что эти операции работают, и все в их руках. Когда они отказываются прекратить выполнение этих операций, их оправдания звучат так же, как и у лозоискателей. Они настаивают на том, чтобы продолжать делать эти операции «потому что они работают» (по их опыту). На сотни тысяч операций впустую тратятся миллиарды долларов, хотя неэффективность этих операций была доказана (либо тесты даже не проводились, а значит эти операции не сравнивались даже с бездействием).
 <br> 
 <br> 
 <h3>Ложные аналогии и ошибочные рассуждения</h3>
 <br> Зачастую теория утверждает, что операция должна помогать, хотя биологическая достоверность ничего не значит – лишь тесты могут показать, что она действительно работает. Доктор Харрис говорит, что «можно подвести биологический механизм для чего угодно».
 <br> 
 <br> Аналогия с парашютами говорит нам о том, что для проверки эффективности работы парашютов нам не нужно проводить рандомизированное контролируемое исследование. Доктор Харрис говорит, что часто видел, как эту методику применяли для процедур, которые в результате оказывались бесполезными.
 <br> 
 <br> Сравнительные исследования эффективности проводятся для сравнения двух разных методов чего-либо (вроде инъекций стероидов от боли в спине), но они не говорят нам, работает ли какой-либо из этих методов. Их лучше было бы назвать исследованиями сравнительной неэффективности. Первым шагом должно было быть внедрение контрольной группы и сравнение инъекций стероидов с отсутствием инъекций.
 <br> 
 <br> 
 <h3>Восприятие эффективности</h3>
 <br> Воспринимаемая эффективность — это сочетание двух факторов: специфических эффектов лечения и его эффектов плацебо.
 <br> 
 <br> Есть ярлыки в мышлении, на которые все люди запрограммированы. Они предполагают, что корреляция означает причинную связь, и попадают в заблуждение post hoc ergo propter hoc (Если событие X произошло после события Y, значит, событие Y является причиной события X). Подобные сокращения в процессах рассуждений часто приводят к ошибкам. Улучшение может быть связано с чем-то другим, кроме операции, например естественным течением заболевания, регрессом к среднему значению или сопутствующим лечением.
 <br> 
 <br> Улучшение может быть замечено пациентом (иногда это ложное восприятие из-за факторов плацебо или неправильной интерпретации) и/или врачом из-за ошибок в измерениях, накопления ошибок в отчетах, систематических ошибок подтверждения и множества других аспектов. Врачи оценивают эффективность своего лечения выше, чем их пациенты. Восприятие врачей ошибочно; они постоянно переоценивают преимущества и недооценивают вред своего лечения.
 <br> 
 <br> 
 <h3>Лечение не всегда необходимо</h3>
 <br> Харрис рассказывает историю Арчи Кокрейна, в честь которого было названо Кокрейновское сотрудничество по систематическому анализу. Как единственный врач в лагере для военнопленных во время Второй мировой войны, он был ответственен за 10 000 заключенных, многие из которых страдали от открытых ран, дизентерии, брюшного тифа и других серьезных заболеваний. Его просьбы о врачах и лекарствах были отклонены его немецкими захватчикам, которые сказали, что врачи тут не нужны. За шесть месяцев умерло всего 4 заключенных, каждый из которых был застрелен за попытку к бегству. Все остальные поправились без лечения.
 <br> 
 <br> История Харриса искажает правду, но служит яркой иллюстрацией важного факта: выздоровление зачастую происходит без какого-либо лечения. Опыт Кокрейна заставил его усомниться в том, что делается во имя медицины. Пациентов держали в постели в течение недели после сердечного приступа не из-за каких-либо доказательств, а просто «потому, что это имеет смысл». Кокрейн провел контролируемое исследование и обнаружил, что на самом деле постельный режим вредил людям.
 <br> 
 <br> 
 <h3>Зачастую хирургия работает по принципу плацебо</h3>
 <br> Харрис описывает множество факторов, влияющих на реакцию пациента на плацебо. Систематический обзор показал, что плацебо было столь же эффективным, как и хирургическое вмешательство, более чем в половине изученных случаев. Все недавние испытания, сравнивающие хирургическое вмешательство с плацебо, показали, что хирургическое вмешательство не лучше плацебо.
 <br> 
 <br> Он опровергает все аргументы хирургов в пользу продолжения операций, которые были протестированы, и неэффективность которых была доказана. Настоящая причина в том, что они по-прежнему считали эти процедуры эффективными, так же как лозоискатели продолжали верить, что они смогут найти воду с помощью вилки. Традиции и личный опыт побеждают науку и разум.
 <br> 
 <br> Наука — это просто систематический способ уменьшить количество ошибок. Она несовершенна, но лучше любого другого подхода. Слепые испытания — наименее предвзятый способ определения эффективности.
 <br> 
 <br> 
 <h3>Этические проблемы</h3>
 <br> Некоторые люди возражают, что делать фиктивные операции неэтично. Плацебо неэтичны в клинической практике для лечения индивидуума, но не в исследованиях, где они необходимы для поиска истины и уравновешивания вреда и пользы для больших групп людей и для предотвращения будущего вреда. Конечно, делать неэффективные операции неэтично. Что касается науки, основанной на медицине, мы постоянно ставим под сомнение этичность продажи пищевых добавок с слоганами и утверждениями, которые никогда не проверялись должным образом. Некоторые лечебные травы могут быть безвредными, но операция всегда сопряжена с риском инфицирования, повреждения тканей и побочных эффектов. А еще это дорого: миллионы долларов во всем мире тратятся на процедуры, которые подвергают пациентов риску без какой-либо пользы.
 <br> 
 <br> 
 <h3>Заключение: доказательства необходимы</h3>
 <br> В заключение Харрис говорит, что мы должны относиться к новым хирургическим процедурам как к новым лекарствам и платить только за те, эффективность которых была доказана. Большинство хирургических процедур, выполняемых сегодня, не подвергались слепым испытаниям.
 <br> 
 <br> Совет пациентам: можно получать второе мнение, и вы всегда должны спрашивать своего хирурга о наличии доказательств, показывающих преимущества и риски процедуры, и чего вы можете ожидать, если операция не будет сделана.
 <br> 
 <br> 
 <ul> 
  <li><a href="https://news.ycombinator.com/item?id=25472970" rel="nofollow">Обсуждение на HackerNews</a></li> 
  <li>Телеграм-канал <a href="https://t.me/HackerNews_ru" rel="nofollow">«HackerNews на русском»</a></li> 
 </ul>
</div>', '2020-12-20 11:36:00', 'Хирургическое плацебо', 67, null, 9),
        (13, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Депутаты «Единой России» Александр Хинштейн и Сергей Боярский внесли в Госдуму поправку, обязывающую социальные сети контролировать размещенный контент и блокировать его при обнаружении противоправной информации. Об этом пишет ТАСС со ссылкой на источник в нижней палате парламента и текст документа. Хинштейн позже сказал агентству, что меры не носят «репрессивного характера», а направлены на «наведение порядка в интернете».
 <br> 
 <br> Согласно документу, речь идет о материалах с порнографическими изображениями несовершеннолетних, рекламе интернет-казино и дистанционной продажи алкоголя, данных о способах изготовления и употребления наркотиков, информации, склоняющей детей к опасным для жизни или незаконным действиям, а также о способах совершения самоубийства и призывах к нему.
 <br> <a name="habracut"></a>
 <br> Кроме того, соцсети обяжут выявлять информацию «в неприличной форме, которая оскорбляет человеческое достоинство и общественную нравственность, [выражает] явное неуважение к обществу, государству, официальным государственным символам РФ, Конституции РФ» или органам госвласти. Также в качестве требующего блокировки контента называются призывы к массовым беспорядкам, экстремизму и участию в несогласованных публичных мероприятиях.
 <br> 
 <br> Если владелец соцсети обнаружил незаконный контент, он «обязан незамедлительно принять меры по ограничению доступа [к нему]», говорится в поправке. Если он не может самостоятельно оценить противоправность контента, то направляет его в Роскомнадзор, а тот уже решает, блокировать контент или нет.
 <br> 
 <br> Также документ закрепляет обязанность соцсетей размещать правила пользования ими. Лица, права и законные интересы которых нарушены владельцем социальной сети, могут обжаловать его решения в суде, «в том числе с исками о возмещении убытков, компенсации морального вреда, защите чести, достоинства и деловой репутации».
 <br> 
 <br> [ <a href="https://www.rbc.ru/society/21/12/2020/5fe040639a79475f76615cbb?utm_source=yxnews&amp;utm_medium=desktop&amp;nw=1608544379000" rel="nofollow">Источник</a> ]
</div>', '2020-12-21 12:58:00', 'Наведение «порядка» в интернете, очередной акт Марлезонского балета', 1, null, 10),
        (14, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/lr/qm/ac/lrqmac48rs5gvfelpenhkuw17xm.png">
 </div>
 <br> По <a href="https://www.bleepingcomputer.com/news/microsoft/microsoft-dont-delete-windows-10-root-certificate-expiring-this-month/" rel="nofollow">информации</a> Bleeping Computer, в конце этого месяца закончится срок действия корневого сертификата некоторых версий Windows, включая XP/2000/Server 2003/Windows 7/Vista/Server 2008/Server 2008 R2. Microsoft <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/trusted-root-certificates-are-required" rel="nofollow">просит</a> системных администраторов не удалять корневые сертификаты Windows с истекшими сроками действия. Они необходимы для корректной работы ОС, а их отсутствие может вызвать сбой системы. 
 <br> <a name="habracut"></a>
 <br> Эта просьба компании также относится к корневому сертификату Microsoft Root Authority, который закончится 31 декабря 2020 года. 
 <br> 
 <br> Проверить срок действия корневых сертификатов в Windows можно в хранилище сертификатов (панель управления, вкладка «Содержимое», кнопка «Сертификаты). В Windows 7/10 это можно также сделать с помощью <a href="https://docs.microsoft.com/ru-ru/dotnet/framework/tools/certmgr-exe-certificate-manager-tool" rel="nofollow">утилиты</a> Certmgr.exe (средство диспетчера сертификатов) или <a href="https://docs.microsoft.com/ru-ru/dotnet/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in" rel="nofollow">Certmgr.msc</a>.
 <br> 
 <br> У всех корневых сертификатов есть срок действия, по истечению которого они и все полученные на их основе сертификаты становятся недействительными. Но обычно это не проблема, так как производители ПО и устройств своевременно выпускают обновление, заменяющее истекший корневой сертификат на новый с другим сроком действия. Если это не произойдет, то пользовательские устройства, например, больше не смогут устанавливать безопасные интернет-соединения, поскольку защита, обеспечиваемая корневым сертификатом, была нарушена.
 <br> 
 <br> Microsoft не пояснила, когда будет выпущен новый корневой сертификат взамен текущего. Компания предупредила, что в любом случае сертификаты с истекшим сроком действия все еще используются Windows для обратной совместимости и никогда не должны удаляться из системы. Даже если в системе есть доверенный корневой сертификат с истекшим сроком действия, то все, что было подписано с использованием этого сертификата до даты истечения срока действия, требует, чтобы этот доверенный корневой сертификат был подтвержден в системе. 
 <br> 
 <br> Microsoft уточнила, что если сертификаты с истекшим сроком действия не отозваны, то их можно использовать для проверки всего, что было подписано ими до истечения срока их действия.
 <br> 
 <br> 14 января 2020 года <a href="https://habr.com/ru/news/t/483858/">закончился</a> период расширенной поддержки операционной системы Windows 7. Компьютеры под ее управлением продолжат работать, но производитель ОС не гарантирует их безопасность и советует перейти на Windows 10. Microsoft будет до 10 января 2023 года платно поддерживать Windows 7 для участников программы расширенных обновлений безопасности (Extended Security Updates program — ESU).
 <br> 
 <br> 
 <blockquote>
  См. также:
  <br> 
  <ul> 
   <li>«<a href="https://habr.com/ru/news/t/534574/">Let''s Encrypt предложила вариант продления службы своих сертификатов в старых версиях Android</a>»</li> 
   <li>«<a href="https://habr.com/ru/company/globalsign/blog/504784/">Корневой сертификат AddTrust от Sectigo истёк 30 мая 2020 года, что вызвало проблемы в клиентах OpenSSL 1.0.x и GnuTLS</a>»</li> 
   <li>«<a href="https://habr.com/ru/company/habr/blog/504708/">Проблема с сертификатами Sectigo после 30 мая 2020 года и метод решения</a>»</li> 
   <li>«<a href="https://habr.com/ru/news/t/506446/">Устаревшие сертификаты SSL могут отразиться на работе умных устройств</a>»</li> 
   <li>«<a href="https://habr.com/ru/company/dcmiran/blog/506026/">Проблема устаревших корневых сертификатов. На очереди Let''s Encrypt и умные телевизоры</a>»</li> 
  </ul>
 </blockquote>
</div>', '2020-12-23 14:20:00', 'Корневой сертификат Microsoft истекает в этом месяце, но компания просит его не удалять', 68, null, 4),
        (15, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Был уже вечер, когда ко мне обратился разработчик. Из мастер-ветки пропал патч — коммит deadbeef. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/98/rv/h3/98rvh34v0ktr0u4qqxyqax2mgie.png">
 <br> 
 <br> Мне показали доказательства: вывод двух команд. Первая из них —
 <br> 
 <br> 
 <pre><code class="plaintext"> git show deadbeef </code></pre>
 <br> — показывала изменения файла, назовём его Page.php. В него добавились метод canBeEdited и его использование. 
 <br> 
 <br> А в выводе второй команды —
 <br> 
 <br> 
 <pre><code class="plaintext"> git log -p Page.php </code></pre>
 <br> — коммита deadbeef не было. Да и в текущей версии файла Page.php не было метода canBeEdited.
 <br> 
 <br> Не найдя решения быстро, мы сделали ещё один патч в мастер, разложили изменения — и я решил, что вернусь к проблеме на свежую голову.
 <br> <a name="habracut"></a>
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">”offtopic”</b> 
  <div class="spoiler_text">
   Я старался сделать этот текст понятным людям, не очень хорошо знакомым с Git. Если вы его основной контрибьютор или знаете об этой системе достаточно для написания собственной книги, возможно, некоторые части статьи могут показаться вам очевидными.
   <br> 
  </div> 
 </div>
 <br> 
 <br> 
 <h2>Это сделали специально? Файл переименовали?</h2>
 <br> Поиск проблемы я начал с обращения за помощью в чат команды релиз-инженеров. Они среди прочего отвечают за хостинг репозиториев и автоматизацию процессов, связанных с Git. Честно говоря, они, наверное, и патч могли удалить, но сделали бы это без следов.
 <br> 
 <br> 
 <img width="550" src="https://habrastorage.org/webt/kx/mg/wd/kxmgwdn7dyqao1esaevoixz0fx8.png">
 <br> Один из релиз-инженеров предложил запустить git log с опцией --follow. Возможно, файл переименовали и поэтому Git не показывает часть изменений.
 <br> 
 <blockquote>
  --follow
  <br> Continue listing the history of a file beyond renames (works only for a single file).
  <br> <i>(Показывать историю файла после его переименований (работает только для одиночных файлов))</i>
  <br> 
 </blockquote>
 <br> В выводе <code>git log --follow Page.php</code> нашёлся deadbeef, но удалений или переименований файла не было. А ещё не было видно, чтобы где-то удалялся метод canBeEdited. Казалось, что опция follow играет какую-то роль в этой истории, но куда делись изменения, все ещё было неясно.
 <br> 
 <br> К сожалению, рассматриваемый репозиторий — один из самых больших у нас. С момента внесения первого патча и до его исчезновения была совершена 21 000 коммитов. Повезло ещё, что нужный файл правился только в десяти из них. Я изучил их все и не нашёл ничего интересного.
 <br> 
 <br> 
 <h2>Ищем свидетелей! Нам нужен livebear</h2>
 <br> Стоп! Мы же только что искали deadbeef? Давайте рассуждать логически: должен быть некий коммит, назовём его livebear, после которого deadbeef перестал отображаться в истории файла. Возможно, это нам ничего не даст, но натолкнёт на какие-то мысли.
 <br> 
 <br> Для поиска в истории Git есть команда git bisect. Согласно <a href="https://git-scm.com/docs/git-bisect">документации</a>, она позволяет найти коммит, в котором впервые появился баг. На практике её можно использовать для поиска любого момента в истории, если знать, как определить, наступил ли этот момент. Нашим багом было отсутствие изменений в коде. Я мог это проверить с помощью другой команды — git grep. Ведь мне достаточно было знать, есть ли метод canBeEdited в Page.php. Немного отладки и чтения документации:
 <br> 
 <br> 
 <blockquote>
  livebear [build]: Merge branch origin/XXX into build_web_yyyy.mm.dd.hh
  <br> 
 </blockquote>
 <br> Выглядит как обычное слияние (merge commit) ветки задачи с веткой релиза. Но с этим коммитом удалось воспроизвести проблему:
 <br> 
 <br> 
 <pre><code class="plaintext">$ git checkout -b test livebear^1 2&gt;/dev/null
$ grep -c canBeEdited Page.php
2
$ git merge —-no-edit -—no-stat livebear^2
Removing …
…
Removing …
Merge made by the ‘recursive’ strategy.

$ grep -c canBeEdited Page.php
0
$ git log -p Page.php | grep -c canBeEdited
0
</code></pre>
 <br> Правда, ничего интересного в livebear я не нашёл, а его связь с нашей проблемой осталась неочевидна. Подумав немного, я отправил результаты своих поисков разработчику: мы сошлись на том, что, даже если доберёмся до истины, схема воспроизведения будет слишком сложной и мы не сможем подстраховаться от чего-то подобного в будущем. Поэтому официально мы решили прекратить поиски.
 <br> 
 <br> Однако моё любопытство осталось неудовлетворённым.
 <br> 
 <br> 
 <h2>Упорство не порок, а большое свинство</h2>
 <br> Ещё несколько раз я возвращался к проблеме, прогонял git bisect и находил всё новые и новые коммиты. Все — подозрительные, все — слияния, но это ничего мне не дало. Мне кажется, что один коммит тогда попадался мне чаще других, но я не уверен, что именно он оказался виновником в итоге.
 <br> 
 <br> Конечно, я пробовал и другие методы поиска. Например, несколько раз перебирал 21 000 коммитов, которые были сделаны на момент возникновения проблемы. Это было не очень увлекательно, но мне попалась интересная закономерность. Я запускал одну и ту же команду:
 <br> 
 <br> 
 <pre><code class="plaintext">git grep -c canBeEdited {commit} -- Page.php</code></pre>
 <br> Оказалось, что «плохие» коммиты, в которых не было нужного кода, были в одной и той же ветке! И поиск по этой ветке быстро привёл меня к разгадке:
 <br> 
 <br> 
 <blockquote>
  changekiller Merge branch ''master'' into TICKET-XXX_description
  <br> 
 </blockquote>
 <br> Это тоже было слияние двух веток. И при попытке повторить его локально возникал конфликт в нужном файле — Page.php. Судя по состоянию репозитория, разработчик оставил свою версию файла, выбросив изменения из мастера (а именно они и потерялись). Прошло много времени, и разработчик не помнил, что именно произошло, но на практике ситуация воспроизводилась простой последовательностью:
 <br> 
 <br> 
 <pre><code class="plaintext">git checkout -b test changekiller^1
git merge -s ours changekiller^2
</code></pre>
 <br> Осталось понять, как легитимная последовательность действий могла привести к такому результату. Не найдя ничего про это в документации, я полез в исходники.
 <br> 
 <br> 
 <h2>Убийца — Git?</h2>
 <br> 
 <img width="400" src="https://habrastorage.org/webt/e1/yy/xz/e1yyxzgdl5o9tcdinq_0gybj-jc.png">
 <br> В документации было сказано, что команда git log получает на вход несколько коммитов и должна показать пользователю их родительские коммиты, исключая родителей коммитов, переданных с символом ^ перед ними. Выходит, что git log A ^B должен показать коммиты, которые являются родителями A и не являются родителями B.
 <br> 
 <br> Код команды оказался достаточно сложным. Там в изобилии были разные оптимизации для работы с памятью, да и в целом читать код на С никогда не казалось мне очень приятным занятием. Основную логику можно представить вот таким псевдокодом:
 <br> 
 <br> 
 <pre><code class="plaintext">// здесь это и тип, и название переменной
commit commit;
rev_info revs;

revs = setup_revisions(revisions_range);
while (commit = get_revision(revs)) {
	log_tree_commit(commit);
}
</code></pre>
 <br> Здесь функция get_revision принимает на вход revs — набор управляющих флагов. Каждый её вызов как будто должен отдавать следующий коммит для обработки в нужном порядке (или пустоту, когда мы дошли до конца). Ещё есть функция setup_revisions, которая заполняет структуру revs и log_tree_commit, которая выводит информацию на экран.
 <br> 
 <br> У меня было ощущение, что я понял, где искать проблему. Я передавал команде конкретный файл (Page.php), потому что меня интересовали только его изменения. Значит, в git log должна быть какая-то логика фильтрации «лишних» коммитов. Функции setup_revisions и get_revision использовались во многих местах — вряд ли проблема была в них. Оставалась log_tree_commit.
 <br> 
 <br> К моей несказанной радости, в этой функции и правда нашёлся код, вычисляющий, какие изменения были сделаны в том или ином коммите. Я думал, что общая логика должна выглядеть как-то так:
 <br> 
 <br> 
 <pre><code class="plaintext">void log_tree_commit(commit) {
	if (tree_has_changed(commit, commit-&gt;parents)) {
		log_tree_commit_1(commit);
}
}
</code></pre>
 <br> Но чем дольше я всматривался в настоящий код, тем больше понимал, что ошибся. Эта функция лишь выводила сообщения. Вот и верь после этого своим ощущениям!
 <br> 
 <br> Я вернулся к функциям setup_revisions и get_revision. Логику их работы было сложно понять — мешал «туман» из вспомогательных функций, часть из которых нужна была для правильной работы с указателями и памятью. Всё выглядело так, словно основная логика — это простой обход дерева коммитов «в ширину», то есть достаточно стандартный алгоритм:
 <br> 
 <br> 
 <pre><code class="plaintext">rev_info setup_revisions(revisions_range, ...) {
	rev_info rev;
	commit commit;
	
	// этой функции в реальном коде нет — это моё упрощение
	for (commit = get_commit_from_range(revisions_range)) {
		revs-&gt;commits = commit_list_append(commit, revs-&gt;commits)
	}
}

commit get_revision(rev_info revs) {
	commit c;
	commit l;

c = get_revision_1(revs);
	for (l = c-&gt;parents; l; l = l-&gt;next) {
		commit_list_insert(l, &amp;revs-&gt;commits);
	}
	return c;
}

commit get_revision_1(rev_info revs) {
	return pop_commit(revs-&gt;commits);
}
</code></pre>
 <br> Заводится список (revs-&gt;commits), туда помещается первый (самый верхний) элемент дерева коммитов. Затем постепенно из этого списка забираются коммиты с начала, а их родители добавляются в конец.
 <br> 
 <br> Вчитываясь в код, я обнаружил, что среди «тумана» из вспомогательных функций встречается сложная логика фильтрации коммитов, которую я так долго искал. Это происходит в функции get_revision_1:
 <br> 
 <br> 
 <pre><code class="plaintext">commit get_revision_1(rev_info revs) {
	commit commit;
	commit = pop_commit(revs-&gt;commits);
	try_to_sipmlify_commit(commit);
	return commit;
}

void try_to_simplify_commit(commit commit) {
	for (parent = commit-&gt;parents; parent; parent = parent-&gt;next) {
		if (rev_compare_tree(revs, parent, commit) == REV_TREE_SAME) {
			parent-&gt;next = NULL;
			commit-&gt;parents = parent;
		}
	}
}
</code></pre>
 <br> В случае когда происходит слияние нескольких веток, если состояние файла осталось таким же, как в одной из них, нет смысла рассматривать другие ветки. Если же состояние файла не менялось нигде, мы оставим только первую ветку.
 <br> 
 <br> Пример. Обозначим нулём коммиты, в которых файл не менялся, единицей — те, в которых файл изменился, и X — слияние веток. 
 <br> 
 <br> 
 <img width="550" src="https://habrastorage.org/webt/dc/ck/pn/dcckpnkvuerrkdzxcrix-mfzeyi.png">
 <br> 
 <br> В этой ситуации код не станет рассматривать ветку feature — в ней и изменений нет. Если файл там всё-таки изменили, то в X изменения «выкинули», а значит, их история не очень релевантна: этого кода уже нет.
 <br> 
 <br> Что-то похожее произошло и у нас. Два разработчика сделали изменения в одном файле — Page.php, один — в ветке мастера, в коммите deadbeef, второй — в ветке своей задачи.
 <br> 
 <br> Когда второй разработчик сливал изменения из ветки мастера в ветку задачи, произошёл конфликт, в процессе разрешения которого изменения из мастера он просто выбросил. Прошло время, работу над задачей он завершил, и ветку задачи залили в мастер, удалив таким образом изменения из коммита deadbeef.
 <br> 
 <br> Сам коммит при этом остался. Но если запустить git log с параметром Page.php, коммита deadbeef в выводе видно не будет.
 <br> 
 <br> 
 <h2>Оптимизация — дело неблагодарное</h2>
 <br> Я бросился внимательно изучать правила отправки изменений и багов в сам Git. Ведь я думал, что нашёл действительно серьёзную проблему: подумать только, часть коммитов просто пропадает из вывода — и это поведение по умолчанию! К счастью, правила оказались объёмными, время было позднее, а на следующее утро мой запал улетучился.
 <br> 
 <br> Я понял, что эта оптимизация сильно ускоряет работу Git на больших репозиториях, таких как наш. А ещё для неё нашлась документация в <a href="https://git-scm.com/docs/git-rev-list">man git-rev-list</a>, и это поведение можно очень легко отключить. 
 <br> 
 <br> Кстати, а как в этой истории замешана --follow?
 <br> 
 <br> На самом деле, есть много способов повлиять на работу этой логики. Конкретно про флаг follow в коде Git нашёлся комментарий 13-летней давности:
 <br> 
 <br> 
 <blockquote>
  Can''t prune commits with rename following: the paths change.
  <br> <i>(Перевод: Не получится выбрасывать коммиты, когда обрабатываются переименования: пути могут меняться)</i>
  <br> 
 </blockquote>
 <br> 
 <br> P. S.
 <br> Сам я работаю в команде релиз-инженеров Badoo уже несколько лет, и многие в компании считают, что мы разбираемся в Git.
 <br> 
 <br> 
 <img width="350" src="https://habrastorage.org/webt/f3/o8/mr/f3o8mrydnzsfu9ialzzkfmq5l9o.png">
 <br> <i>(Перевод. Оригинал: <a href="https://xkcd.com/1597/">xkcd.com/1597</a>)</i>
 <br> 
 <br> В связи с этим нам приходится разбираться с проблемами, возникающими в этой системе, и некоторые из них мне кажутся достаточно любопытными — как, например, описанная в этой статье. Очень часто проблемы решаются быстро: со многим мы уже сталкивались, что-то хорошо описано в документации. Этот случай был исключением.
 <br> 
 <br> На самом деле, в документации действительно был раздел History Simplification, но он был только для команды git rev-list и заглянуть туда я не догадался. Полгода назад этот раздел включили и в мануал команды git log, но наш случай произошёл несколько раньше — я просто не успевал дописать эту статью. (*)
 <br> 
 <br> И напоследок у меня остался небольшой бонус для тех, кто дочитал до конца. У меня есть очень маленький репозиторий, где проблема воспроизводится:
 <br> 
 <br> 
 <pre><code class="plaintext">$ git clone https://github.com/Md-Cake/lost-changes.git
Cloning into ''lost-changes''...
…

$ git log --oneline test.php
edfd6a4 master: print 3 between 1 and 2
096d4cf init

$ git log --oneline --full-history test.php
afea493 (HEAD -&gt; master, origin/master, origin/HEAD) Merge branch ''changekiller''
57041b8 (origin/changekiller) print 4 between 1 and 2
edfd6a4 master: print 3 between 1 and 2
096d4cf init
</code></pre>
 <br> Спасибо за внимание!
 <br> 
 <br> (*) UPD: Оказалось, что раздел History Simplification был в документации команды git log намного дольше, чем полгода, а я его просто пропустил. Спасибо <a href="https://habr.com/ru/users/yourock/" class="user_link">youROCK</a>, что обратил на это внимание!
</div>', '2020-12-24 15:03:00', 'История потерянного коммита', 1, null, 7),
        (16, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Еще четыре года назад команда техподдержки студии Plarium Krasnodar пользовалась сторонней тикет-системой, в чем было много минусов. Сегодня у нас появилась не просто своя система, а хелп-деск, подстроенный под нужды компании. Как это произошло — читайте в статье.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/yb/qj/vr/ybqjvrmcn0p-t_6sob5oth_c7te.jpeg"><a name="habracut"></a>
 <br> 
 <br> С чем же таким мы столкнулись, что задумались о разработке собственной тикет-системы? Основные проблемы:
 <br> 
 <br> 
 <ol> 
  <li>Наша команда получала по 1–1,5 тысячи обращений от пользователей каждый день. </li> 
  <li>Отсутствовала удобная для ведения статистика. Все приходилось отмечать в различных документах вручную.</li> 
  <li>Самая главная трудность: большая часть обращений требовала проверки состояния аккаунта игрока, к чему на тот момент не было непосредственного доступа — мы работали только с текстами самих обращений и электронными адресами. </li> 
  <li>Создавал сложности и интерфейс. Чужие решения чаще всего неудобны, потому что не заточены под конкретную игру и регламенты работы техподдержки конкретной компании. </li> 
  <li>С учетом всего перечисленного оплачивать стороннюю систему было не очень выгодно.</li> 
 </ol>
 <br> И мы принимаем эпохальное решение — пилить собственную тикет-систему! А что? Силы есть, идей полно, энтузиазма — хоть отбавляй. Но на тот момент не было соответствующих процессов: мы, команда поддержки, еще ни разу ничего не заказывали у команды разработки внутреннего инструментария и плотно с ней не взаимодействовали. 
 <br> 
 <br> С чего ж начать? Мы выписали в два столбца наши ожидания от инструмента (что-то в стиле «хотим получать сообщения и отвечать на них») и претензии к текущему варианту («вот тут окошко неудобное, сделайте удобнее»), назвали это техническим заданием и передали разработчикам. Дальнейший процесс занял примерно 3 месяца. Этапа тестирования не было, все ошибки находили разработчики или сама поддержка уже при использовании инструмента. 
 <br> 
 <br> Как можно догадаться, этот блин вышел комом. Мы попробовали его и подумали, что недостатки покупного сервиса не такие уж и серьезные. И тут команда коммерческого хелп-деска предложила интеграцию, при которой она получала бы из игры информацию о пользователе и передавала ее в тикетах нашей поддержке (это решило бы основную проблему). Однако некоторые условия интеграции противоречили требованиям безопасности, принятым в компании. Итак, какие у нас были варианты:
 <br> 
 <br> 
 <ol> 
  <li>Сделать небезопасную интеграцию с коммерческим хелп-деском.</li> 
  <li>Пользоваться его урезанным функционалом.</li> 
  <li>Вернуться к разработке инструмента.</li> 
 </ol> 
 <br> Мы пошли по последнему пути. Исправили все, что не работало после первой итерации, и подключили тикет-систему к играм. У нее был базовый функционал: мы принимали заявки и отвечали на них, отправляя сообщения на почту. Но что самое главное, у нас наконец появилась возможность видеть в тикет-системе идентификатор игрока, ссылающийся на другой наш внутренний инструмент с остальной информацией об аккаунте. 
 <br> 
 <br> В команду, которая обеспечивала процесс разработки, изначально вошли product owner, PM и dev-команда. Мы сами рисовали дизайн, разработчики редактировали и, насколько это было возможно, тестировали продукт. Затем присоединились UX/UI-дизайнеры и QA. В итоге получился следующий процесс: заказчик пишет, чего он хочет, UX/UI говорит, как это лучше сделать, разработчики реализуют, QA проверяет, а PM контролирует всю цепочку и сроки. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/nb/zl/ie/nbzliemhgmdvmdixj0wq5qyfm_8.jpeg">
 <br> 
 <br> Введя тикет-систему с минимальным функционалом, мы начали ее улучшать и подгонять под нужды и цели компании. Всего до сегодняшнего дня было реализовано больше 200 фич, ниже перечислены основные. 
 <br> 
 <br> 
 <ol> 
  <li>Сбор статистики по интересующим показателям. Исходя из целей и задач техподдержки, а также KPI для измерения эффективности работы, удалось определить, какая именно нам нужна статистика. Получилось 7 форм отчетов более чем по 50 показателям.</li> 
  <li>Интерфейс обучения — чтобы новички могли безопасно (через апрув руководителя) работать с реальными обращениями пользователей.</li> 
  <li>Программа автоматического ответа на обращение в зависимости от его содержания и темы. </li> 
  <li>Жизненный цикл тикета с автоматическими переходами из одного статуса в другой по времени или событиям.</li> 
  <li>HTML-верстка писем с красивым оформлением в стилистике проектов. </li> 
  <li>Перенос самой важной информации об игроке прямо в тикет-систему. До этого специалисты поддержки могли видеть в ней только идентификатор-гиперссылку на другую программу с данными.</li> 
  <li>Фильтрация и сортировка обращений. </li> 
  <li>Участие игрока в оценке качества работы оператора. Мы сделали цикл отправки писем, сбор статистики и ее анализ. </li> 
  <li>Функционал распределения доступов к элементам тикет-системы для разных операторов.</li> 
  <li>Кабинет команды, которая оценивает качество работы операторов.</li> 
  <li>Специальные технические статусы и состояния тикетов (не только классические new, waiting, answered, resolve и close, но и inprogress, pending). Они помогают операторам создавать добавочные фильтры; обозначают обращения, требующие дополнительной проверки и/или ожидающие ответа от других отделов; прерывают жизненный цикл тикета на время ожидания (не дают ему автоматически закрыться).</li> 
  <li>Функция общения с игроком по инициативе техподдержки.</li> 
  <li>Встроенная переписка с техподдержкой прямо в игре.</li> 
  <li>Сервис, автоматически определяющий тему обращения по его тексту. </li> 
  <li>Программируемые флоу — установленные решения, в том числе оповещение ответственных сотрудников, на случай того или иного события в тикет-системе. </li> 
 </ol>
 <br> Какой у нас был стек технологий:
 <br> 
 <br> 
 <ul> 
  <li>написанное на C# приложение .NET Web API в качестве бэкенда;</li> 
  <li>клиент на Angular;</li> 
  <li>MongoDB в качестве базы данных и ElasticSearch для полнотекстового поиска; </li> 
  <li>Mailgun для рассылки сообщений на почту игрокам.</li> 
 </ul>
 <br> 
 <img src="https://habrastorage.org/webt/jq/dm/wf/jqdmwffzjjaoaii06fms_o_wc9m.jpeg">
 <br> <i>Общий вид Support Ticket System</i> 
 <br> 
 <br> Подведем итоги.
 <br> 
 <br> 
 <h3>Плюсы от разработки собственной тикет-системы</h3>
 <br> 
 <ol> 
  <li>Заточенность хелп-деска под вашу компанию в решении задач, упрощении флоу и отслеживании показателей. </li> 
  <li>Углубление знаний о функционировании тикет-системы и о работе команды техподдержки, сидящей через стенку от вас.</li> 
  <li>Независимость от обновлений стороннего хелп-деска. Всегда неприятно, когда из-за мешающего изменения приходится перестраивать процессы.</li> 
  <li>Безопасность, которую дает отказ от использования сторонних решений в своих проектах.</li> 
  <li>Заточенность интерфейса под ваши потребности.</li> 
  <li>Быстрое внедрение уникальных фич. Например, ни в одном стороннем хелп-деске до сих пор нет удовлетворительной системы обучения новичков или пространства для команды, которая оценивает качество работы операторов. </li> 
  <li>Возможности интеграции. Ваш продукт вырастает до экосистемы, объединяя в себе разные программы в одну цепочку, что оптимизирует работу сотрудников и дает более высокое качество. </li> 
  <li>Новое направление работы, развитие сотрудников, бесценный опыт. </li> 
  <li>Мотивация для всех причастных. Специалисты поддержки чувствуют, как их «хотелки» реализуются, а команды разработчиков, QA и UX/UI-дизайнеров видят, как их проект растет и какую пользу он приносит операторам. </li> 
 </ol>
 <br> 
 <h3>Минусы</h3>
 <br> 
 <ol> 
  <li>В начале развития проекта затраты на разработку и поддержку системы превышают стоимость готового решения. Насколько — зависит от объема поступающих сообщений, величины команды поддержки и набора необходимых функций. Однако такой проект окупается. Если 40 операторов отправляют по 50–70 тысяч ответов в месяц, затраты на свою систему и на покупной сервис сравняются через 3–5 лет (в зависимости от стоимости этого сервиса). Если учесть эффект от плюсов собственной тикет-системы, ее гибкости, от функциональных элементов, оптимизирующих работу сотрудников, то окупаемость наступает года за два. После завершения разработки нужно платить только за хостинг, и это меньше, чем за сторонний хелп-деск.</li> 
  <li>Придется пройти долгий и трудный путь. Мы несколько раз меняли процесс разработки, ругались и мирились, делали и переделывали. За эти 3,5 года было исправлено больше 1 500 багов.</li> 
  <li>Понадобятся структурные изменения. Необходима команда, которая работает на обеспечение внутренних процессов. Нужно разделять тех, кто производит продукт компании, и тех, кто делает back office tools. Привлечь основных разработчиков к созданию такого инструмента вряд ли получится. </li> 
 </ol>
 <br> Ввязываться в это дело или нет — решать вам. А мы не жалеем, что ввязались. Было страшно. И страшно интересно было тоже.
</div>', '2020-12-25 14:59:00', 'Как мы свою helpdesk-систему пилили', 20, null, 2),
        (17, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <h3>Многие вещи нам непонятны не потому, что наши понятия слабы; но потому, что сии вещи не входят в круг наших понятий.</h3>
 <br> Вчера, просматривая новый комментарий к своему старому посту о реализации сдвигов компилятора gcc для МК, обратил внимание на интересную ссылку <a href="https://godbolt.org/z/lW6rk8" rel="nofollow">godbolt.org/z/lW6rk8</a>. На ней демонстрируется разница в коде, порождаемом компилятором для знаковых и без-знаковых кардинальных типов. Решил я немного поэкспериментировать с приведенным кодом и обнаружил интересные особенности компилятора, о которых и сообщаю сообществу.
 <br> 
 <br> Итак, мы видим две функции, которые сравнивают некую величину х и ее же, увеличенную на 1 и сообщают о том, какая из них больше. Подавляющее большинство читателей уже поняло, в чем дело, но для тех, кто забыл курс введения в программирование, напомню.
 <br> <a name="habracut"></a>
 <br> В обычной математике сама постановка задачи выглядит странно, если не вкладывать в понятие «больше» смысл, отличный от общепринятого. Естественно, что х+1&gt;х, поскольку, если вычесть из обеих сторон неравенства х, получим тождество 1&gt;0. При этом мы неявно постулируем, что для любого числа есть число, следующее за ним и количество возможных чисел бесконечно.
 <br> <i>Примечание на полях (Пнп): где-то я читал, что кто-то из великих (вроде как Гаусс) считал, что существует наибольшее целое число, но даже если это и так, наверняка он имел в виду что-то другое.<br> </i>
 <br> Но в компьютерной математике не все так просто и проблема вытекает из ограниченности кардинальных типов, поскольку это означает конечное количество объектов, которые могут быть представлены конкретным типом при заданной кодировке. Среди них есть максимальное, в некотором смысле, число и попытка увеличить его приводит к парадоксу – требуется закодировать число, которое закодировать нельзя. Обычно такое явление называют переполнением разрядной сетки, или просто переполнением. Типичный пример: 255 для 8-битового числа.
 <br> <i>Пнп: В детстве у меня одной из любимых игрушек был арифмометр «Феликс» и постоянным развлечением было прибавление к «999999999» числа «000000001». Я завороженно наблюдал, как одна за другой девятки превращались в нули и завершался этот процесс звонком. Еще более мистическим было вычитание из результата все той же единицы и девятки чудесным способом возникали снова. На другой моей игрушке – счетах (моя мама была бухгалтером) происходили такие же процессы, но там я сам перекидывал костяшки, а на арифмометре это было своего рода мистикой.</i>
 <br> 
 <br> Так вот, для целых знаковых чисел парадокс разрешают простым способом – запрещают его возникновение, поэтому переполнение приводит к UB. И, поскольку относительно его результата справедливы любые предположения (в том числе и фантастические), компилятор вправе предположить, что х+1 всегда будет больше х и вернуть значение «истина», что он и делает в первой функции.
 <br> <i>Пнп: Существует другой подход, применяемый в ЦОС (импортозамещение для DSP)– операции с насыщением, при этом х+1 может быть равен х, но это все-таки экзотика.</i>
 <br> 
 <br> А вот для без-знаковых целых чисел результат прибавления 1 к максимальному числу определен и он равен нулю. Поэтому 0xFFFF+0x0001=0x0000 &gt; 0xFFFF – неверно и компилятору приходится генерировать код для проверки данного случая, который мы и видим во второй функции.
 <br> 
 <br> Пока что я не написал ничего интересного для читателя «в теме», но вот оно начинается. 
 <br> Для исследования ассемблерного кода я перешел к своим любимым AVR контроллерами (у них ассемблер проще и понятнее, чем у ARM).
 <br> 
 <br> Для начала обратим внимание на то, как gcc осуществляет заказанную нами проверку.
 <br> 
 <br> 
 <pre><code class="cpp">alwaysTrue_unsigned(unsigned int):
  mov r18,r24
  mov r19,r25
  subi r18,lo8(-(1))
  sbci r19,hi8(-(1))
  ldi r20,lo8(1)
  cp r24,r18
  cpc r25,r19
  brlo .L3
  ldi r20,lo8(0)
.L3:
  mov r24,r20
ret</code></pre>
 <br> Берем число х в буфер (строки 2,3), прибавляем к нему 1 (4,5), заготавливаем результат (6), сравниваем буфер с числом х (7,8), корректируем результат (9,10) и задача выполнена. Итого 9 команд и время выполнения 8+ тактов. Но это версия 5.4.0.
 <br> 
 <br> А вот выдача версии 9.2.0.:
 <br> 
 <br> 
 <pre><code class="cpp">alwaysTrue_unsigned(unsigned int):
  mov r19,r25
  mov r18,r24
  ldi r24,lo8(1)
  cpi r18,-1
  sbci r19,-1
  breq .L5
  ret
.L5:
  ldi r24,0
  ret </code></pre>
 <br> и мы видим, что компилятор реализует совсем другую проверку.
 <br> 
 <br> Берем число х в буфер (2,3), заготавливаем результат (4), вычитаем из буфера 0xFFFF (5,6), корректируем результат. Итого 7 команд и время выполнения 6+ тактов. Если перевести этот код обратно на С, то мы получим что-то вроде:
 <br> 
 <br> 
 <pre><code class="cpp">return (x!=0xFF) </code></pre>
 <br> И такое преобразование абсолютно валидно, но у меня нет ни малейших мыслей по поводу того, как такие преобразования компилятор делает, просто сказка какая-то. Обратите еще внимание на код проверки для выражения (x+4)&gt;x и так далее.
 <br> 
 <br> Дальше я решил поиграть с типами и попробовал (u)int16_t – ничего не изменилось, (u)int32_t – появились загадочные пересылки, но смысл проверки остался прежний, использовал (u)int8_t и обалдел.
 <br> 
 <br> Совершенно неожиданно код для без-знакового аргумента редуцировался и функция стала выдавать жесткую единицу. Но ведь это откровенно неправильно и для случая x=0xFF условие (х+1)&gt;х выполняться не будет. Ура, неужели я нашел ошибку в gcc (в части оптимизации) и смогу о ней сообщить и помочь развитию столь мощного продукта.
 <br> 
 <br> <i>Пнп: Когда лет 15 назад мои мальчишки приходили с фразой «Папа, я нашел баг в компиляторе» (речь шла о TurboPascal) я их отсылал с предложением внимательнее посмотреть на свой код и баг компилятора рассасывался сам собой, но ведь тут совсем другое дело — я не могу допустить неточность в интерпретации предельно ясного случая.</i>
 <br> 
 <br> Но счастье было недолгим. На самом деле надо внимательно читать стандарт языка С и покров тайны развеется (я не стал этого делать и просто догадался).
 <br> 
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Догадайтесь и Вы</b> 
  <div class="spoiler_text">
   Выражение (х+1) в операторе сравнения имеет тип int (в данном случае uint16_t), поэтому перед выполнением сложения тип uint8_t приводится к типу uint16_t приписыванием нулевого старшего байта, после чего переполнение становится невозможным и результат выполнения функции предрешен. Достаточно всего лишь явным образом обозначить свои намерения сравнивать именно байты следующим образом:
   <br> 
   <br> 
   <pre><code class="cpp">Return (uint8_t)(x+1)&gt;x</code></pre> и необходимая проверка возвращается в ассемблерный код.
   <br> 
   <br> Вариант 
   <br> 
   <br> 
   <pre><code class="cpp">return (x+(unsigned char)1) &gt; x;</code></pre> 
   <br> не прокатывает, что характерно.
   <br> 
   <br> Наверняка есть прагма компилятора, которая сделает int по умолчанию 16-битным и позволит добиться возвращения проверки значения х, но это уже несколько замысловато.
   <br> 
  </div> 
 </div>
 <br> Вот такая забавная пред-новогодняя история, которая лично мне дала в понимании приведения кардинальных типов в С больше (теперь я это никогда не забуду), чем возможное чтение стандартов (но это совершенно не означает, что их можно не читать).
</div>', '2020-12-28 18:37:00', 'К вопросу о сложении или как я нашел ошибку в gcc (на самом деле нет)', 55, null, 6),
        (18, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <a href="https://habr.com/ru/company/ruvds/blog/535600/">
  <div style="text-align:center;">
   <img src="https://habrastorage.org/webt/hh/zw/ix/hhzwix9cqk4pl3i7hculwrvlmqk.png">
  </div></a>
 <br> 
 <br> В преддверии Нового Года бороздил просторы сети, и нашёл замечательную демку на ассемблере рисования новогодней ёлки. Демка не простая, <s>а золотая</s>, написана таким образом, чтобы работала в загрузочном секторе диска, фактически микрооперационная система, если её так можно назвать. Из-за большой любви к Новому Году и ассемблеру, решил таки её немного разобрать, и восхититься мастерством автора. Итак, поехали. <a name="habracut"></a>
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Что за демка и где её искать?</font></h2>
 <br> Данную демку нашёл в этом гит репозитории: <a href="https://github.com/cfallin/treeos">TreeOS: a 16-bit bootsector Christmas tree demo</a>.
 <br> Как гласит название:
 <br> 
 <blockquote>
  Добро пожаловать в TreeOS (древесную операционную систему)! Это очень простая, хакерская, но работающая демка, которая рисует крутящуюся <s>новогоднюю</s> рождественскую ёлку и выдаёт небольшое сообщение. При этом работает на голом аппаратном обеспечении персонального компьютера, без операционной системы, используя только стандартное VGA-оборудование. С <s>Новым Годом</s> Рождеством.
 </blockquote>
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/mt/g8/cd/mtg8cd9c0j75ip9z_mxixxfkezi.png">
 </div>
 <br> 
 <br> Забегая вперёд скажу, что там две версии: с надписью и без (как в картинке на заходнике). Демка — это образ загрузочный дискеты. Написана она 16-ти битным кодом, который использует BIOS для загрузки с диска и изменяет видеорежим перед работой непосредственно с буфером кадра VGA. В коде используется стандартный 256-цветный режим 320х200 (режим VGA 13h). По идее это должно работать на любом персональном компьютере, но тестировалось только на виртуальной машине (в qemu). Лично я протестировал, что она отлично работает и в VirtualBox. Ниже я расскажу, как её запустить.
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Пробуем запустить</font></h2>
 <br> Ну как обычно, прежде чем посмотреть код, насладиться его работой, так сказать пошуршать мозгами, сразу запустим? Конечно же да!
 <br> Поехали!
 <br> 
 <br> Для старта нам понадобиться компилятор nasm, виртуальная машина qemu или VirtualBox, кому что милее. Лично я решил попробовать и там и там. Потому ставим всё вместе:
 <br> 
 <br> 
 <pre><code class="bash">sudo apt install nasm qemu-system-x86</code></pre>
 <br> Клонируем репозиторий, переходим в него и пробуем собрать пример.
 <br> 
 <br> 
 <pre><code class="bash">git clone https://github.com/cfallin/treeos
cd treeos/
make qemu</code></pre>
 <br> И… И счастье не настало, хотя было так близко. 
 <br> 
 <br> 
 <pre><code class="bash">nasm -fbin -o treeos.img treeos.asm
treeos.asm:15: error: attempt to define a local label before any non-local labels
treeos.asm:47: error: attempt to define a local label before any non-local labels
treeos.asm:52: error: attempt to define a local label before any non-local labels
treeos.asm:60: error: attempt to define a local label before any non-local labels
treeos.asm:65: error: attempt to define a local label before any non-local labels
Makefile:5: ошибка выполнения рецепта для цели «treeos.img»
make: *** [treeos.img] Ошибка 1</code></pre>
 <br> 
 <br> Пришлось расчехлить гугл, и вспомнить в чём же проблема. А проблема оказалась очень простая. Автор использовал метки с точкой, а компилятору это не нравилось. После того, как я поправил все метки, убрав из них точки, всё получилось.
 <br> Например:
 <br> 
 <br> 
 <pre><code class="bash">...
    jmp 0:.newseg
.newseg:
    mov ax, 0
...</code></pre>
 <br> изменил на
 <br> 
 <br> 
 <pre><code class="bash">...
    jmp 0:newseg
newseg:
    mov ax, 0
...</code></pre>
 <br> 
 <br> Компиляция тоже идёт достаточно интересно. Не буду приводить Makefile, его каждый может посмотреть самостоятельно. Более интересно как идёт создание образа флоппи диска:
 <br> 
 <br> 
 <pre><code class="bash">make qemu
nasm -fbin -o treeos.img treeos.asm
rm -f floppy.img
dd if=/dev/zero of=floppy.img bs=1024 count=1440
1440+0 записей получено
1440+0 записей отправлено
1474560 байт (1,5 MB, 1,4 MiB) скопирован, 0,00373289 s, 395 MB/s
dd if=treeos.img of=floppy.img conv=notrunc
3+1 записей получено
3+1 записей отправлено
1998 байт (2,0 kB, 2,0 KiB) скопирован, 0,000193295 s, 10,3 MB/s
qemu-system-x86_64 -fda floppy.img</code></pre>
 <br> Как видно, идёт компиляция ассемблеровского файла. 
 <br> Затем идёт удаление возможного старого образа флоппи диска. 
 <br> Команда dd создаёт чистый образ дискетки, после чего в начало записывается готовый бинарник ёлочки.
 <br> Ну и последняя команда запускает виртуальную машину qemu с этим образом. В результате получим вот такую замечательную демку.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/uf/jg/rl/ufjgrl278k6ggebspiwpjy5xzm0.gif">
 </div>
 <br> <i><font color="#999999">В реальности не так сильно тормозит, как гифка.</font></i>
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Что делать, если сижу под Windows, а посмотреть демку хочется?</font></h2>
 <br> Ну самый лучший вариант, это собрать всё на виртуалке, а затем записать на живую дискету и загрузиться. Но где сегодня найти флоппи дисковод и дискеты?
 <br> Поэтому рассказываю как посмотреть демку на VirtualBox. Я специально сохранил оба образа дискеты с <a href="https://yadi.sk/d/_YU6vlbGzj97vA">надписью</a> и <a href="https://yadi.sk/d/yGjE-JAVGNxF0g">без</a>. 
 <br> В витуалбоксе создаём новую машину, можно даже не подключать жёсткий диск, он нам не нужен. Но для работы нужно добавить флопи-контроллер, делается это следующим образом.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/c2/w2/-h/c2w2-hkicyoptsmygyrti6drdww.png">
 </div>
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ge/gf/ar/gegfartil8cvdgt8rfwwy7ovqba.png">
 </div>
 <br> 
 <br> После чего, скармливаем ему готовый образ TreeOS и наслаждаемся новогодним настроением.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/kn/uq/ar/knuqarzrw-9wrn46lovlqdhhjxw.png">
 </div>
 <br> <i><font color="#999999">Ёлка на VirtualBox.</font></i>
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Если очень хочется в живую запустить?</font></h2>
 <br> 
 <h3><font color="#3AC1EF">Загрузка с флешки</font></h3>
 <br> Как я уже сказал, идеально записать образ на флопи-диск. Но если его нет, можно записать на флешку. Для начала стираем флешку, забивая её нулями. 
 <br> 
 <br> 
 <pre><code class="bash">dd if=/dev/zero of=/dev/sdx</code></pre>
 <br> После этого копируем образ TreeOS в начальный бутсектор диска.
 <br> 
 <br> 
 <pre><code class="bash">dd if=/mountedlocation/treeosFloppy.img of=/dev/sdx bs=512 count=4</code></pre>
 <br> Затем, используя утилиту CFDISK c помощью командной строки, помечаем сектор MBR как загрузочный сектор тип 0c FAT32.
 <br> 
 <br> Это добавит таблицу разделов к пустому пространству в секторе 0. Содержимое TreeOS останется в нулевом секторе после данной операции. Всё, можно пробовать загрузиться с флешки и загрузка не должна сильно отличаться от загрузки с дискетки.
 <br> 
 <br> 
 <h3><font color="#3AC1EF">Загрузка с жёсткого диска</font></h3>
 <br> Есть два пути загрузки с жёсткого диска. Первый путь, это подготовить его точно так же, как мы делали флешку, но тогда все данные на жёстком диске будут уничтожены.
 <br> Есть альтернатива этому решению. Копируем файл treeosFloppy.img в корень NTFS раздела: <code>c:\\treeos.mbr</code>.
 <br> 
 <br> После этого настраиваем Windows BOOTMGR и/или NTLDR чтобы TreeOS было помещено в загрузочное меню Windows вместе с самой Windows.
 <br> 
 <br> В результате при загрузке можно будет выбирать что загружать, Windows или эту микроОС. 
 <br> 
 <br> Точно так же можно настроить и GRUB.
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Пару слов об ассемблере</font></h2>
 <br> Буду честен, в х86 ассемблере слаб. Но всё же крупными штрихами постараюсь описать то что происходит. Гуру ассемблера могут справедливо меня поправить в комментариях. Прошу не бить сильно, и не пинать. Разберём свежую (последний коммит был пять дней назад) 512 байтовую версию.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/8x/-l/3l/8x-l3l2zw8ixpgaydenjarxbvqk.png">
 <br> 
 <br> Запрещаем прерывания и очищаем регистры. Инициализируем указатель стека. Разрешаем прерывания.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/bp/xm/8x/bpxm8x_2e3yk6z1kontdasowhyc.png">
 <br> 
 <br> Очищаем экран, записывая «чёрные» пробелы на экран. Поясняю, что палитра может иметь цвет фона и текста. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/pu/z2/o2/puz2o2vuxys3rtu7z3urthf3jyi.png">
 <br> 
 <br> Здесь идёт инициализация системного таймера.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/fh/j0/aj/fhj0aja3szpfvwssvhtpqiqybpm.png">
 <br> 
 <br> Здесь мы переходим с помощью 13-прерывания BIOS в <a href="https://en.wikipedia.org/wiki/Mode_13h">VGA-режим.</a>. Код 0x13 соответствует разрешению 320x200 и 256 цветовой палитре.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/_6/ml/1q/_6ml1qlfddzt72hiiwsugovgjjq.png">
 <br> 
 <br> После чего попадаем в глобальный цикл. Где мы получаем текущий «тик» системного таймера в регистр BX и очищаем буфер картинки для следующего фрейма.
 <br> 
 <br> А вот ниже творится настоящая магия. Так как я совершенно не знаю ассемблер математического сопроцессора, то детально рассказать что там происходит не могу. Но у нас есть формула выше, по которой расчитывается график ёлочки.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/8w/eb/he/8webhe0ntvlgnyydshmajradhh4.png">
 <br> 
 <br> И ниже пошёл ассемблер работы с плавающей точкой. Там в памяти рассчитывается и формируется новый фрейм ёлки. 
 <br> Обратите внимание на операцию сравнения регистра <code>cx</code> c <code>1000</code> и если он равен, то мы переходим на метку <code>treedone</code>. Глянем, что же на этой метке.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wg/rf/u2/wgrfu2pqc7oy_9h9ysrdj6q8mlw.png">
 <br> 
 <br> Итак, в <code>clipped</code> мы инкрементируем регистр <code>cx</code> и джампимся опять в цикл расчёта ёлки. В <code>treedone</code> мы копируем буфер получившейся ёлки в реальный фреймбуффер видеокарты с помощью магической инструкции <code>rep movsw</code> (чесслово только узнал о ней). 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/1s/al/kw/1salkwxejt7rqfkgrvtfwwaubly.png">
 <br> 
 <br> Тут не самое элегантное место, мы просто тупо крутимся в цикле, пока счётчик таймера у нас не изменится.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/vw/xk/qj/vwxkqjztxdtidkekkvsaxbxsaz4.png">
 <br> 
 <br> Это у нас обработчик прерывания системного таймера, относительно которого мы и синхронизируем вращение и отрисовку ёлочки. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/qq/-h/yg/qq-hyg1e5_rymwzasu7te5jizjw.png">
 <br> 
 <br> В самом низу у нас находятся вспомогательные расчётные константы (я не стал все приводить сюда). 
 <br> 
 <br> <a href="https://github.com/cfallin/treeos/blob/master/treeos.asm">В версии от 2019 года</a>, есть ещё дополнительная надпись. Она задана константно и выводится с помощью кода:
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/mm/dj/yh/mmdjyh0h78bccqpxmrclbxtiobw.png">
 <br> 
 <br> А сама надпись представляет собой просто изображение, скрытое в бинарных константах.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/un/rp/mc/unrpmcqaqndklbscokh0r1it65o.png">
 <br> 
 <br> Не буду приводить всё, и так понятно.
 <br> 
 <br> Как по мне, это прекрасная демка выходного дня, чтобы поупражняться в ассемблере, вспомнить молодость и, так сказать, запилить новогоднее настроение!
 <br> 
 <br> 
 <h2><font color="#3AC1EF">С Наступающим Новым Годом!!!</font></h2>
 <br> Дорогие коллеги, от всей души хочу поздравить вас всех с наступающим Новым Годом! Пускай в Новом Году будет больше творческих свершений, позитивных эмоций, вдохновения, сил, а так же возможностей для самореализации!
 <br> 
 <br> 
 <div class="oembed">
  <iframe id="5fec24ef05d782142ffea567" src="https://embedd.srv.habr.com/iframe/5fec24ef05d782142ffea567"></iframe>
 </div>
 <br> <i><font color="#999999">Рождественская демка под ДОС 1986 г.</font></i>
 <br> 
 <br> <a href="https://ruvds.com/ru-rub/news/read/126?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=dlinyj&amp;utm_content=%0Atreeos_16_bitnaya_novogodnyaya_demka_v_zagruzochnom_sektore"><img src="https://habrastorage.org/webt/8x/zq/bh/8xzqbhb0at3_pjylb5c4366w_t8.png"></a>
 <br> 
 <br> <a href="http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=dlinyj&amp;utm_content=%0Atreeos_16_bitnaya_novogodnyaya_demka_v_zagruzochnom_sektore%0A#order"><img src="https://habrastorage.org/webt/ou/g5/kh/oug5kh6sjydt9llengsiebnp40w.png"></a>
</div>', '2020-12-30 12:05:00', 'TreeOS. 16-битная рождественская демка в загрузочном секторе', 70, null, 3),
        (19, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/eeb/b49/899/eebb498997d3fc222664e0e188952f48.jpg" alt="iPhone 11 Pro Max слева, 12 Pro Max справа" title="iPhone 11 Pro Max слева, 12 Pro Max справа" width="1200" height="633">
  <figcaption>
   iPhone 11 Pro Max слева, 12 Pro Max справа
  </figcaption>
 </figure>
 <p>У нас были айфоны 11 и 12 Pro Max, шесть объективов, один лидар для оценки расстояния до предметов, две разных системы стабилизации, нейросети для постобработки фото и целая куча разнообразных условий съёмки. Не то, чтобы все это было категорически необходимо в тесте камер, но если уж начал сравнивать фотки, к&nbsp;делу надо подходить серьезно.</p>
 <hr>
 <p>Ладно, шутки в сторону. Обычно айфоны покупают с прицелом на несколько лет. По производительности у&nbsp;них всегда здоровенный запас. Новое ПО исправно выходит и для старых моделей. Например, последнюю iOS&nbsp;14 можно поставить аж на iPhone&nbsp;6s, а ему уже пять лет. А по-настоящему большие прорывы в функциональности и внешнем виде смартфонов у Apple случаются только раз в&nbsp;четыре года. Вот и получается, что единственная объективная причина сменить айфон предыдущего поколения на совсем новый&nbsp;— это камера. Субъективных причин, конечно, может быть куча: начиная с размера дисплея, заканчивая дизайном.&nbsp;</p>
 <p>Для справки: разница между производительностью iPhone 11 Pro Max и&nbsp;12 Pro Max&nbsp;— вот на&nbsp;скриншоте. На цифрах заметная, но не кардинальная, и тем более&nbsp;— совсем не критичная в реальных задачах. А&nbsp;фото я делаю каждый день и вижу разницу постоянно. При условии, что она есть, конечно. И вот в этом сейчас разберемся.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c0e/d77/20b/c0ed7720bf12afd50a00d0ab7b46a78c.png" width="2496" height="1447">
  <figcaption></figcaption>
 </figure>
 <h2>Разница «на бумаге»</h2>
 <p>Модули камер на обеих «прошках» похожи внешне&nbsp;— там по три объектива и расположены они одинаково. Но&nbsp;на 12&nbsp;Pro Max они стали прямо здоровенными, а еще в уголке появилась крупная темная точка&nbsp;— это лидар, который смартфон использует для фокусировки и создания боке в портретном режиме. И еще у «двенашки» на основной матрице пиксели крупнее, хотя разрешение то&nbsp;же. Получается, сенсор в целом получает больше света, а это всегда хорошо.</p>
 <p>Кроме того, изменили способ стабилизации изображения на основной камере. Теперь дрожание рук компенсируется не за счет смещения линз в объективе, а за счет движения матрицы относительно объектива.&nbsp;</p>
 <div class="table">
  <table>
   <tbody>
    <tr>
     <td><p></p></td>
     <td><p><strong>iPhone 11 Pro Max</strong></p></td>
     <td><p><strong>iPhone 12 Pro Max</strong></p></td>
    </tr>
    <tr>
     <td><p>Сверхширокоугольная</p></td>
     <td><p>12&nbsp;Мпикс., f/2.4, 120˚, 13&nbsp;мм, 1/3,6"</p></td>
     <td><p>12&nbsp;Мпикс., f/2.4, 120˚, 13&nbsp;мм, 1/3,6"</p></td>
    </tr>
    <tr>
     <td><p>Широкоугольная</p></td>
     <td><p>12&nbsp;Мпикс., f/1.8, 26&nbsp;мм, 1,4&nbsp;нм, оптическая стабилизация</p></td>
     <td><p>12&nbsp;Мпикс., f/1.6, 26&nbsp;мм, 1,7&nbsp;нм, стабилизация матрицы</p></td>
    </tr>
    <tr>
     <td><p>Телефото</p></td>
     <td><p>12&nbsp;Мпикс., f/2.0, 52&nbsp;мм, 1/3,4", 1&nbsp;нм, оптическая стабилизация, оптический зум 2x</p></td>
     <td><p>12 Мпикс., f/2.2, 65&nbsp;мм, 1/3,4", 1&nbsp;нм, оптическая стабилизация, оптический зум 2,5x</p></td>
    </tr>
   </tbody>
  </table>
 </div>
 <p>Плюс в&nbsp;12&nbsp;Pro&nbsp;Max сильнее, чем раньше, используют нейросети для обработки данных, полученных с матриц всех камер. Это очень заметно на максимальном цифровом зуме&nbsp;— секунду после получения таких снимков изображение шумит как январская вьюга, а потом бац!&nbsp;— применяются фильтры,&nbsp;и артефактов как не бывало. Ну почти.</p>
 <p>Кстати, в новых «прошках» после обновления до&nbsp;iOS&nbsp;14.3 появилась возможность снимать в режиме Apple Pro Raw. Это 12-битные файлы в формате Linear DNG (цифрового негатива). Но это все же не «сырые» данные в чистом виде, а как раз после применения алгоритмов Apple. Файлы DNG можно открыть в&nbsp;фоторедакторе, который поддерживает этот формат: Lightroom, Affinity Photo и&nbsp;других. (<a href="https://yadi.sk/i/z9yqDTFYZ1IR7w" rel="noopener noreferrer nofollow">Вот файл</a>, если хотите поиграться.)</p>
 <h2>Разница в жизни</h2>
 <p>Начнем с основной камеры. В полной темноте ванной комнаты, где из источников света&nbsp;— только дисплей стиральной машины, на максимальной выдержке в полминуты разница особенно заметна. </p><iframe id="5ffe8c592cbf1a1445b353e3" src="https://embedd.srv.habr.com/iframe/5ffe8c592cbf1a1445b353e3" class="embed_video embed__content"></iframe>
 <p>А вот кроп тех же фотографий.</p><iframe id="5ffe8cd82cbf1a1445b353e4" src="https://embedd.srv.habr.com/iframe/5ffe8cd82cbf1a1445b353e4" class="embed_video embed__content"></iframe>
 <p>При ярком свете разница уже совсем не такая драматическая. Конкретно этот снимок с красной тумбой получился лучше скорее даже у 11 Pro Max. </p><iframe id="5ffe8f27cb79a1e12d6664ef" src="https://embedd.srv.habr.com/iframe/5ffe8f27cb79a1e12d6664ef" class="embed_video embed__content"></iframe>
 <p>Или вот тоже искусственное освещение, но поярче. Фокус я везде выставлял на одних и тех же объектах.</p><iframe id="5ffe9043102304e11bb8d6dd" src="https://embedd.srv.habr.com/iframe/5ffe9043102304e11bb8d6dd" class="embed_video embed__content"></iframe>
 <p>А вот потемнее.</p><iframe id="5ffea762fd7c16e10ee4a8ab" src="https://embedd.srv.habr.com/iframe/5ffea762fd7c16e10ee4a8ab" class="embed_video embed__content"></iframe>
 <p>А еще закатные сумерки, пожалуйста.</p><iframe id="5ffe9272102304e11bb8d6de" src="https://embedd.srv.habr.com/iframe/5ffe9272102304e11bb8d6de" class="embed_video embed__content"></iframe>
 <p>И очень грозную кошку Биби.</p><iframe id="5ffe919ccb79a1e12d6664f0" src="https://embedd.srv.habr.com/iframe/5ffe919ccb79a1e12d6664f0" class="embed_video embed__content"></iframe>
 <p>И новогодние украшения в Братеевской пойме.</p><iframe id="5ffe92e5d4323713fd41598a" src="https://embedd.srv.habr.com/iframe/5ffe92e5d4323713fd41598a" class="embed_video embed__content"></iframe>
 <p>А вот как работает широкоугольный объектив. Аббераций по краям кадра стало меньше&nbsp;— вертикальные линии теперь прямые.</p><iframe id="5ffea8b9fd7c16e10ee4a8ac" src="https://embedd.srv.habr.com/iframe/5ffea8b9fd7c16e10ee4a8ac" class="embed_video embed__content"></iframe><iframe id="5ffea9d32cbf1a1445b353e6" src="https://embedd.srv.habr.com/iframe/5ffea9d32cbf1a1445b353e6" class="embed_video embed__content"></iframe>
 <p>На крупных планах заметно, как в 12 Pro Max подключается нейросеть и «вытягивает» текстуры, делая их резкими. Вообще айфоны теперь умеют распознавать не только котиков, человеческие лица, но еще и небо и, например, ткани.</p><iframe id="5ffe93703b295d140fdb3975" src="https://embedd.srv.habr.com/iframe/5ffe93703b295d140fdb3975" class="embed_video embed__content"></iframe>
 <p>Кстати, вот как нейросеть iPhone 12 Pro Max улучшает изображение на максимальном цифровом зуме.</p><iframe id="5feded1e3b295d140fdb395c" src="https://embedd.srv.habr.com/iframe/5feded1e3b295d140fdb395c" class="embed_video embed__content"></iframe>
 <p>А вот нейросеть подключается при съемке таймлапса вечером: распознает освещение и не подстраивает экспозицию так, как это происходило на предыдущих моделях. Закаты стало снимать проще.</p><iframe id="5fedef972c0608e1441a4142" src="https://embedd.srv.habr.com/iframe/5fedef972c0608e1441a4142" class="embed_video embed__content"></iframe>
 <p>И раз уж мы начали говорить о видео, то давайте сравним стабилизацию на обеих моделях. Напомню, что у 12&nbsp;Pro&nbsp;Max картинка стабилизируется микродвижениями не оптики, а матрицы. На мой вкус чуть плавнее все же оптическая стабилизация.</p><iframe id="5ff891bd05d782142ffea57c" src="https://embedd.srv.habr.com/iframe/5ff891bd05d782142ffea57c" class="embed_video embed__content"></iframe>
 <hr>
 <p>Но вот область, где двенадцатая «Прошка» точно побьет одиннадцатую — это режим портрета с размытием заднего фона, потому что с помощью лидара определять границы объектов проще, чем без него.</p><iframe id="5ffe95202cbf1a1445b353e5" src="https://embedd.srv.habr.com/iframe/5ffe95202cbf1a1445b353e5" class="embed_video embed__content"></iframe>
 <p>Причем 12 Pro Max научили размывать задний фон не весь целиком одинаково, а с градациями: чем дальше предметы от камеры, тем сильнее размытие.</p><iframe id="5ffe9f4cfd7c16e10ee4a8a9" src="https://embedd.srv.habr.com/iframe/5ffe9f4cfd7c16e10ee4a8a9" class="embed_video embed__content"></iframe>
 <p>И с объектами сложной формы теперь стало куда попроще. Конечно, все еще не без огрехов, но, во всяком случае, целые куски заднего плана не остаются не размытыми.</p><iframe id="5ffea00a905dc4e15aeed8a8" src="https://embedd.srv.habr.com/iframe/5ffea00a905dc4e15aeed8a8" class="embed_video embed__content"></iframe>
 <h2>Так есть разница или нет?</h2>
 <p>На мой взгляд есть, но не такая, чтобы срочно бежать менять 11 Pro Max на 12 Pro Max. Да, в&nbsp;новом смартфоне есть лидар и нейросетка помощнее, да вечером и в темноте он снимает лучше, да вроде бы в целом меньше шума на однородных фонах. Но напомню, что разница в цене за модели с&nbsp;256&nbsp;ГБ памяти в российской рознице сейчас около 20 тыс. ₽. Поэтому я бы поступал так: есть лишняя двадцатка — берите новый. Решаете какой брать айфон, если переходите со старой модели —&nbsp;берите сразу последний, он дольше будет актуален со всех точек зрения. А если у вас уже есть 11 Pro Max, просто расслабьтесь&nbsp;— это по-прежнему очень крутая трубка с хорошей камерой.</p>
</div>', '2021-01-13 11:11:00', 'iPhone 11 Pro Max против 12 Pro Max: стоит ли того новая камера', 56, null, 5),
        (20, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/kb/yf/lm/kbyflmz58omdyuedeoxiey4cy7o.png">
 </div>
 <br> Подробнее об этом хаке и особенностях его работы можно узнать из доклада на !!con 2020 <a href="https://www.youtube.com/watch?v=6rbJu10Telc" rel="nofollow">«Playing Breakout… inside a PDF!!»</a>
 <br> 
 <br> Если вы его не смотрели, то попробуйте открыть <a href="https://cdn.jsdelivr.net/gh/osnr/horrifying-pdf-experiments@master/breakout.pdf" rel="nofollow">файл breakout.pdf</a> в Chrome.
 <br> 
 <br> Как и многие из вас, я всегда считал PDF довольно безопасным форматом: автор создаёт текст и графику, после чего он открывается в программе просмотра PDF, больше ничего не делая. Несколько лет назад я мимоходом слышал об уязвимостях Adobe Reader, но особо не задумывался о том, как они могут возникать.
 <br> 
 <br> <i>Изначально</i> Adobe сделала PDF именно для этого, но мы уже выяснили, что сегодня это совсем не так. В <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf" rel="nofollow">1310-страничной спецификации PDF</a> (на самом деле довольно понятном и интересном чтиве) описывается безумное количество возможностей, в том числе:
 <br> 
 <br> 
 <ul> 
  <li><a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=1123" rel="nofollow">Встроенный Flash</a></li> 
  <li>Аннотации в виде <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=783" rel="nofollow">звука</a> и <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=784" rel="nofollow">видео</a></li> 
  <li>Аннотации в виде <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=789" rel="nofollow">3D-объектов</a> (!)</li> 
  <li>Метаданные <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=946" rel="nofollow">Web capture</a></li> 
  <li><a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=166" rel="nofollow">Произвольные математические функции</a> (в том числе и <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=176" rel="nofollow">Тьюринг-неполное подмножество PostScript</a>)</li> 
  <li>Формы с поддержкой Rich text, использующие <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=680" rel="nofollow">подмножество XHTML и CSS</a></li> 
  <li>Вложения в виде <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=638" rel="nofollow">файлов</a> и <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=588" rel="nofollow">коллекций файлов</a></li> 
 </ul>
 <br> но самое интересное для нас…
 <br> 
 <br> 
 <ul> 
  <li>Это <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=709" rel="nofollow">скрипты JavaScript</a> на основе <a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf" rel="nofollow">стандартной библиотеки, совершенно отличающейся от библиотеки браузера</a></li> 
 </ul><a name="habracut"></a>
 <br> Разумеется, большинство программ для чтения PDF (кроме Adobe Reader) не реализует основную часть этих возможностей. <em>Однако Chrome реализует JavaScript!</em> Если вы откроете подобный файл PDF в Chrome, то он запустит скрипт. Я выяснил, повторив действия из <a href="https://mariomalwareanalysis.blogspot.com/2012/02/how-to-embed-javascript-into-pdf.html" rel="nofollow">этого поста о создании PDF с JS</a>.
 <br> 
 <br> Однако здесь есть хитрость. Chrome реализует только <em>крошечное</em> подмножество огромной поверхности Acrobat JavaScript API. Реализация API в PDFium браузера Chrome в основном состоит из <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2557/fpdfsdk/src/javascript/Document.cpp#258" rel="nofollow">подобных заглушек</a>:
 <br> 
 <br> 
 <pre><code class="cpp">FX_BOOL Document::addAnnot(IJS_Context* cc,
                           const CJS_Parameters&amp; params,
                           CJS_Value&amp; vRet,
                           CFX_WideString&amp; sError) {
  // Not supported.
  return TRUE;
}
FX_BOOL Document::addField(IJS_Context* cc,
                           const CJS_Parameters&amp; params,
                           CJS_Value&amp; vRet,
                           CFX_WideString&amp; sError) {
  // Not supported.
  return TRUE;
}
FX_BOOL Document::exportAsText(IJS_Context* cc,
                               const CJS_Parameters&amp; params,
                               CJS_Value&amp; vRet,
                               CFX_WideString&amp; sError) {
  // Unsafe, not supported.
  return TRUE;
}</code></pre>
 <br> И я понимаю опасения разработчиков — этот Adobe JavaScript API имеет <a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf#page=3" rel="nofollow">совершенно огромную площадь поверхности</a>. Предположительно, скрипты могут выполнять такие действия, как <a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf#page=36" rel="nofollow">соединение с произвольными базами данных</a>, <a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf#page=537" rel="nofollow">распознавание подключенных мониторов</a>, <a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf#page=317" rel="nofollow">импорт внешних ресурсов</a> и <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_3d_api_reference.pdf" rel="nofollow">манипулирование 3D-объектами</a>.
 <br> 
 <br> Поэтому в Chrome получилась такая странная ситуация: мы можем выполнять произвольные вычисления, однако имеем эту странную, ограниченную поверхность API, при которой ввод-вывод и передачу данных между программой и пользователем реализовывать очень неудобно.
 <br> 
 <br> Вероятно, можно встроить в PDF компилятор C, скомпилировав его в JS, например, с помощью <a href="https://kripken.github.io/emscripten-site/" rel="nofollow">Emscripten</a>, но тогда компилятор C должен будет получать ввод из формы простого текста (plain text), а вывод выполнять снова в поле формы.
 <br> 
 <br> На самом деле, я заинтересовался PDF пару недель назад из-за <a href="https://en.wikipedia.org/wiki/PostScript" rel="nofollow">PostScript</a>; я читал посты Дона Хопкинса о <a href="https://en.wikipedia.org/wiki/NeWS" rel="nofollow">NeWS</a> — напоминающей AJAX системе, но реализованной в 80-х на PostScript.
 <br> 
 <br> 
 <blockquote>
  Забавно, что PDF стал реакцией на PostScript, который был слишком выразительным (являясь полнофункциональным языком программирования), слишком сложным в анализе и восприятии. Наверно, PDF по-прежнему остаётся в этом плане шагом вперёд, но всё равно смешно, что он разросся всеми этими возможностями.
  <br> 
  <br> Ещё один любопытный момент: как любой долгоживущий цифровой формат (лично я испытываю нежные чувства к файловой системе FAT), PDF сам по себе является своего рода историческим документом. Мы можем отследить, как поколения инженеров добавляли нужные им в своё время функции, пытаясь при этом не поломать уже существующие.
 </blockquote>
 <br> Я не совсем понимаю, зачем разработчики Chrome вообще заморачивались поддержкой JS. Они взяли <a href="https://plus.google.com/+FrancoisBeaufort/posts/9wwSiWDDKKP" rel="nofollow">код программы чтения PDF из Foxit</a>; возможно, у Foxit был какой-то клиент, использовавший валидацию форм через JavaScript?
 <br> 
 <br> Кроме того, Chrome использует тот же рантайм, что и в браузере, хоть и не раскрывает браузерных API. Насколько я понимаю, это значит, что можно использовать такие возможности ES6, как стрелочные функции и прокси.
 <br> 
 <br> 
 <h3>Breakout</h3>
 <br> Так что же мы можем сделать с предоставляемой нам Chrome поверхностью API?
 <br> 
 <br> Кстати, должен извиниться за неидеальное распознавание коллизий и непостоянную скорость игры. БОльшую часть игры я содрал с <a href="https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript" rel="nofollow">туториала</a>.
 <br> 
 <br> Первые доступные пользователю точки ввода-вывода, которые я смог найти в реализации PDF API браузера Chrome, находились в <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2524/fpdfsdk/src/javascript/Field.cpp" rel="nofollow">Field.cpp</a>.
 <br> 
 <br> Мы не можем <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2524/fpdfsdk/src/javascript/Field.cpp#1631" rel="nofollow">менять цвет заливки</a> текстового поля во время выполнения, зато можем <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2524/fpdfsdk/src/javascript/Field.cpp#2356" rel="nofollow">менять прямоугольник его границ</a> и <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2524/fpdfsdk/src/javascript/Field.cpp#479" rel="nofollow">задавать стиль границ</a>. Мы не можем <a href="https://pdfium.googlesource.com/pdfium/+/chromium/2524/fpdfsdk/src/javascript/Document.cpp#1107" rel="nofollow">считывать точное положение мыши</a>, однако можем при создании PDF привязать к полям скрипты mouse-enter и mouse-leave. Также во время выполнения нельзя добавлять поля: придётся ограничиться тем, что мы поместили в PDF в момент создания. Любопытно, почему разработчики выбрали именно эти методы? Это похоже на какой-то стереотип о программировании на олдскульном FORTRAN: необходимо объявлять все переменные заранее, чтобы компилятор мог статически выделить под них память.
 <br> 
 <br> Итак, файл PDF генерируется <a href="https://github.com/osnr/horrifying-pdf-experiments/blob/master/generate_breakout.py">скриптом</a>, заранее создающим набор текстовых полей, в том числе и игровых элементов:
 <br> 
 <br> 
 <ul> 
  <li>Ракетку</li> 
  <li>Кирпичи</li> 
  <li>Мяч</li> 
  <li>Очки</li> 
  <li>Жизни</li> 
 </ul>
 <br> Но для правильной работы игры мы также внесём некоторые хаки.
 <br> 
 <br> Во-первых, мы создаём тонкую длинную «полосу» текстового поля для каждого столбца нижней половины экрана. Полосы получают событие mouse-enter, когда игрок перемещает мышь по оси X, поэтому ракетка может перемещаться при движении мыши.
 <br> 
 <br> Во-вторых, мы создаём поле под названием «whole», закрывающее всю верхнюю половину экрана. Chrome не ожидает, что отображение PDF будет меняться, поэтому если перемещать поля в JS, то получатся довольно сильные артефакты. Это поле «whole» решает данную проблему — мы включаем/отключаем его во время рендеринга кадра. Этот трюк заставляет Chrome подчищать артефакты.
 <br> 
 <br> Кроме того, при перемещении поля, похоже, сбрасывается его <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=612" rel="nofollow">поток внешнего отображения</a>. Выбранный вами красивый внешний вид из произвольной PDF-графики «слетает» и заменяется простым залитым прямоугольником с границей. Поэтому в моей игре используется <a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=642" rel="nofollow">упрощённый словарь характеристик внешнего вида</a>. В самом крайнем случае указанный там цвет заливки при перемещении виджета остаётся неизменным.
 <br> 
 <br> 
 <h3>Полезные ресурсы</h3>
 <br> 
 <ul> 
  <li><a href="https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf" rel="nofollow">Справочное руководство по PDF, шестая редакция</a></li> 
  <li><a href="https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/js_api_reference.pdf" rel="nofollow">Справочное руководство JavaScript for Acrobat API</a></li> 
  <li>Туториалы Брендана Загерски <a href="https://brendanzagaeski.appspot.com/0004.html" rel="nofollow">Minimal PDF</a> и <a href="https://brendanzagaeski.appspot.com/0005.html" rel="nofollow">Hand-coded PDF</a></li> 
  <li>В документе <a href="https://blogs.adobe.com/pdfdevjunkie/files/pdfdevjunkie/PDF_Inside_and_Out.pdf" rel="nofollow">PDF Inside and Out</a> есть отличные примеры.</li> 
  <li>Библиотека Python <a href="https://github.com/pmaupin/pdfrw">pdfrw</a> обладает идеальным для такой работы уровнем абстракции. Многие библиотеки слишком высокоуровневые и раскрывают только графические операторы. Самостоятельная генерация данных PDF возможна, но довольно неудобна, потому что нужно правильно реализовать форматы структур данных и байтовые сдвиги.</li> 
 </ul>
 <br> 
 <hr>
 <br> 
 <h4>На правах рекламы</h4>
 <br> Закажите сервер и сразу начинайте работать! Создание <a href="https://vdsina.ru/cloud-servers?partner=habr223">VDS любой конфигурации</a> в течение минуты, в том числе серверов для хранения большого объёма данных до 4000 ГБ. Эпичненько :) 
 <br> 
 <br> <a href="https://vdsina.ru/cloud-servers?partner=habr223"><img src="https://habrastorage.org/webt/8p/3v/z4/8p3vz47nluspfyc0axlkx88gdua.png"></a>
</div>', '2021-01-06 11:03:00', 'Пугающие эксперименты с PDF: запускаем «Арканоид» в документе', 22, null, 7),
        (21, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f90/35e/199/f9035e1994121fc2980e5f020b4b9bd4.png" width="785" height="502">
  <figcaption></figcaption>
 </figure>
 <p>Музыка — это многоэтажное здание без лифтов и лестничных маршей. На каждом этаже поселился определённый стиль, жанр или направление, добраться до которых потребует приобретение определённых жизненных знаний и навыков.</p>
 <p>Уже с рождения мы начинаем преодолевать невидимые лестницы и этажи здания «института» под названием «жизнь», где у каждого свой путь и учителя. Я не претендую на музыкального гуру, музыковеда и «статьеплёта», но есть жизненный опыт и классическое музыкальное образование, и есть чем поделиться и что порекомендовать. Естественно, обществу было бы интересней не читать музыкальные статьи, а почаще слушать правильную качественную музыку. О ней и пойдёт речь — это эстрадная музыка. Тема тонкая, поп-музыка мега популярна, но попробую вклиниться. Не лелею особенных надежд, тем не менее, хотелось бы ещё при жизни увидеть небольшой просвет в российском музыкальном туннеле.</p>
 <p>Почему популярность современной эстрадной музыки зашкаливает? Она легко ложится на слух и не требует специальной подготовки, так как в этой музыке простая мелодика и гармония. Сочиняют её в большинстве «кустарные» композиторы, в лучшем случае окончившие музыкальную школу. Поэтому такую музыку я бы поселил на нижних этажах нашего здания, до которых не составит труда добраться. А вот классике и джазу отдал бы самые верхние престижные этажи, соответственно, путь до них будет долог и тернист.</p>
 <p>Простой человек может заметить, что о вкусах не спорят, и ему комфортно и на первом этаже. И его можно понять. Зачем лишний раз напрягаться и «городить» какие-то виртуальные лестницы, то есть, работать над собой, над своим музыкальным вкусом. Да, к сожалению, музыкальный вкус не даётся с рождения, он формируется и шлифуется годами, как правило, в начале пути под контролем профессионалов. А где их в жизни повстречать? Первое, что приходит на ум — это музыкальная школа, но там специалисты приобщают в основном к классической, народной и эстрадно-духовой музыке, а у нас тема эстрадной музыки. Преподавателя по предмету «эстрадная музыкальная литература» в начальных учебных заведениях нет, их нигде не готовят. Я думаю, что в наше время такие специалисты важны и будут всегда востребованы, так как правильная поп-музыка не менее важна другой. И такую дисциплину необходимо вводить не только в музыкальных школах, но и в общеобразовательных, а может быть, даже и в дошкольных.</p>
 <p>Когда мы приходим в этот мир и неосознанно начинаем его познавать, видеть и слышать, то в первую очередь, мы можем реагировать на музыку, которая является одним из первых проводников, правильным кодом для гармоничной и духовной жизни. Я родился в «брежневскую» эпоху, где в каждой квартире было неумолкающее сетевое радио, из музыки — в основном классика. Специально никогда не слушал, но неосознанный правильный код получил. Наверное, вы догадываетесь, какой код сейчас доходит до подрастающего поколения от однодневных стилей и нашей «попсы».</p>
 <p>После распада Советского Союза многие сферы деятельности оказались в глубоком кризисе застоя. Особенно те, что относились к культуре: кино, литература, музыка. Тогда нас накрыл «девятый вал» вседозволенности и безвкусия FM радио и телевидения. А нам, выросшим на блатном шансоне и «попсе», перейти на другой уровень духовного познания музыки было нереально. К сожалению, новое поколение подхватило неудачную эстафету и добавило свою «ложку дёгтя» новомодных наэлектролизованных ритмов из-за «бугра». В такой ситуации трудно кого-либо винить. Почему мы застряли на «цокольном этаже» и как выйти на другой уровень? Возможно, сила человеческой инертности не даёт нам сделать переоценку ценностей.</p>
 <h2> А может во всём виноват «медведь»...?</h2>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/acc/92a/d6c/acc92ad6c6df86be37fdf58f9a433cb5.png" width="775" height="530">
  <figcaption></figcaption>
 </figure>
 <p>Конечно, важны музыкальные способности, осознание человеком своих природных данных. К примеру, чтобы поступить в музыкальную школу, нужно сдать определённые тесты на слух. А если мэтры говорят: «Вам на ухо медведь наступил!», а иногда сразу на два, тогда «пиши пропало». <strong>«Медведь» так же уместен и к навыкам восприятия усложнённой музыки. </strong>Для кого-то это клеймо на всю жизнь, неспособность обучаться на инструменте, но это не повод для огорчения. Все мы разные, как и природные данные. В такой тонкой ситуации очень важна разъяснительная помощь педагогов и родителей для подрастающего поколения. Взрослым же людям что-то советовать по выбору музыки — неблагодарное занятие. Разговоры о поп-музыке с людьми разных поколений и профессиональных сфер обычно заканчивались устоявшимся мнением оппонента: «Я сам себе авторитет, что хочу, то и слушаю!». Репертуар у всех одинаковый, как «под копирку». Конечно, легче всего зайти на первый этаж и жить там всю жизнь. Но, тем не менее, в отношении стремления к качеству жизни мы мыслим стандартно: стремимся дороже одеваться и питаться, улучшаем жилищные условия, мечтаем о даче, повышаем класс автомобиля и так далее. Но при этом далеко не все стремятся повышать уровень духовной культуры, в том числе и музыкальной. Здесь же позволю небольшую ремарку. Не буду лукавить, положительное «окультуривание» население всё же было, в основном среди близких и друзей.</p>
 <p>В бешеном ритме жизни музыка сопровождает нас повсюду, она стала неотъемлемой частью нашего бытия и, порой, трудно на скорости притормозить, чтобы разобраться в собственном вкусе при таком многообразии стилей и жанров. Пусть эта статья станет вашей первой ступенькой или лестницей к осознанному пониманию, выбору и направлению к правильной качественной эстрадной музыке.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/714/16d/dea/71416ddea2798bfe2bb0a41e6c83a06b.png" width="800" height="557">
  <figcaption></figcaption>
 </figure>
 <p>С ней я познакомился ещё в 1983 году, учась в музыкальном училище. Тогда этот стиль зарождался на стыке направлений Jazz Rock и Fusion и стал называться Smooth Jazz (Смус-Джаз). Моё первое впечатление — «не догнал». Тогда я не знал, что уши надо постепенно «качать», как бицепсы и трицепсы. Этот процесс оказался не быстрым. За сорок с лишним лет смус-джаз развился до совершенства, в основном его инструментальная составляющая. Это исполнители высокопрофессионального уровня, которые сочиняют, аранжируют и играют свои композиции. Эту музыку можно назвать правильной. В ней много красивых мелодий на любой вкус, ненавязчиво обработанных в мягком джазовом стиле.</p>
 <p>Но в интернете можно наткнуться и на небольшой негатив к этому стилю со стороны джазменов классического джаза. С их стороны эта музыка слишком приглажена, прилизана, простовата и годится для женщин-домохозяек. Я думаю, что джазменам надо «спуститься с небес», то есть с верхних этажей. Смус-джаз живёт этажом пониже и является связующим звеном, трамплином или взлётной полосой к классическому джазу. И в интересах крутых джазменов как раз увеличение числа поклонников этой музыки.</p>
 <p>Смус-джаз легко найти на стриминговых сервисах: Apple Music, VK(Boom), Яндекс Музыка, YouTube, Spotify, SuondCloud и других. Здесь я вам не открою глаза на потоковые сервисы, из года в год все они заточены по стандартным канонам — выдавать коммерческую «удобоваримую» музыку для массового слушателя, которая уходит как горячие пирожки. А вот для привлечения людей к интеллектуальной музыке платформы нет. Мы по-прежнему, как слепые котята, будем обжигаться об витиеватые мелодии и неуловимые гармонии джаза. Чем они могут помочь начинающему меломану? Сборники? Подборки? Рекомендательный робот? Где тот «джазовый букварь» для простого обывателя? К сожалению, прогресс цифровых технологий парадоксально ведёт к регрессу отбора качественной музыки, который может обеспечить только человеческий фактор. К счастью, я не робот и могу порекомендовать в начале пути к смус-джазу слушать интернет-радио. Все радио работают со своим музыкальным пакетом треков, который может существенно отличаться от других. Поэтому лучше один раз в год менять дислокацию.</p>
 <h2>Лучшие штатовские cмус-радиo: 1FM-Bay Smooth Jazz, Wsje-Db-Smooth Jazz Expressions, SmoothJazz.com Global, Gotradio-Jazz So Smooth, Smooth Choice. Российские: Smooth Jazz-101.ru, Radio Capric Smooth Jazz.</h2>
 <p>Смус-джаз — очень популярный музыкальный стиль в Америке. А что в России? Я уверен, что каждый человек хотя бы раз в жизни слышал эту музыку. Смус-джаз широко используется как фоновая музыка вперемежку с современными стилями Lounge, Chillout, New Age в торговых центрах, аэропортах, вокзалах и тому подобное. Для личного применения она логична в машине, поезде или самолёте, с ней будет точно комфортно.</p>
 <p>Окунувшись в мир смус-джаза, осознал, насколько объёмен этот пласт — огромное количество музыкантов и групп с широчайшим репертуаром. Фоновая музыка конечно нужна, но зачем столько, а что для души? Достаточно ли настоящих хитов? В общем, несколько лет назад я начал пробовать сортировать, отбирать лучшие произведения в надежде, что хватит достойного материала. Творческий процесс по наитию навёл меня на некий музыкальный ключ к слуховому программированию. Он и помог мне применять удобную расшифровку и компоновку по инструментам и жанрам, а так же приёмы подачи музыкального материала. Впоследствии начинала складываться определённая система подборок разной музыкальной сложности. Теперь с уверенностью можно сказать, что у смус-джаза есть другая сторона медали — главная.</p>
 <p>Качественный смус-джаз может стать настольной музыкальной книгой, пособием по воспитанию музыкального вкуса. Логичным было бы ознакомление с этой музыкой хотя бы как дополнение к утверждённой программе обучения в музыкальной школе и на уроках музыки в общеобразовательной. Специалистов можно готовить в музыкальных училищах, открыв класс «трендссетор эстрадной музыки». А методистам в сотрудничестве с музыковедами разработать новые программы для учебных заведений. Предвижу самое большое препятствие — это договориться с «китами»-правообладателями: Sony Music Entertsinment, Universal Music Group, Warner Music Group, чьи подразделения представлены в Москве.</p>
 <p>Возможно, скептики усмотрят в вышеизложенном утопическую картину, но оптимистам всё же посоветую воспользоваться тем, что есть на музыкальных сервисах — это готовые подборки и сборники или интернет-радио. Есть и другой путь — стать таким же меломаном как я и собрать свою эксклюзивную коллекцию. Возможно, вам помогут и мои практические наблюдения, наработки и подходы к смус-джазу. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bc8/f09/829/bc8f0982929f38a2230f4ab4d38d4b81.png" width="775" height="540">
  <figcaption></figcaption>
 </figure>
 <ul>
  <li><p>На первом этапе знакомства слушать смус-джаз как фоновую, не напрягаясь, между прочим, отправляясь на работу или обратно.</p></li>
  <li><p>Во всём богатстве ассортимента смус-джаза могут встречаться треки классического джаза. Их отличает более натуральное звучание, нет «синтетики», преобладание духовых инструментов, которое тяжело воспринимается для непродвинутых слушателей. Пугаться не стоит, такие треки можно пропускать, оставив до лучших времён.</p></li>
  <li><p>Смус-джаз построен на более усложнённых гармониях в отличии от поп-музыки, поэтому не ждите быстрой реакции, а наберитесь терпения — эта музыка требует времени и индивидуального подхода.</p></li>
  <li><p>В начальной стадии знакомства предпочтительней выбирать музыку с инструментами, которые вам ближе и лучше ложатся на слух. Я же рекомендую начать с саксофонных альбомов.</p></li>
  <li><p>Сформировать удобную и подробную структуру папок по инструментам: саксофон, гитара, пианино, труба, смешанные инструменты, вокал.</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bea/a6c/3a3/beaa6c3a36e12a14b1ab163955a531fe.png" width="806" height="512">
  <figcaption></figcaption>
 </figure>
 <ul>
  <li><p><strong>Этот шаг будет самым главным.</strong> Научиться отбирать нужные треки в подготовленные папки по разным подстилям, динамическому рисунку и характеру. Пример: быстрые, медленные, в ритме танца и так далее. Впоследствии у вас должны получаться музыкальные подборки, сравнимые с небольшими увлекательными литературными произведениями. </p></li>
  <li><p>Отобранные треки желательно обработать в специальных программах, либо на онлайн сервисах, которые предназначены для выравнивания звука, обрезания, соединения и так далее. Я пользуюсь простыми прогами: <strong>mp3DirectCut, wxMP3gain, iovSost MP3 Cutter Joiner, AIMP2, Ауди Мастер.</strong></p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2e0/28a/de7/2e028ade755fb07cb472e32d20bea9af.png" width="800" height="462">
  <figcaption></figcaption>
 </figure>
 <ul>
  <li><p>Чтобы держать высокую планку при отборе правильной музыки, следует придерживаться определённой канвы композиции. Вот примерная схема, которую могут применять сочинители:</p></li>
 </ul>
 <h2>Вступление + тема + развитие темы + кульминация + кода(тема)</h2>
 <p>Джазмены — народ «плодовитый», и не все оканчивали академий, но способны круто импровизировать и много сочинять. В смус-джазе главное — знать меру: небольшое вступление и незатянутое окончание. И не забывать про тему, которая должна прозвучать минимум два раза. А если в треке фигурируют культовые имена смус-джаза. то стоит прислушаться. Вот такие нехитрые принципы.</p>
 <ul>
  <li><p>Какой примерный формат альбома: трек по времени от 3 до 5 минут, количество от 10 до 15 треков, общее время от 40 до 60 минут. Идеальный вариант — использовать треки радио версий (Radio Version, Radio Edit).</p></li>
  <li><p>Если вы будете пользоваться треками с радио, то есть тонкости. Треки с разных радио могут отличаться качеством низких и высоких частот как в лучшую, так и в худшую сторону. Распространённый битрейт на многих радио 128 кбит/с. Здесь должен помочь слух, и важно при прослушивании использовать «ненавороченные» накладные наушники. Конечно, хобби кропотливое и местами монотонное, но творческое. Всегда есть положительный конечный результат.</p></li>
  <li><p>И чтобы подытожить. У каждого, кто почувствует и проникнется этой музыкой, должна быть своя любимая музыкальная «книжка» на любое сиюминутное настроение. А под боком большой архив — библиотека смус-джаза, как для начинающих, так и для подготовленных.</p></li>
 </ul>
 <p>Двадцать лет назад такая методология была бы невозможна, так как не было много музыкантов и, соответственно, выбора качественных композиций смус-джаза. Но и сегодня, уже при таком широком выборе, он по-прежнему остаётся в тени для большинства любителей эстрадной музыки. Пришло время менять концепции в подходе восприятия качественной музыки для современного человека. Будет ли глобально пересмотрено отношение к эстрадной музыке заинтересованных структурных ведомств — оставим вопрос открытым. Проблема, которую я обозначил в этой статье, лежит уже давно на поверхности нашего общества. На Хабре есть классный хаб «будущее здесь», будем надеяться, что это недалёкое будущее.</p>
 <p>Крылатая фраза «Новинка сезона! Арфы нет — возьмите бубен!» из известного советского фильма «В бой идут одни старики» стала для меня символичной и приобрела в статье двойное, переносное значение. Нет нашего продукта — возьмите импортный. Или всё же есть отечественный смус-джаз? Мой довольно продолжительный мониторинг не дал положительных результатов. В России есть джазовые музыканты мирового уровня, но этот стиль их явно не привлекает. Другая категория инструменталистов пытается играть неудачные каверы на известные зарубежные мелодии под их же «минус»(аранжировка). Очень много таких музыкантов на известном сайте творческой интеллигенции «RealMusic». Композиторские способности тоже под большим вопросом. Мой совет простой — больше слушать музыку лучших представителей смус-джаза. Интернет-радио вам в помощь и удобное приложением<a href="https://www.radiocent.ru/" rel="noopener noreferrer nofollow"> Radiocent</a>, которое мне помогает уже десять лет.</p>
 <h2> ЛУЧШИЕ МУЗЫКАНТЫ </h2>
 <h2> ГИТАРИСТЫ:</h2>
 <ul>
  <li><p>Сhuck<strong> </strong>Loeb, George Benson, Norman Brown, Paul Brown, Nils, U-Nam, Tim Bowman, Jay Soto, Jeff Golub, Paul Jackson Jr., Nick Colionne, Doc Powell, Drew Davidsen, Blake Aaron, Earl Klugh и другие.</p></li>
 </ul>
 <ul>
  <li><p>Акустическая гитара: Peter White, Marc Antoine, Ken Navarro, Jesse Cook, Acoustic Alchemy и другие.</p></li>
 </ul>
 <h2> САКСОФОНИСТЫ:</h2>
 <ul>
  <li><p>Dave Koz, Michael Lington, Eric Darius, Kenny G, David Sanborn, Kim Waters, Dotsero, Darren Rahn, Boney James, Richard Elliot, Marion Meadows, Paul Taylor, Eric Marienthal, Art Porter и другие.</p></li>
 </ul>
 <h2> ПИАНИСТЫ:</h2>
 <ul>
  <li><p>Brian Culbertson, Tom Grant, Bob Baldwin, Bob James, Bobby Lyle, Joe Sample, Dan Siegel, Oli Silk, Joe McBride, Kim Pensyl, Gregg Karukas, Keiko Matsui, Brian Simpson, Alan Hewitt, David Benoit и другие.</p></li>
 </ul>
 <h2> ТРУБАЧИ:</h2>
 <ul>
  <li><p>Rick Braun, Chris Botti, Greg Adams, Gabriel Mark Hasselbach, Michael Fair, Lin Rountree, Gordon James, Till Bronner, David Wells, Freddie Hubbard, Cindy Bradley и другие.</p></li>
 </ul>
 <h2> ГРУППЫ:</h2>
 <ul>
  <li><p>3rd Force, SpyroGyra, Fourplay, Fattburger, Blue Knights, Shakatak, Incognito, Pieces Of A Dream, Paul Hardcastle, The Rippingtons, Down To The Bone, Soul Ballet, Four80eEast, Jazzmasters и другие.</p></li>
 </ul>
 <h2> ВОКАЛ:</h2>
 <ul>
  <li><p>George Benson, Al Jarrea Phil Perry, Maysa, Sade, Michel Franks, Basia, Gabriela Anders и другие.</p></li>
 </ul>
 <p>Да, фамилии все иноземные. По многим всем известным объективным причинам российские труженики музыкального цеха не могли появиться в то время в этом списке. </p>
 <p>Я оптимист и не хочу заканчивать статью на грустной ноте, в конце концов «за державу обидно». В качестве первой музыкальной иллюстрации может выступить отечественная подборка советских каверов из просторов интернета, исполненная российскими инструменталистами. Эти родные уху мелодии прозвучат для вас как некое подобие отечественного смус-джаза. А если вы сейчас пребываете в лирическо-романтическом настроении и симпатизируете саксофону, то она будет как нельзя кстати. </p>
 <p>В заключении я желаю каждому, кто реально оценил свои музыкальные способности, добраться до своего самого высокого этажа познания и понимания духовной правильной музыки.</p><iframe id="5ff43b1d3b295d140fdb3963" src="https://embedd.srv.habr.com/iframe/5ff43b1d3b295d140fdb3963" class="embed_video embed__content" allowfullscreen="true"></iframe>
 <p>Фонограмма представлена в ознакомительных и образовательных целях и согласована со специалистом по правам использования. </p>
</div>', '2021-01-07 19:21:00', '«Арфы нет — возьмите бубен!»', 28, null, 2),
        (22, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/vz/he/fh/vzhefhsursn-vtlmpcburxuz6uq.png" alt="image">
 <br> 
 <br> Независимый исследователь <a href="https://bugs.xdavidhu.me/google/2021/01/11/stealing-your-private-videos-one-frame-at-a-time/" rel="nofollow">обнаружил</a>, как можно украсть чужое приватное видео с YouTube. Для этого он использовал Google Ads. <a name="habracut"></a>
 <br> 
 <br> При загрузке ролика на YouTube пользователь выбирает одну из трех настроек конфиденциальности: общедоступный, частный (только для пользователей, знающих URL видео), и приватный (доступ для учетных записей, которым дали разрешение).
 <br> 
 <br> Исследователь загрузил приватное видео для тестирования. При попытке ввести прямой HTTP-запрос с идентификатором видео сайт YouTube выдавал ошибку и предупреждение о том, что оно является приватным. 
 <br> 
 <br> Тогда автор поста решил использовать Google Ads. Он предназначен для создания рекламы во всех сервисах Google, включая YouTube. После создания учетной записи в Google Ads он разместил новую рекламу, которая включала целевое видео. В процессе создания объявления пользователь также пытался использовать идентификатор целевого частного видео, но безуспешно.
 <br> 
 <br> После размещения объявления исследователь начал изучать различные функции рекламы Google. Он обнаружил вкладку «Видео», где мог видеть список роликов, использованных в рекламе. Во вкладке обнаружился раздел «Аналитика» для целевого видео. В нем содержался встроенный проигрыватель, статистика и функция под названием Moments, которая позволяет рекламодателям «отмечать» определенные моменты видео, чтобы видеть, к примеру, когда появится метка логотипа компании. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/14/da/st/14dastxbtc7idvebvr667z3w-kc.png" alt="image">
 <br> 
 <br> В журналах прокси при проставлении отметок отправлялся POST-запрос с телом, включающим идентификатор видео: 
 <br> 
 <br> 
 <pre><code class="plaintext">POST /aw_video/_/rpc/VideoMomentService/GetThumbnails HTTP/1.1
Host: ads.google.com
User-Agent: Internet-Explorer-6
Cookie: [redacted]

__ar={"1":"kCTeqs1F4ME","2":"12240","3":"387719230"}</code></pre>
 <br> Где в параметре __ar 1 — это идентификатор видео, а 2 — время момента в миллисекундах. 
 <br> 
 <br> Ответом было изображение в кодировке base64, которое представляло собой миниатюру, отображаемую Ads.
 <br> 
 <br> Тогда исследователь заменил идентификатор в параметре на URL своего видео.
 <br> 
 <br> После этого он загуглил «base64 to image» и вставил base64 в первый найденный декодер. Тот отобразил кадр из целевого видео. 
 <br> 
 <br> Затем исследователь использовал скрипт Python, который генерирует видео из полученных изображений. Он загрузил кадры первых 3 секунд видео, декодировал их, а затем сгенерировал GIF. 
 <br> 
 <br> 
 <div class="oembed">
  <iframe id="5ffd97d5017bf613f0899e9f" src="https://embedd.srv.habr.com/iframe/5ffd97d5017bf613f0899e9f"></iframe>
 </div> Стоит отметить, что при таком способе кражи приватных видео есть несколько ограничений:
 <br> 
 <br> 
 <ul> 
  <li>нужно знать идентификатор целевого видео,</li> 
  <li>отсутствие в новом ролике звука, </li> 
  <li>низкое разрешение.</li> 
 </ul>
 <br> А <a href="https://habr.com/ru/post/533360/">здесь</a> можно найти информацию о том, как просматривать YouTube-видео по фрагментам и циклически.
</div>', '2021-01-12 15:37:00', 'Исследователь обнаружил, как красть видеоролики с YouTube по одному кадру', 91, null, 5),
        (23, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Поскольку все мы живём в цифровую эпоху, любые технические, технологические и иные изменения в киберпространстве требуют от современного человека «подстройки» под них. Привычное понимание собственности и вещей с точки зрения юриспруденции касается и различных форм собственности – будь то владение материальными ценностями или объектами авторских прав. Но что, если объектом собственности выступает объект, представленный в электронной (цифровой) форме? Каким образом право владения определенным объектом будет распространяться на объекты, циркулирующие в цифровом пространстве?
 <br> 
 <br> Говоря об объектах цифрового мира, мы зачастую подразумеваем под ними определенные объекты, существующие в рамках виртуального пространства, в том числе, в компьютерных играх. Ценность данных объектов в принципе определяется лишь возможностью применения конкретного объекта в рамках заранее заданных программой условий – а именно правил компьютерной игры, реализованных в её коде. Однако, стоит отметить и экономическую ценность, которую могут иметь данные объекты – довольно часто подобные объекты, так называемые внутриигровые предметы, можно купить за реальные деньги. Суммы, которые игроки тратят на покупки внутри игрового пространства, порой могут достигать миллиардов долларов. Данный факт придает особое значение правовому регулированию аспектов, касающихся владения игровым «имуществом», состоящим из таких внутриигровых предметов.
 <br> <a name="habracut"></a>
 <br> Рассматривая вопрос правового регулирования, невозможно не обратиться к природе понятия «внутригрового объекта / предмета». Как следует из названия, внутриигровой объект существует в рамках некоего «замкнутого» виртуального пространства (конкретной компьютерной игры), он всегда представлен в цифровой форме и является цифровым объектом. К таким объектам можно отнести, в частности, снаряжение, форму главного героя, инвентарь, снадобья, оружие, приспособления, а также так называемых «персов» — представленных в виде уникальных героев внутриигровых персонажей, привязанных к учётным записям пользователей. Представленные объекты имеют общую функциональную особенность — они помогают пользователю осуществлять определенные действия внутри игры, а также улучшить игровой процесс и его восприятие игроком. Помимо этого, внутриигровые предметы представлены и в виде некоторых «услуг» по улучшению физических качеств главного героя (так называемой «прокачке» персонажей), изменения внешнего вида или перестройке внутриигрового пространства. В некоторых многопользовательских играх внутриигровые предметы можно купить только за внутреннюю, внутриигровую валюту, которая может быть также рассмотрена как виртуальное игровое имущество – но и она изначально приобретается за реальные деньги. 
 <br> 
 <br> Внутриигровые объекты могут быть представлены в виртуальном пространстве в разных формах, однако у каждой из представленных форм имеются и общие черты. Все объекты игрового пространства имеют нематериальную форму – они не могут быть потреблены традиционным, «материальным» способом. Также все игровые объекты представлены в цифровом формате, а потому существуют исключительно в виде строк программного кода. Пользователь, соглашаясь создать свою внутриигровую учётную запись (аккаунт) соглашается с «номинальным» владением игровым имуществом – в силу того, что и учётная запись, и игра, и все внутриигровые предметы в ней изначально принадлежат владельцу сайта (компьютерной игры) как её разработчику / паблишеру (издателю). Фактически внутриигровые предметы и внутриигровую валюту можно квалифицировать как некое цифровое квазиимущество, вещное право на которое не передаётся игроку, но всего лишь предоставляется ему во временное владение / аренду. 
 <br> 
 <br> Поскольку право собственности на внутриигровые предметы у игрока фактически отсутствует, то понятие внутриигрового объекта также тесно связано с порядком его приобретения и распоряжением правами на него. Содержание договора о приобретении определенного внутриигрового имущества может быть различным. Многие онлайн-игры допускают возможность приобретения внутриигровых объектов за фиатные денежные средства, и внутриигровые покупки потенциально могут являться объектом обмена и дальнейшей перепродажи. Однако, например, пользовательское соглашение «World of Warcraft» в подпункте 5 пункта 3 «Ограничения на пользование World of Warcraft» содержит прямой запрет на покупку и продажу за «настоящие» деньги, а также обмен золота, оружия, доспехов и любых других виртуальных объектов, которые могут использоваться для игры в World of Warcraft, за рамками платформы World of Warcraft. Это также подтверждает тот факт, что Blizzard Entertainment, разработчик и издатель этой игры, рассматривает приобретаемые внутриигровые предметы как своё имущество, а не как имущество игрока. 
 <br> 
 <br> Такого же принципа придерживаются и многие игровые площадки, в том числе Steam и Epic. В рамках принимаемого пользователем лицензионного соглашения устанавливается запрет на распространение, покупку, продажу, передачу, сдачу в аренду, дарение, кражу и присваивание учётных записей с последствиями в виде блокировки учётной записи без возможности восстановления. Данный запрет обусловлен тем, что чаще всего игровые аккаунты продаются целиком, со всеми накопленными внутриигровыми предметами и «прокачанными персами», а потому создаются неравные возможности для вновь зарегистрированных игроков, которым предоставляются лишь базовые внутриигровые предметы для дальнейшего игрового процесса. 
 <br> 
 <br> Помимо вопроса о приобретении внутриигровых предметов, весьма существенным является вопрос и о том, считать ли внутриигровые объекты «имуществом». Как справедливо <a href="https://zakon.ru/blog/2019/03/26/ob_imuschestvennyh_pravah_na_nematerialnye_obekty_v_sisteme_absolyutnyh_prav_chast_chetvertaya__ob_o">отмечается</a> М.А. Рожковой, во-первых, необходимо чётко различать, о каких отношениях по поводу игрового имущества идёт речь, поскольку тут могут возникать различные по своей природе правоотношения. Во-вторых, необходимо исходить из того, что отношения по поводу игрового имущества – это всегда относительные, квазиправоотношения, «территория» которых ограничена рамками конкретной многопользовательской онлайн-игры, а круг обязанных субъектов не является неопределённым.
 <br> 
 <br> Признание внутриигровых объектов вещью является неприемлемым в силу формального признака — существования только в рамках виртуального пространства. <a href="http://base.garant.ru/10164072/6844673ce43ddebc6a2e7c59cb74b44f/#block_1062">Положения</a> Гражданского Кодекса РФ об азартной игре, подразумевающей потенциальный выигрыш также применяться не могут, так как обычно внутриигровое соглашение не подразумевают толкования компьютерных игр как азартных, а игра не определяет победителей и существует на постоянной основе. Весьма подходящим является причисление внутриигрового имущества к иному имуществу, в силу того, что пользователь наделяется определенными правами, а соответствующие нормы могут быть распространены на определенные виды договоров, заключаемых в отношении данного иного имущества. 
 <br> 
 <br> Различная трактовка игрового объекта с точки зрения законодательства привела к формированию новых подходов и к определению виртуального игрового имущества. Помимо обозначенных аспектов владения виртуальным игровым имуществом, весьма актуальным направлением является защита прав пользователя на соответствующее имущество. В отношениях, когда объектом спора является виртуальное имущество, суды исходят из двух теорий, тесно взаимосвязанных друг с другом, а именно, теории натуральных обязательств (или абсолютного права) и теории оказания услуг. 
 <br> 
 <br> Одним из подходов является теория, согласно которой пользователь обладает абсолютными правами на приобретаемое игровое имущество. Она основывается на положении о том, что пользование игровым имуществом может быть осуществлено только при наличии ограниченного доступа к нему – а именно учётной записи, защищённой паролем. Именно посредством пароля от такой учётной записи пользователь по аналогии с физическим контролем над вещью может распоряжаться виртуальным игровым имуществом по своему усмотрению. 
 <br> 
 <br> Иной точки зрения придерживаются представители теории, согласно которой игровое имущество и связанные с ним абсолютные права пользователя на него могут регулироваться как отношения, связанные с интеллектуальной собственностью. Данная теория применима в случаях, когда пользователю предоставляется возможность проявить творческий элемент в создании тех или иных объектов игрового пространства, в том числе модификаций объектов в существующих играх. Наличие уникального объекта позволяет причислить создаваемый пользователем объект к объектам авторского права и применить соответствующие механизмы правовой защиты.
 <br> 
 <br> Весьма распространенной является теория, согласно которой доступ к виртуальному игровому имуществу представляется на основании лицензионного договора. При этом пользователь является владельцем кода, который соответствует тому или иному объекту в игре. Однако, соответствующие права в лицензионном соглашении не подразумевают прямого владения пользователем виртуальным имуществом.
 <br> 
 <br> Представленная теория подлежала оценке при рассмотрении налогового <a href="http://base.garant.ru/10164072/6844673ce43ddebc6a2e7c59cb74b44f/#block_1062">спора</a> против компании «Мейл.ру Геймз». Представители компании «Мейл.ру Геймз» пытались <a href="http://base.garant.ru/10164072/6844673ce43ddebc6a2e7c59cb74b44f/#block_1062">доказать</a>, что, приобретая игровое имущество, пользователь приобретает обновленную или расширенную версию игры, что позволяет применить «программистскую» налоговую льготу. Суд отклонил доводы ответчика, указав, что ДФИ (дополнительный функционал игр) «не представляет собой измененный или дополненный программный код, а значит, не является самостоятельным результатом интеллектуальной деятельности, что необходимо для квалификации соответствующих отношений и вносимых платежей как лицензионных». В названном деле суд квалифицировал ДФИ как «услугу по организации игрового процесса» для целей налогового спора и как исполнение по договору возмездного оказания услуг, что в итоге привело к применению стандартной ставки НДС вместо налоговой льготы.
 <br> 
 <br> Соответственно, ещё одной теорией, заслуживающей внимания, является теория о предоставлении виртуального игрового имущества как оказания услуг. Пользовательское соглашение, заключаемое между игроком и игровым сервисом (разработчиком игры) в такой ситуации признается договором об оказании услуг. Согласно заключённому соглашению, игровой сервис обязуется предоставить игроку определённые объекты игрового обихода за определенные денежные средства, тем самым предоставляя услугу по их созданию и дальнейшей передаче игроку. 
 <br> 
 <br> Защита соответствующих прав в рамках теории оказания услуг подразумевает, что пользователь заключает с разработчиком, содержащим в себе положения о том, что внутриигровое имущество может быть приобретено за денежные средства. Проблема правовой защиты в данном случае возникает тогда, когда суды ссылаются на внутренние правила игры, препятствующие полноценному владению игровым имуществом — к примеру, в случае блокировки учётной записи. В частности, в <a href="http://base.garant.ru/10164072/6844673ce43ddebc6a2e7c59cb74b44f/#block_1062">одном</a> из дел суд отметил, что блокировка учётной записи за нарушение правил игры, иные «негативные игровые эффекты (внутриигровые санкции) являются лишь элементами самой этой игры, ее сценария, и реализуются ответчиком только в рамках игрового процесса». В <a href="http://base.garant.ru/10164072/6844673ce43ddebc6a2e7c59cb74b44f/#block_1062">другом</a> деле суд пришел к выводу, что «все действия ответчика и пользователя игры, в том числе регистрация, осуществление и выполнение игрового сценария, применения внутриигровых санкций к персонажам за нарушения внутренних правил, относятся исключительно к игровому процессу, регулируются внутренними правилами ответчика и не подлежат судебной защите».
</div>', '2021-01-13 16:53:00', 'Лутбоксы и иное внутриигровое имущество в компьютерных играх: можно ли быть их полноправным владельцем?', 41, null, 2),
        (24, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Посвятите январь обучению — обретите новые технические навыки, которые помогут вам стать еще лучшим профессионалом, а вашей организации достичь большего в новом году.</p>
 <p>Посетив&nbsp;<a href="https://www.microsoft.com/ru-ru/trainingdays/?wt.mc_id=AID3014176_QSG_BLOG_502666"><strong><u>Azure Virtual Training Days</u></strong></a>&nbsp;вы узнаете как решения на основе облачных сервисов Microsoft Azure могут помочь вашему бизнесу успешно преодолевать сложности.</p>
 <p>Виртуальные мероприятия Azure посвящены разным темам: от основ облачных технологий Azure до модернизации веб-приложений или создания хранилищ данных, вебинары подходят для специалистов любого уровня и помогают бесплатно подготовиться к сертификационному экзамену&nbsp;Microsoft&nbsp;AzureFundamentals&nbsp;(<a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.microsoft.com%2Flearn%2Fcertifications%2Fazure-fundamentals%3Fwt.mc_id%3Dlearningredirect_certs-web-wwl&amp;data=04%7C01%7Cv-algur%40microsoft.com%7Cb05442d1088547bd093708d8b62faacc%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637459663131523873%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=KS%2FHZGAq%2FI9hRYiwaW4rypCXqxsHqntImrHwvH7FlLI%3D&amp;reserved=0"><u>AZ-900:&nbsp;Microsoft&nbsp;Azure&nbsp;Fundamentals).</u></a></p>
 <p>Под катом 3 обучающих мероприятия по Azure в январе.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e70/96b/2cf/e7096b2cf2f426bfa831ac269c75fbef.png" width="1970" height="410">
  <figcaption></figcaption>
 </figure>
 <h2>1. Microsoft Azure: основы</h2>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/523/16f/d9a/52316fd9af7bbd11eda3f74147035fd7.png" width="1312" height="520">
  <figcaption></figcaption>
 </figure>
 <p>18 января 2021г, 11.00-14.30 (GMT+3) Moscow<br>19 января 2021r, 11.00-14.30 (GMT+3) Moscow</p>
 <p>Чтобы представить будущее, вам необходимо понять, какие возможности перед вами и вашей организацией открывает облако сегодня. В рамках этого вводного курса «День виртуального обучения Microsoft Azure: основы» рассказывается о концепциях, моделях и сервисах облачных вычислений. Рассматриваются такие темы, как публичное, частное и гибридное облако, а также инфраструктура как услуга (IaaS), платформа как услуга (PaaS) и программное обеспечение как услуга (SaaS).</p>
 <p>Во время обучения вы узнаете, как:</p>
 <ul>
  <li><p>начать работать с Azure;</p></li>
  <li><p>интегрировать Azure с существующими сетями;</p></li>
  <li><p>улучшить понимание ключевых облачных концепций и основных сервисов, включая ценообразование, поддержку и безопасность в облаке</p></li>
 </ul>
 <p>После завершения этого бесплатного обучающего курса вы сможете сдать&nbsp;<a href="https://docs.microsoft.com/learn/certifications/azure-fundamentals"><u>сертификационный экзамен по основам Microsoft Azure</u></a>&nbsp;бесплатно.</p>
 <p>Вот, что будет:</p>
 <div class="table">
  <table>
   <tbody>
    <tr>
     <th><p></p></th>
     <th><p></p></th>
    </tr>
    <tr>
     <td><p>Введение</p></td>
     <td><p>Введение</p></td>
    </tr>
    <tr>
     <td><p>Модуль 0. Введение в курс Модуль 1. Концепции облачных технологий</p></td>
     <td><p>Модуль 3. Безопасность, конфиденциальность, соответствие требованиям и доверие</p></td>
    </tr>
    <tr>
     <td><p>Перерыв 10&nbsp;минут</p></td>
     <td><p>Перерыв 10&nbsp;минут</p></td>
    </tr>
    <tr>
     <td><p>Модуль 2. Базовые сервисы Azure</p></td>
     <td><p>Модуль 4. Ценообразование и поддержка Azure</p></td>
    </tr>
    <tr>
     <td><p>Заключение</p></td>
     <td><p>Заключение</p></td>
    </tr>
   </tbody>
  </table>
 </div>
 <p><a href="https://mktoevents.com/Microsoft+Event/218963/157-GQE-382?wt.mc_id=AID3014176_QSG_BLOG_502667"><strong>Регистрация</strong></a></p>
 <h2>2. Миграция серверной инфраструктуры</h2>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c9a/49f/1fb/c9a49f1fb392d6d0b61dd5cc45e7d373.png" width="1374" height="512">
  <figcaption></figcaption>
 </figure>
 <p>20 января, 2021, 12:00-15:10, (GMT+03:00), с русскими субтитрами</p>
 <p>Узнайте, как подготовить локальную серверную инфраструктуру к внедрению гибридных решений и переносам конкретных сценариев в облако.</p>
 <p><a href="https://mktoevents.com/Microsoft+Event/218906/157-GQE-382?wt.mc_id=AID3014173_QSG_BLOG_502671"><strong>Регистрация</strong></a></p>
 <h2>3. Модернизация веб-приложений и данных</h2>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a47/2e7/8ff/a472e78ffb31bca4defca7337161289a.png" width="1210" height="520">
  <figcaption></figcaption>
 </figure>
 <p>Узнайте, как модернизировать ваши приложения и перенести их в облако с минимальными перерывами в работе.</p>
 <p><a href="https://mktoevents.com/Microsoft+Event/220290/157-GQE-382?wt.mc_id=AID3018277_QSG_BLOG_502653"><strong>Регистрация</strong></a></p>
</div>', '2021-01-15 10:00:00', '3 крутых вебинара по Azure в январе', 92, null, 6),
        (25, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Я начал программировать на Go после достаточно продолжительного периода программирования на PHP. Полагаю судя по последним тенденциям мой случай далеко не единичный. Go в целом набирает популярность среди Web разработчиков.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a7a/4d6/30c/a7a4d630c9dd2433038ee7db03dc91aa.jpg" width="1000" height="1000">
  <figcaption></figcaption>
 </figure>
 <p>Итак, я в мире сусликов. А что делает прожженный до мозга костей PHP программист оказавшись там? Правильно, он продолжает "пыхтеть" - в силу своей профессиональной деформации — но уже на Go, со всеми вытекающими отсюда последствиями.</p>
 <p>Признаюсь я никогда не был на собеседовании, устраиваясь на вакансию Go разработчика, но подозреваю, что там не задают вопросов про SOLID, Dependency Injection и различные прелести ООП. Там другой мир, другая парадигма (в целом разумеется не экстраординарная), связанная с параллельным программированием, строгой типизацией и отсутствием полноценного ООП в строгом его смысле - к тому ООП к которому мы привыкли по PHP, С++ или Java.</p>
 <p>Поэтому в начале, разумеется, был определенный дискомфорт и ломка шаблонов. Я не понимал как использовать тот же <em>context.Context</em>, зачем он? Мои шаблоны готовы уже были треснуть, но матерого PHP программиста без хрена не съешь. Пора что-то с этим делать и писать свой велосипед! А именно то решение, которое мне, как PHP программисту, казалось достаточно очевидным для решения задача связанных с параллельным программирование, краеугольным камнем Go. Усевшись за рабочий ноутбук я почти месяц корпел над работой. Я хотел не просто сделать реализацию сферического коня в вакууме, а показать на конкретном примере возможность использования данного подхода. Так сказать, proof of concept. Ну и заодно набить руку на Go, чего греха таить.</p>
 <p>После того как велосипед был готов, я выкатил его, осмотрел и, выдохнув, сказал сам себе: "<em>ну, блин, вроде неплохо получилось. Нужно срочно рассказать об этом сообществу, пускай оценят</em>". Сказано — сделано. На Reddit была опубликована небольшая заметка про новый шаблон проектирования Go и, судя по реакции я понял… что люди ничего не поняли. "<em>Зачем? Как это использовать? Так это же over-engineering</em>" - в целом так можно охарактеризовать реакцию. Я не сдавался: "<em>сейчас я вам нафотошоплю свой контраргумент. Ага, добавить это в README.md - пусть знают эти суслики</em>".</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/118/619/6d0/1186196d0ebc9a844f757acd4a930c60.png" alt="Как видят решение программисты" title="Как видят решение программисты" width="800" height="430">
  <figcaption>
   Как видят решение программисты
  </figcaption>
 </figure>
 <p>А если без шуток, то это, наверное, тема для отдельной статьи.</p>
 <p>В целом о чем я? Много воды - ноль конкретики. Чтобы было реализовано:</p>
 <ol>
  <li><p>Шаблон проектирования <a href="https://github.com/AgentCoop/go-work" rel="noopener noreferrer nofollow"><em>Job</em></a> - это поведенческий шаблон проектирования, который инкапсулирует всю необходимую информацию для параллельного выполнения задач (task). </p></li>
  <li><p>В качестве примера использования данного шаблона был реализован простой прокси-сервер, выполняющий роль балансировщика уровня L4; клиент, который сканируют указанную директорию на наличие изображений и отправляет все найденные изображения на backend сервер для изменения их размера; backend сервер, который обрабатывает запросы по изменению размера изображений. В основе всех трех приложений лежит компонент Job. Код так же доступен <a href="https://github.com/AgentCoop/go-work-tcpbalancer" rel="noopener noreferrer nofollow">в репозитории</a> на Github.</p></li>
 </ol>
 <p>В целом сам шаблон Job - это аналог хорошо известного <a href="Command%20pattern%20https://en.wikipedia.org/wiki/Command_pattern" rel="noopener noreferrer nofollow">Command pattern</a>, но с прицелом на параллельное выполнение. В той же статье есть конкретный пример его использования и для нашего случая:</p>
 <p><em>Parallel Processing Where the commands are written as tasks to a shared resource and executed by many threads in parallel (possibly on remote machines; this variant is often referred to as the Master/Worker pattern)</em></p>
 <p>Выполнение задач зависит друг от друга, если одна задача прерывает свое выполнение из-за ошибки — все остальные задачи останавливаются тоже. Все это, безусловно, можно реализовать с помощью <em>context.Context</em>, но реализация на более высоком уровне позволяет избавиться от рутинных действий, связанных с организацией параллельного выполнения задач и сконцентрироваться на реализации самой бизнес логики. Ну а сами ошибки очень легко отлавливать вызовами специальных методов вроде <code>task.Assert</code> заменяя ими более емкие конструкции <code>if err != nil { panic(err) }.</code></p>
 <p>Задачи разделяют данные и оркестрируют свое выполнение с помощью так называемой ping/pong синхронизации. Я приведу здесь лишь небольшой кускок кода, чтобы дать общее представление — полностью библиотека доступна в репозитории на Github <a href="https://github.com/AgentCoop/go-work" rel="noopener noreferrer nofollow">по ссылке</a>.</p>
 <pre><code class="go">// Saves resized image to the output dir
func (s *ImageResizer) SaveResizedImageTask(j job.Job) (job.Init, job.Run, job.Finalize) {
	// Do some initialization here
	init := func(t job.Task) {
		if _, err := os.Stat(s.inputDir); os.IsNotExist(err) {
			t.Assert(err)
		}
		if _, err := os.Stat(s.outputDir); os.IsNotExist(err) {
			err := os.Mkdir(s.outputDir, 755)
			t.Assert(err)
		}
	}
	run := func(task job.Task) {
		stream := j.GetValue().(netmanager.Stream)
		select {
		case finishedTask := &lt;- j.TaskDoneNotify(): // Wait for the scanner task to be done
			if finishedTask.GetIndex() == s.scanneridx {
				s.scandone = true
			}
			task.Tick()
		case frame := &lt;-stream.RecvDataFrame(): // Process response from the backend server
			task.AssertNotNil(frame)
			res := &amp;imgresize.Response{}
			err := frame.Decode(res)
			task.Assert(err)

			baseName := fmt.Sprintf("%s-%dx%d%s",
				res.OriginalName, res.ResizedWidth, res.ResizedHeight, res.Typ.ToFileExt())
			filename := s.outputDir + string(os.PathSeparator) + baseName
			if ! s.dryRun {
				ioutil.WriteFile(filename, res.ImgData, 0775)
			}

			j.Log(1) &lt;- fmt.Sprintf("file %s has been saved", filename)
			stream.RecvDataFrameSync() // Tell netmanager.ReadTask that we are done processing the frame
			s.recvx++
			task.Tick()
		default:
			switch {
			case s.scandone &amp;&amp; s.recvx == s.sentx: // Check if all found images were processed
				task.FinishJob()
			default:
				task.Idle() // Do nothing
			}
		}
	}
	return init, run, nil
}</code></pre>
 <p></p>
 <p>Это одна из задач клиента, которая обрабатывает приходящий ответ от сервера и сохраняет полученное изображение. Задача оркестирует свое выполнение — используя вышеупомянутую технику ping/pong синхронизации - с задачей, которая занимается файловым сканированием. Также она определяет, когда пришел последний ответ от сервера и когда нужно завершить выполнение всей работы (Job).</p>
 <p>Насколько это решение over-engineered и насколько его использование вместо context.Context оправдано - пусть это решает читатель, я своё мнение выразил в виде сарказма на изображении выше.</p>
 <p>Всем хороших выходных и да прибудет с нами сила пэхэпе в мире сусликов.</p>
</div>', '2021-01-16 00:47:00', 'Job — шаблон проектирования для новичков и опытных Go программистов', 38, null, 5),
        (26, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/getpro/habr/post_images/4a8/74f/fa1/4a874ffa14f0c858aac2ded9f3d04da4.jpg">
 <br> 
 <br> <a href="https://rocketbank.ru/" rel="nofollow noopener noreferrer">«Рокетбанк»</a> опубликовал на своей странице ВК <a href="https://vk.com/wall-54384231_252771" rel="nofollow noopener noreferrer">прощальное сообщение</a>, в котором подводит итоги своей восьмилетней деятельности и окончательно прощается с клиентами: «Всё началось в 2013-м с идеи сделать банк с человеческим лицом. А дальше вы знаете: служба поддержки, которая сразу полюбилась клиентам, удобное приложение с огромным количеством фич и уникальных продуктов, веб-банк, собственный мерч, разработка игр, самые живые соцсети во всём интернете и самые преданные клиенты», — вспоминают они.
 <br> <a name="habracut"></a>
 <br> 
 <blockquote>
  «Мы разыграли тысячи пар Рокетносков, футболок из Хипстериады, сотни Рокетпледов, десятки айфонов, макбуков, приставок, поездок на фестивали и кучу других призов. Была Тесла. И даже спутник. Это было классное время, полное любви, творчества и безумия. 
  <br> 
  <br> Были взлёты и падения. А потом опять взлёты. И падения… И снова взлёты! Ну, вы поняли.
  <br> ⠀
  <br> Мы росли и старались не потерять главное — персональный подход к клиенту. Заботились о вас, всегда помогали выбрать кино или сериал, если стало грустно пятничным вечером. Смотрели фотки ваших питомцев и умилялись всем офисом. Скидывали мемы и даже отвечали на банковские вопросы. Мы делали всё и немножко больше.
  <br> ⠀
  <br> И вот, мы закрываемся. Теперь окончательно.
  <br> ⠀
  <br> Спасибо, что поддерживали, верили, вдохновляли и оставались с нами до последнего. Вы — лучшие в мире клиенты. Будем скучать!»
 </blockquote>
 <br> «Рокетбанк» основали в 2013 году четыре молодых серийных предпринимателя: Виктор Лысенко, Олег Козырев, Алексей Колесников и Михаил Провизион. На тот момент все операции с деньгами клиентов проводились на инфраструктуре партнёрского банка «Интеркоммерц». После отзыва у него лицензии в 2016 году сервис был куплен банком «ФК Открытие» вместе с «Точкой», бывшим Банком-24 для малого и среднего бизнеса. Все четыре основателя <a href="https://secretmag.ru/cases/interview/viktor-lysenko-roketbank.htm" rel="nofollow noopener noreferrer">продали свои доли</a> ещё до перехода под крышу «Открытия».
 <br> 
 <br> В свою очередь, «Открытие» в августе 2017-го подвергся процедуре санации (финансового оздоровления) Центробанком. В 2017 году банк был продан компании Qiwi. После этого было запущено новое приложение с хранилищем документов и началась работа с самозанятыми. 
 <br> 
 <br> В последние годы банк работал под девизом «Простой банк для самозанятых». Сервис автоматизации работы самозанятых в банке <a href="https://vc.ru/qiwi/156186-roketbank-chto-proishodit-s-prostym-bankom-dlya-samozanyatyh-i-pochemu-v-qiwi-vzyali-kurs-na-b2b2c" rel="nofollow noopener noreferrer">считали</a> «важнейшей и наиболее многообещающей инновацией».
 <br> 
 <br> После нескольких лет убытков в августе 2019 года Qiwi было принято решение о продаже. Но покупателя не нашлось, хотя Олег Тиньков <a href="https://habr.com/ru/news/t/294808/">предлагал за него 1 рубль</a>.
 <br> 
 <br> Олег Тиньков <a href="https://habr.com/ru/news/t/493916/">ранее критиковал</a> нежизнеспособную бизнес-модель «Рокетбанка»: «Для меня они как дети малые, я им помогаю», — говорил он.
 <br> 
 <br> RIP
 <br> 
 <br> P. S. Основатель банка «Тинькофф» <a href="https://www.instagram.com/p/CKMet0xpjJI/?igshid=limhgz6jnoye" rel="nofollow noopener noreferrer">прокомментировал</a> прощальный пост «Рокетбанка» в Instagram: «Облизывать клиента и постить мемы на конкурентов&nbsp;— это ещё не бизнес. Надеюсь, вы многому научились и с „Кухней“ будет уже бизнес, а не смузи… То, что они банкроты, я знал четыре года назад. Я тут пожелал удачи „Кухне на районе“, помянул „Рокет“ и пригласил всех клиентов к нам».
</div>', '2021-01-19 07:40:00', '«Рокетбанк» закрылся окончательно', 21, null, 5),
        (27, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Роскомнадзор <a href="https://rkn.gov.ru/news/rsoc/news73290.htm" rel="nofollow noopener noreferrer">направил письмо</a> руководству компании Google с требованием восстановить доступ к информации российского издания Politrussia на YouTube. 
 <br> 
 <br> Возмущение регулятора вызвал тот факт, что YouTube удалил видеоролик главного редактора Politrussia Руслана Осташко, размещённый 17.01.2021 на официальном канале издания. 
 <br> 
 <br> Роскомнадзор требует немедленно восстановить видеоролик.
 <br> <a name="habracut"></a>
 <br> «Видеоролик посвящён анализу общественно-политической обстановки в мире и не содержит запрещённой информации. Оснований для удаления нет,&nbsp;— сказано в официальном пресс-релизе Роскомнадзора.&nbsp;— Данные действия администрации YouTube являются недопустимым ограничением прав граждан на доступ к материалам российского СМИ на территории России». 
 <br> 
 <br> У PolitRussia 785&nbsp;тыс. подписчиков на YouTube, это видеоканал одноимённого веб-журнала: «Журнал PolitRussia.com представляет собой продукт коллективного творчества, где размещаются аналитические материалы различных авторов, имеющих разные политические взгляды и профессии»,&nbsp;— сказано в описании. 
 <br> 
 <br> В последнее время в российских СМИ нагнетается напряжение по поводу цензуры, которую проводят американские техногиганты, выступающие в роли привратников Интернета. Например, в газете «Известия» недавно вышла алармистская статья <a href="https://iz.ru/1112172/roman-kildiushkin/zaoblachnaia-ugroza-amazon-mozhet-zablokirovat-tysiachi-servisov-v-rossii" rel="nofollow noopener noreferrer">«Заоблачная угроза: Amazon может заблокировать тысячи сервисов в России»</a>, написанная по следам блокировка Parler в AWS. 
 <br> 
 <br> Это не первый случай ограничения российской политической информации на YouTube. В ноябре 2020 года Роскомнадзор направил компании Google письмо, в котором потребовал отменить ограничения, введённые против канала «Соловьёв LIVE»: «Как стало известно, с октября текущего года видеоматериалы канала не попадают в раздел «В тренде» YouTube, хотя ранее это происходило регулярно. Такую ситуацию можно расценить как попытку администрации YouTube ограничить распространение материалов популярного российского автора, воспрепятствовать росту его аудитории»,&nbsp;— сказано в сообщении. Сам Соловьёв <a href="https://tvrain.ru/news/roskomnadzor_potreboval_ot_google_vernut_video_vladimira_soloveva_v_trendy-519561/" rel="nofollow noopener noreferrer">пожаловался</a> на своём канале, что его видео не попадают в раздел «В тренде», а подписчики не получают уведомления о новых роликах. 
 <br> 
 <br> 30 декабря 2020 года Владимир Путин <a href="https://habr.com/ru/news/t/535698/">подписал законы</a> о борьбе с цензурой российских СМИ на зарубежных ресурсах и с клеветой в интернете. Теперь Роскомнадзор имеет право блокировать зарубежные сайты, которые «ограничивают значимую информацию на территории России», а также за «дискриминацию в отношении материалов российских средств массовой информации». Инициировать блокировку должна Генпрокуратура по согласованию с Министерством иностранных дел. 
 <br> 
 <br> Платформы, нарушающие закон, будут вносить в специальный список сайтов, которые «причастны к нарушениям основополагающих прав и свобод человека, прав и свобод граждан РФ».
</div>', '2021-01-20 08:14:00', 'Роскомнадзор потребовал от YouTube вернуть удалённый ролик', 80, null, 3),
        (28, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/64b/3d3/2f4/64b3d32f48f75dd34c653109a5a0ecb8" width="1176" height="780">
  <figcaption></figcaption>
 </figure>
 <p><em>На Хабре уже было 244 статьи о карьере, тысячи комментариев о плохих собеседованиях разработчиков и множество недовольных программистов всех сортов и расцветок. Не то что бы это был необходимый минимум для успешного найма, но когда начал давать тестовые задания, становится сложно остановиться.</em></p>
 <p>Верстальщик — такой человек, который хорошо разбирается в HTML и CSS и немного знает JavaScript. Ну то есть понимает, как в целом всё работает, но сильно не погружается. При этом бывает непросто выбрать хорошего верстальщика, потому что всех учат по-разному.</p>
 <p>Чтобы решить эту проблему, собираем в одном месте опыт десятков собеседований с верстальщиками. Вместе с Дашей Владыко из фронтенд-аутсорса «Лига А.» рассказываем, на что смотреть в тестовом задании джунов и мидлов, и как отличить хороший результат от плохого. Плюс несколько практических советов — например, как выбирать плагины.</p>
 <h3>На что смотреть в целом</h3>
 <p><strong>Соответствует ли результат ТЗ?</strong> Всё работает? Всё заверстано? Джуну прощаются мелкие недочёты, но он хотя бы показывает что хотел сделать как можно лучше, просто пока не хватает практики. Если сделано спустя рукава, то это тоже видно.</p>
 <hr>
 <p><strong>Пример: сверстать «аккордеон»</strong></p>
 <p>Соответствие ТЗ: аккордеон завёрстан по макету, нет ошибок в HTML. JavaScript написан без onclick, код для аккордеона можно переиспользовать на других страницах и блоках.</p>
 <p>Если аккордеон завёрстан, но при нажатии на кнопку ничего не происходит, то не работает. Для мидла это минус, джуну можно простить, если к внешнему виду и семантике не подкопаться. Джуну также прощается, если JavaScript есть, но в семантике есть ошибки или результат немного не соответствует макету (другие отступы, например, или забыл про уголки).</p>
 <hr>
 <p><strong>Предусмотрено ли переполнение?</strong> Сильно ли едет макет при добавлении или удалении элементов? Можно ли ввести 4 строки, если в дизайне нарисовано 2? Предусмотрены ли максимальные и минимальные размеры?</p>
 <p>Мидлы обычно предусматривают ситуации, когда сайт нуждается в доработке или клиент попросит что-либо поменять. При продуманном переполнении верстка не едет.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2c9/b70/82b/2c9b7082b9e49e88106a5a5c139cb449" width="926" height="292">
  <figcaption></figcaption>
 </figure>
 <p><em>Столько плюсов каждому по нраву</em></p>
 <p><strong>Как оформлена сборка?</strong> Есть readme? Запускаются таски из gulp? Такие мелочи показывают, есть ли у человека опыт в разработке. Обычно, когда сверстаешь пару проектов, учишься наводить порядок в файлах и умеешь работать с таск-менеджерами. В идеале нужна чистая сборка: всё разложено по папкам, комментарии убраны, лишних файлов нет.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b92/536/186/b92536186bba55008425eb4990a4e437" width="1600" height="820">
  <figcaption></figcaption>
 </figure>
 <p><strong>Выделяются ли компоненты?</strong> Проект у мидла — «конструктор», где блоки можно менять местами и ничего не ломается.</p>
 <p><strong>Как подключаются скрипты и стили?</strong> Есть ли инлайн? Есть ли onclick="" или style=""? Джуну какие-то вещи простить можно, мидлу нет.</p>
 <p><strong>Можно ли скачать из гита?</strong> Не очень хорошо, когда ссылка на папку, а тестовое лежит в архиве. Я хочу скачать проект, посмотреть, как работает сборка, как выглядит готовая страница, а не только увидеть код.</p>
 <p><strong>Как реализованы ховеры и адаптив? </strong>Это не обязательно, но будет плюсом, показывает опыт и аккуратность. Сразу видно, как человек импровизирует, так как в макете не рисуются разные состояния кнопок. Хорошая импровизация показывает, что человек может заморочиться и сделать «вау» потому что ему хочется так сделать, а не потому что так сказал босс.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/eee/d63/f92/eeed63f92f27250f8ef347b58688dd3d.gif" width="1200" height="340">
  <figcaption></figcaption>
 </figure>
 <p><em>Ховеры на сайте «Лиги А.»</em></p>
 <h3>HTML</h3>
 <p><strong>Что с семантикой?</strong> Есть ли header/main/footer? Правильно ли построена <a href="https://htmlacademy.ru/skills/semantic-markup/payment?utm_source=habr&amp;utm_medium=special&amp;utm_campaign=test-for-verst-210121"><u>разметка по макету</u></a>?</p>
 <p><strong>Правильная ли вложенность?</strong> Если лишние обёртки? Здесь сразу видно опыт — у новичков бывает много лишних дивов.</p>
 <p><strong>Как вставлены картинки</strong>? Предусмотрены ли webp и ретина?</p>
 <p><strong>Как оформлены векторные элементы?</strong> Вектор это точно SVG, а не PNG? В тестовом задании мы обращаем внимание на сжатие SVG (вручную или через таск-менеджеры) и как элементы вставлены в разметку (лучше всего использовать спрайты для иконок, а не псевдоэлементы или img).</p>
 <p>Вот что может случиться, если не подумать о графике заранее:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d31/d94/8b0/d31d948b03a7938c16bd3076a4222a28" width="718" height="576">
  <figcaption></figcaption>
 </figure>
 <p>Внеклассное чтение:</p>
 <ul>
  <li><p><a href="https://htmlacademy.ru/blog/education/all/image-formats?utm_source=habr&amp;utm_medium=special&amp;utm_campaign=test-for-verst-210121"><u>Форматы изображений для веба</u></a></p></li>
  <li><p><a href="https://htmlacademy.ru/blog/boost/frontend/short-4?utm_source=habr&amp;utm_medium=special&amp;utm_campaign=test-for-verst-210121"><u>Как правильно вставлять SVG&nbsp;</u></a></p></li>
 </ul>
 <p><strong>Как свёрстана форма? </strong>Есть ли ховеры и фокусы? Какая кликабельность у элементов?&nbsp;</p>
 <ul>
  <li><p><a href="https://tproger.ru/articles/clickable-area/"><u>Как правильно настроить размер области клика</u></a></p></li>
 </ul>
 <p><strong>Что сделано для обеспечения доступности?</strong> Это не обязательно в тестовом задании, но будет плюсом и хорошим знаком.&nbsp;</p>
 <h3>CSS</h3>
 <p><strong>«Прибит» ли футер к низу экрана?</strong> Очень практическая штука, которая показывает опыт кандидата.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9e1/f4a/a80/9e1f4aa807d2193dfb9683da9e78c499" alt="Вот здесь не прибит, например. Но мы всё равно вас любим" title="Вот здесь не прибит, например. Но мы всё равно вас любим" width="904" height="845">
  <figcaption>
   Вот здесь не прибит, например. Но мы всё равно вас любим
  </figcaption>
 </figure>
 <p><strong>Как написана сетка?</strong> <strong>Используются гриды или флексы? </strong>Если сетка кривая, то или человеку всё равно, или он ещё джун.</p>
 <p><strong>Как подключаются шрифты?</strong> Если как-то странно, например, в каждом font-face в качестве шрифтового семейства прописаны montserrat-thin, montserrat-bold вместо montserrat и указания жирности отдельным свойством, то это джун. Используются ли новые свойства вроде font-display или unicode-range? Они не обязательны, но если есть и они действительно там нужны, это плюс.</p>
 <ul>
  <li><p><a href="https://htmlacademy.ru/blog/boost/frontend/fonts-loading?utm_source=habr&amp;utm_medium=special&amp;utm_campaign=test-for-verst-210121"><u>Как подключить и оптимизировать нестандартные шрифты</u></a></p></li>
 </ul>
 <p><strong>Используются ли препроцессоры?</strong> Это необязательно в тестовом задании, но упрощает разработку.</p>
 <h3>В JavaScript-коде</h3>
 <p><em>Эти требования, в основном, для мидлов. Джуну достаточно знаний HTML, CSS и аккуратной сборки проекта.</em></p>
 <p><strong>Есть ли хардкод? Код можно переиспользовать? Его можно прочитать? </strong>Проверьте, нет ли «лапши» и переменных типа a или b123. Простые алгоритмы, а не когда функция вызывает функцию функции. Не должно быть названий классов, которые отвечают за стили.</p>
 <pre><code>let a = 1
let b = 2

setTimeout(() =&gt; {
&nbsp;&nbsp;&nbsp;&nbsp;[a, b] = [b, a]
&nbsp;&nbsp;&nbsp;&nbsp;console.log(a) // 2
&nbsp;&nbsp;&nbsp;&nbsp;console.log(b) // 1
}, 0)</code></pre>
 <p><em>Странный код для обмена значений двух переменных</em></p>
 <p><strong>Какая версия языка используется?</strong> <strong>Есть ли единообразие?</strong> Есть ли такое, что весь проект на ES5, а потом блок на ES6? Обычно это показатель того, что какой-то блока кода писал кто-то другой.</p>
 <p>Пример смешивания:</p>
 <p></p>
 <p><strong>Как разбит код?</strong> Это один огромный модуль (плохо) или есть деление на папки и скрипты, где 1 скрипт = 1 задача (хорошо)? Также не должно быть слишком много файлов, а вызов и обработка функции происходит в одном файле, а не в нескольких.</p>
 <p><strong>Используются ли плагины? </strong>Если да, то какие? Их много? Использование готового решения это неплохо. Сроки могут поджимать, а решение нужно прямо сейчас. Если плагин используется, то ожидается, что это будет легковесный скрипт, который недавно обновлялся, у которого хорошая документация. Если это jQuery или библиотеки на десятки мегабайтов, то это уже ерунда, а не решение.</p>
 <details class="spoiler">
  <summary>Spoiler</summary>
  <div class="spoiler__content">
   <pre><code>const mailRegEx = /[a-zA-Z0-9]{1}([a-zA-Z0-9-.]{1,})?@[a-zA-Z]{1}([a-zA-Z0-9.]{1,})?[a-zA-Z0-9]{1}.[a-zA-Z]{2,}/;
const PHONEMINLENGTH = 18;

const showErrorIcon = (sth) =&gt; {
&nbsp;const input = sth.target || sth;
&nbsp;const errorIcon = input.closest(''.custom-input'').querySelector(''.custom-inputerror'');
&nbsp;if (!errorIcon.classList.contains(''custom-inputerror--shown'')) {
&nbsp;&nbsp;&nbsp;errorIcon.classList.add(''custom-input_error--shown'');
&nbsp;}
};

function IsNumeric(sText) {
&nbsp;&nbsp;&nbsp;var ValidChars = "0123456789.";
&nbsp;&nbsp;&nbsp;var IsNumber = true;
&nbsp;&nbsp;&nbsp;var Char;
&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; sText.length &amp;&amp; IsNumber == true; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Char = sText.charAt(i);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ValidChars.indexOf(Char) == -1) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsNumber = false;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;return IsNumber;
}</code></pre>
   <p></p>
  </div>
 </details>
 <hr>
 <p><strong>Как выбрать нормальный плагин.</strong> Например, мы ищем слайдер и гугл выдал несколько вариантов:</p>
 <ul>
  <li><p>https://kenwheeler.github.io/slick/</p></li>
  <li><p>https://glidejs.com/</p></li>
  <li><p>https://swiperjs.com/</p></li>
 </ul>
 <p>Slick требует jQuery, у нас в проекте он не используется. Вычеркиваем.</p>
 <p>Смотрим документацию. У glide она подробная, у swiper тоже. Если бы её не было, мы бы вычеркнули один из пунктов.</p>
 <p>Переходим на гитхаб, посмотрим, как давно обновляли репозиторий.</p>
 <ul>
  <li><p>https://github.com/nolimits4web/swiper - 11 минут назад</p></li>
  <li><p>https://github.com/glidejs/glide - 23 дня назад</p></li>
 </ul>
 <p>Оба варианты хороши. Если бы последние обновления были 2-3 года назад, мы бы вычеркнули один из пунктов.</p>
 <p>Далее смотрим на вес. glide&nbsp; ~23kb, swiper ~140kb — значит, одно очко за glide.</p>
 <p><strong>Зачем нам плагин?</strong> У нас большой сайт с кучей анимаций, где нужно сделать слайдер в слайдере с 3D-эффектом перехода? Берем swiper, он как швейцарский нож, в котором есть почти всё. У нас одна страница с простыми переходами? Берём glide, в нём ничего лишнего.</p>
 <hr>
 <h3>Пример тестового задания</h3>
 <p>Сверстать макет (тут у каждой компании будет своя ссылка на фигму).</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/36c/b7b/9bc/36cb7b9bc8de0be4904af8506a39c1bc" alt="Учебный проект «Барбершоп» из курса «HTML и CSS. Профессиональная вёрстка сайтов»" title="Учебный проект «Барбершоп» из курса «HTML и CSS. Профессиональная вёрстка сайтов»" width="1215" height="842">
  <figcaption>
   Учебный проект «Барбершоп» из курса «HTML и CSS. Профессиональная вёрстка сайтов»
  </figcaption>
 </figure>
 <p>Требования:</p>
 <ul>
  <li><p>Шапка всегда закреплена, у неё белый фон;</p></li>
  <li><p>Фильтр должен сортировать карточки;</p></li>
  <li><p>Кнопка «сбросить фильтр» показывается после того, как выбрали что-нибудь;</p></li>
  <li><p>Адаптив на своё усмотрение.</p></li>
  <li><p>Нельзя использовать jQuery;</p></li>
  <li><p>Возможно использование плагинов JavaScript;</p></li>
  <li><p>Использование Gulp или Webpack для сборки будет преимуществом.</p></li>
 </ul>
 <p>С таким заданием будет гораздо проще искать фронтендера — хоть джуна, хоть мидла.</p>
 <p>Вот и всё. Расскажите в комментариях своё отношение к тестовым заданиям, и что бы вы добавили или, наоборот, убрали из нашего списка.</p>
</div>', '2021-01-21 10:17:00', 'Тестовое задание для фронтендера', 28, null, 9),
        (29, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Начну с того, что я не антипрививочник ни разу, скорее наоборот. Но вакцина вакцине рознь, особенно сейчас и от известного&nbsp;вируса. Итак, что же мы имеем на сегодня?&nbsp;</p>
 <p>Гамалеевский <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D1%83%D1%82%D0%BD%D0%B8%D0%BA_V_(%D0%B2%D0%B0%D0%BA%D1%86%D0%B8%D0%BD%D0%B0)" rel="noopener noreferrer nofollow"><em>Спутник V</em></a>. Нашумевшая и очень современная вакцина, впереди только генная терапия в чистом виде. Неудивительно, что именно сюда вложили столько сил, времени и средств<em>.&nbsp;</em>Она же пока еще единственно возможная в нашей стране. Ее очевидные плюсы: максимальный иммунный ответ (помимо антител имеем клеточный иммунитет) при минимальных побочных эффектах. Но есть нюанс, про который почему-то если и говорят, то очень-очень мало и конечно же не в СМИ, а в специализированных <a href="https://www.the-scientist.com/news-opinion/vector-based-vaccines-come-to-the-fore-in-the-covid-19-pandemic-67915/amp" rel="noopener noreferrer nofollow">медицинских пабликах. </a>Сейчас объясню, о чем речь.</p>
 <p> Данная вакцина представляет собой генетически модифицированный аденовирус, вернее два обезвреженных аденовируса (5-го и 26-го серотипов), которые вводятся в организм с промежутком в 3 недели. В геном каждого встроен ген спайк-белка ("шипа") коронавируса. По сути, это&nbsp;«машины», задачами которых является доставка важного «пассажира» по назначению. А дальше все идёт так, как заложено природой: аденовирус доставляет ген коронавируса в клетки, распаковывается там и начинает производить белки как «пассажира», так и свои. Кусочки этих белков выставляет заражённая клетка, обучая тем самым т-лимфоциты. После разрушения «клетки-фабрики», вирусные белки (именно белки, а не готовые заражать новые клетки вирионы, как при болезни) попадают в кровь, тем самым стимулируя производство антител. Заболеть невозможно, иммунитет формируется, и вроде бы все здорово. Но побочным эффектом этой вакцины является развитие иммунного ответа на сами аденовирусные компоненты вектора. В результате повторного введения, «машина с пассажиром» просто не успеет доехать до клетки, а будет сразу уничтожена антителами, которые образуются в результате предыдущего «знакомства». Получается, что <em>Спутник V</em> можно использовать только один раз. И это чревато даже не столько тем, что вакциной больше нельзя будет воспользоваться по назначению - напряженность иммунитета к коронавирусу все равно никому не известна, а случаи&nbsp;повторных заражений вроде бы есть, но мало<em>.&nbsp;</em>Пугает пожизненное ограничение на любую потенциально возможную аденовекторную генную терапию, в том числе и на лечение онкологии, которая может понадобиться в будущем. Все это сейчас активно развивается, а после такого «масштабного тестирования», дело пойдёт ещё быстрее. Но опять же, терапия эта может пригодиться, а может быть и нет, а иммунитет к вирусу нужен уже сегодня. Поэтому, здесь каждый выбирает для себя, что ему важнее. Вакцина получилась вполне нормальная, для пожилых - самое то. А вот на месте молодых (у них ведь есть все шансы в будущем&nbsp;&nbsp;воспользоваться генной терапией), я бы призадумалась. </p>
 <p>Слышала про разработку версии <em>«</em><a href="https://www.rbc.ru/society/11/01/2021/5ffc15669a794777cf0cbb1d" rel="noopener noreferrer nofollow"><em>Спутник-Лайт</em></a><em>»</em>, для тех, кто бережёт (<s>фигуру</s>) иммунитет. Это будет однокомпонентная вакцина, сделаная на основании только одного серотипа. Этот вариант приятнее, но его выпуск планируется не раньше декабря 2021 года.&nbsp;</p>
 <p>Еще две российские вакцины: <em>«</em><a href="https://ru.wikipedia.org/wiki/%D0%AD%D0%BF%D0%B8%D0%92%D0%B0%D0%BA%D0%9A%D0%BE%D1%80%D0%BE%D0%BD%D0%B0" rel="noopener noreferrer nofollow"><em>ЭпиВакКорона</em></a><em>»</em>&nbsp;центра «Вектор» (произведена на основе вирусных белков) и цельновирионная центра Чумакова (изготовлена на основе цельного вируса) уже на подходе. Обе они сделаны по старинке. Есть мнение, что именно по этой причине они обречены на неуспех, ну и еще потому, что не активируют т-клеточный иммунитет, что нынче не круто. Теперь немного про каждую, так как много про них все равно не неизвестно. Видимо, пиарчик у них так себе, а может быть это просто военная тайна. </p>
 <p><a href="https://yandex.ru/turbo/endometriy.com/s/koronavirus/vaktsina-instituta-chumakova" rel="noopener noreferrer nofollow">Чумаковская цельновирионная вакцина</a> -&nbsp;это классика, на таких человечество выросло. Здесь использован цельный вирус, формирующий&nbsp;надежный иммунитет, так как дает полный набор антигенов. Но вирус дохлый, поэтому иммунный ответ будет только антительный, зато мощный, и реакции сильные. Жестковато, но в период эпидемии подойдет, особенно для здоровых, отчаянных и смелых. Из всего богатства выбора, я бы предпочла именно ее из-за понятного механизма формирования иммунитета. Но она пока только в уме. У неё еще названия-то нет. Зато масштабное производство планируют уже в марте. Поживём - увидим.&nbsp;</p>
 <p>Третья российская вакцина - <em>«ЭпиВакКорона»</em> центра «Вектор». Она не содержит биологический компонент вируса от слова совсем, а только его&nbsp;синтезированные белки, дабы вообще не заставлять наши клетки работать и напрягаться. Вакцина мягкая, без побочек, но и без хорошей иммунногенности. Не придумали пока пептидных вакцин, вырабатывающих длительный, стойкий иммунитет. Поэтому с целью усиления иммунного ответа в них используют адьюванты. Здесь - <a href="https://medalternativa.info/entry/adyuvant-alyuminiya/" rel="noopener noreferrer nofollow">гидроксид алюминия. </a>Хорошо это или плохо - не знаю, но считается, чем меньше «ингредиентов» в вакцине, тем лучше. Зато вакциной «Вектора», в отличие от <em>Спутника V</em>, можно будет прививаться бесконечно много. А еще ее протестировали на пожилых (65+ ) и детях (14-17), а еще на людях с хроническими заболеваниями. Пытаются поделить пирог. По поводу детей - согласна, а вот относительно пожилых - не уверена.&nbsp;Им сейчас крайне необходима НАДЕЖНАЯ защита. Вакцина должна была поступить в оборот в начале года. Интересно, где-нибудь уже есть? </p>
 <p>Ну и основные зарубежные вакцины, куда же без них. На основе аденовекторных технологий произведены:&nbsp;Китайская<strong> </strong><a href="https://ru.wikipedia.org/wiki/CanSino_Biologics" rel="noopener noreferrer nofollow"><em>CanSino Biological. </em></a>Изготовлена на 5-ом серотипе аденовируса, который значительно распространён в популяции. Есть мнение, что 30% людей уже имеют к нему иммунитет, поэтому прививка для них будет не очень-то эффективной.&nbsp;Американская&nbsp;&nbsp;<a href="https://en.m.wikipedia.org/wiki/Ad26.COV2.S" rel="noopener noreferrer nofollow"><em>Johnson&amp;Johnson</em><strong>&nbsp;</strong> - на основе 26 серотипа.</a> Этот штамм распространён меньше, но вероятность все равно есть. Поэтому в Спутнике взяли сразу обе платформы, чтобы наверняка! Британско-шведская вакцина&nbsp;<a href="https://en.wikipedia.org/wiki/AstraZeneca" rel="noopener noreferrer nofollow"><em>AstraZeneca/oxford.</em> </a>На настоящий момент - самая заказываемая в мире. Уже заказано около 3 млрд доз. Она произведена на основе аденовируса шимпанзе. Это конечно дает 100% гарантию того, что иммунитет человека до этого не сталкивался с подобным вирусом и после не столкнётся, но зоовирус в случае мутации, может дать в организме человека и неожиданные результаты, что само по себе как-то тревожно.</p>
 <p>На основе <a href="http://www.bionet.nsc.ru/vogis/download/16_Iljichev.pdf" rel="noopener noreferrer nofollow">мРНК технологий</a> сделаны два мировых форварда: <a href="https://www.pfizer.com/products/product-detail/pfizer-biontech-covid-19-vaccine" rel="noopener noreferrer nofollow"><em>Pfizer BioNTech</em></a> и <a href="https://www.modernatx.com/modernas-work-potential-vaccine-against-covid-19" rel="noopener noreferrer nofollow"><em>Moderna</em></a>. Это абсолютно новое направление, которое на данный момент является просто вершиной фармакологии. До этого еще ни одной мРНК вакцины не существовало. Технология чем-то похожа на векторную, но другая. Здесь нет стороннего вирусного компонента, а в качестве «машины» используется искусственно созданная липидная наночастица, которая легко проникает через мембраны наших клеток, а «пассажир» - тот же ген или мРНК, кодирующая spike-белок коронавируса. При этом клетки в которые попадает мРНК не разрушаются, а белок просто спокойно выходит наружу, формируя хороший т-клеточный и антительный&nbsp;иммунитет. Вроде бы все хорошо, но опять же есть нюансы.&nbsp;Во-первых - это <a href="https://pharmvestnik.ru/content/news/Polietilenglikol-v-vakcine-Pfizer-mog-vyzvat-allergiu-u-pacientov.html" rel="noopener noreferrer nofollow">полиэтиленгликоль</a>, который используют для стабилизации мРНК наряду с низкими температурами (до -70), который сам по себе является алергеном и может вызвать сильнейшие реакции, вплоть до анафилактического шока. А во-вторых - это самые неожиданные места назначения нашего «пассажира». И если природной <a href="https://en.m.wikipedia.org/wiki/Adenoviridae#cite_ref-47" rel="noopener noreferrer nofollow">мишенью&nbsp;аденовируса </a>являются конкретные клетки, часто клетки верхних дыхательных путей, куда&nbsp;доставляется ген коронавируса в аденовекторных вакцинах, то&nbsp;куда доставят&nbsp;мРНК коронавируса липидные наночастицы - одному Богу известно. А это могут быть совершенно разные места, где им тоже придётся работать: сосуды, суставы, нервы и пр. Уже сейчас известны побочные явления в виде различных аутоиммунных процессов, <a href="https://terrnews.com/exclusives/274987-izrailskij-vrach-dal-kommentarij-sluchaju-oslozhnenija-posle-vakciny-pfizer.html?utm_source=yxnews&amp;utm_medium=desktop" rel="noopener noreferrer nofollow">временных параличей</a> и пр. Далеко ходить не надо, весь интернет пестрит <a href="https://strana.ua/news/312017-pobochnye-effekty-pfizer-v-norvehii-umerli-23-cheloveka-v-hermanii-desjat.html" rel="noopener noreferrer nofollow">побочками от Pfizer.</a> Но вакцина при этом не снимается с использования. Ну и что с того, что немного походишь с перекошенным лицом? Это ведь не сравнимо с тяжелейшим течением ковида, правда? Зато и антитела к данной «машине» не вырабатываются, а только к «пассажиру». В общем, есть над чем поразмыслить.&nbsp;</p>
 <p>На основе рекомбинантных белков сделана американская вакцина <a href="https://www.novavax.com/" rel="noopener noreferrer nofollow"><em>Novavax</em></a>. Вакцина на втором месте в мире по количеству забронированных доз. Так в чем ее секрет? А в какой-то уникальной технологии «сборки» рекомбинантных белков в наночастицы, благодаря которым иммуногенность белка повышается, а еще в оригинальном <a href="https://www.novavax.com/our-unique-technology" rel="noopener noreferrer nofollow">адъюванте Matrix-M</a>. Ну и все пока на этом. &nbsp;&nbsp;</p>
 <p><a href="https://en.wikipedia.org/wiki/Sinovac_Biotech" rel="noopener noreferrer nofollow"><em>Sinоvac</em></a><em> </em>- ещё одна вакцина китайского производства. Она цельновирионная, чем обусловлена ее популярность. Обычные условия хранения и понятный механизм формирования иммунитета могли сделать ее доступной во многих странах. По результатам первых двух фаз испытаний считалась одной из перспективных, но на промежуточных результатах третьей фазы,&nbsp;вакцина показала <a href="https://coronavirus.tsn.ua/ru/effektivna-vsego-na-50-4-novye-dannye-o-kitayskoy-vakcine-ot-koronavirusa-kotoruyu-priobrela-ukraina-1704010.html" rel="noopener noreferrer nofollow">эффективность всего 50%.</a> Интересно, можно ли этому верить?</p>
 <p>Ну вот как-то так. Ясно одно, что в мире нет сейчас совершенной вакцины, но какое-то решение рано или поздно все равно принять придётся. В любом случае, желаю всем здоровья и крепкого иммунитета!&nbsp;&nbsp;</p>
</div>', '2021-01-22 12:12:00', 'Куда идти за иммунитетом?', 56, null, 5),
        (30, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>В марте этого года Oracle выпускает 16-ю версию Java, а уже осенью выйдет 17-я версия - следующая версия с долгосрочной поддержкой (LTS). Вряд ли за пол года появятся какие-то существенные нововведения, а потому уже сейчас можно взглянуть на то, с чем мы будем работать в ближайшие несколько лет. С момента выхода 11-й версии - текущей LTS версии Java, компанией Oracle было внедрено большое количество новых функций - от новых синтаксических конструкций до новых алгоритмов сборки мусора. В данной статье рассмотрим новые синтаксические возможности языка, появившиеся в версиях 12 - 16.</p>
 <h2>Записи (Records). JEP 395</h2>
 <p>Традиционные классы в Java довольно перегружены деталями, особенно если речь идет о POJO классах, являющихся простыми неизменяемыми (immutable) агрегатами данных. Такой класс, оформленный по правилам, содержит большое количество не очень ценного и повторяющегося кода, такого как конструкторы, методы чтения полей, методы equals(), hashCode() и toString(). Например, взгляните на класс Point, предназначенный для хранения координат на плоскости:</p>
 <pre><code class="java">class Point {

    private final int x;
    private final int y;

    Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    int x() { return x; }
    int y() { return y; }

    public boolean equals(Object o) {
        if (!(o instanceof Point)) return false;
        Point other = (Point) o;
        return other.x == x &amp;&amp; other.y == y;
    }

    public int hashCode() {
        return Objects.hash(x, y);
    }

    public String toString() {
        return String.format("Point[x=%d, y=%d]", x, y);
    }
}</code></pre>
 <p>Для того, чтобы создавать такие классы было проще и компактнее, был введен новый тип класса - записи. Объявление такого класса состоит из описания его состояния, а JVM затем сама генерирует API, соответсвующее его объявлению. Это значит, что записи жертвуют некоторой свободой декларирования - возможностью отделить API класса от его внутреннего представления, но являются более компактными.</p>
 <p>Объявление записи состоит из имени, опциональных параметров типа, заголовка и тела класса. Заголовок состоит из компонентов класса, которые являются переменными, формирующими его состояние, например:</p>
 <pre><code class="java">record Point(int x, int y) { }</code></pre>
 <p>Для записей многие стандартные вещи генерируются автоматически:</p>
 <ul>
  <li><p>Для каждого компонента из заголовка генерируется финальное приватное поле и метод чтения. Обратите внимание, что методы чтения именуются не стандартным для Java способом. Например, для атрибута x из класса Point метод чтения называется x(), а не getX().</p></li>
  <li><p>Публичный конструктор с сигнатурой, совпадающей с заголовком класса, который инициализирует каждое поле значением, переданным при создании объекта (канонический конструктор).</p></li>
  <li><p>Методы equals() и hashCode(), которые гарантируют, что 2 записи "равны", если они одного типа и имеют одинаковые значения соответствующих полей.</p></li>
  <li><p>Метод toString().</p></li>
 </ul>
 <p>Канонический конструктор можно определить явно, при этом список параметров конструктора должен быть идентичным заголовку записи, например:</p>
 <pre><code class="java">record Point(int x, int y) {

  Point(int x, int y) {
    if (x &lt; 0 || x &gt; 100 || y &lt; 0 || y &gt; 100) {
      throw new IllegalArgumentException("Point coordinates must be between 0 and 100");
    }
    this.x = x;
    this.y = y;
  }
}</code></pre>
 <p>Канонический конструктор может иметь компактную форму - в этом случае у него не должно быть явных параметров. Параметры будут объявлены неявно, а в теле конструктора нельзя присваивать значения полям записи - они будут присвоены автоматически в самом конце. Компактная форма записи конструктора хорошо подходит для проверки или нормализации параметров без необходимости писать лишний код по инициализации полей. Например, эквивалентный предыдущему конструктор будет выглядеть так:</p>
 <pre><code class="java">record Point(int x, int y) {

  Point {
    if (x &lt; 0 || x &gt; 100 || y &lt; 0 || y &gt; 100) {
      throw new IllegalArgumentException("Point coordinates must be between 0 and 100");
    }
  }
}</code></pre>
 <p>На записи накладываются некоторые ограничения:</p>
 <ul>
  <li><p>Записи не могут наследоваться от других классов. Родительским классом для записи всегда является <strong>java.lang.Record</strong>. Это связано с тем, что иначе они имели бы унаследованное состояние, помимо состояния описанного в заголовке.</p></li>
  <li><p>Классы записей являются финальными и не могут быть абстрактными.</p></li>
  <li><p>Поля записей являются финальными.</p></li>
  <li><p>Нельзя добавлять поля и блоки инициализации экземпляра.</p></li>
  <li><p>Разрешается переопределять генерируемые методы, но тип возвращаемого значения должен в точности совпадать с типом значения генерируемого метода.</p></li>
  <li><p>Нельзя добавлять нативные методы.</p></li>
 </ul>
 <p>В остальном записи являются обычными классами:</p>
 <ul>
  <li><p>Записи могут быть верхнеуровневыми или вложенными, могут быть параметризованными.</p></li>
  <li><p>Записи могут иметь статические методы, поля и инициализаторы, а также методы экземпляра.</p></li>
  <li><p>Записи могут реализовывать интерфейсы.</p></li>
  <li><p>Записи могут иметь вложенные типы, в том числе и вложенные записи. Вложенные записи являются статическими по умолчанию, иначе они имели бы доступ к состоянию родительского объекта.</p></li>
  <li><p>Класс записи и компоненты его заголовка могут быть декорированы аннотациями. Аннотации компонентов затем переносятся на поля, методы и параметры конструктора в зависимости от типа аннотации. Аннотации типов на типах компонентов также переносятся в места использования этих типов.</p></li>
  <li><p>Объекты записей можно сериализовать и десериализовать, однако процесс сериaлизации/десериализации нельзя настраивать writeObject(), readObject(), readObjectNoData(), writeExternal(), readExternal().</p></li>
 </ul>
 <h3>Статические члены внутренних классов</h3>
 <p>Как известно внутренние классы в Java не могут иметь статических членов. Это значило бы, что внутренний класс не мог бы иметь записей. Это ограничение было ослаблено, проверил на следующем примере:</p>
 <pre><code class="java">public class Outer {

    class Inner {

        private String id;

        private static String idPrefix = "Inner_";

        Inner(String id) {
            this.id = idPrefix + id;
        }

        static class StaticClass {
        }

        record Point(int x, int y) {
        }
    }

    public static void main(String[] args) {
        Inner inner = new Outer().new Inner("1");
        System.out.println(inner.id);

        Inner.StaticClass staticClass = new Inner.StaticClass();
        System.out.println(staticClass);

        Inner.Point point = new Inner.Point(1, 2);
        System.out.println(point);
    }
}</code></pre>
 <pre><code class="bash">java  --enable-preview --source 16 Outer.java 
Inner_1
jdk16.Outer$Inner$StaticClass@6b67034
Point[x=1, y=2]</code></pre>
 <h2>Текстовые блоки. JEP 378</h2>
 <p>Традиционно, задавать в Java многострочный текст было не очень удобно:</p>
 <pre><code class="java">String html = "&lt;html&gt;\\n" +
              "    &lt;body&gt;\\n" +
              "        &lt;p&gt;Hello, world&lt;/p&gt;\\n" +
              "    &lt;/body&gt;\\n" +
              "&lt;/html&gt;\\n";</code></pre>
 <p>Теперь это можно сделать так:</p>
 <pre><code class="java">String html = """
              &lt;html&gt;
                  &lt;body&gt;
                      &lt;p&gt;Hello, world&lt;/p&gt;
                  &lt;/body&gt;
              &lt;/html&gt;
              """;</code></pre>
 <p>Намного лаконичнее. Есть возможность разбивать длинные строки на несколько строк для удобства восприятия. Для этого используется escape-последовательность <strong>\\&lt;line-terminator&gt;</strong>, например, такую строку:</p>
 <pre><code class="java">String literal = "Lorem ipsum dolor sit amet, consectetur adipiscing " +
                 "elit, sed do eiusmod tempor incididunt ut labore " +
                 "et dolore magna aliqua.";</code></pre>
 <p>можно представить в виде:</p>
 <pre><code class="java">String text = """
              Lorem ipsum dolor sit amet, consectetur adipiscing \\
              elit, sed do eiusmod tempor incididunt ut labore \\
              et dolore magna aliqua.\\
              """;</code></pre>
 <p>Также появилась новая escape-последовательность <strong>\\s</strong>, которая транслируется в единичный пробел (\\u0020). Поскольку escape-последовательности транслируются после удаления пробелов в начале и конце строки, её можно использовать как барьер, чтобы помешать удалению пробелов. Например, в примере ниже последовательность \\s используется, чтобы сделать каждую строку длиной ровно 6 символов:</p>
 <pre><code class="java">String colors = """
                red  \\s
                green\\s
                blue \\s
                """;</code></pre>
 <h2>Паттерны для instanceof (Pattern Matching for instanceof). JEP 394</h2>
 <p>Практически в каждой программе встречается код вида:</p>
 <pre><code class="java">if (obj instanceof String) {
    String s = (String) obj;
    ...
}</code></pre>
 <p>Проблема этого кода в том, что он излишне многословен. Понятно, что после проверки типа, мы захотим привести объект к нему. Почему бы не сделать это автоматически? Для упрощения этой процедуры и были введены паттерны в оператор instanceof:</p>
 <pre><code class="java">if (obj instanceof String s) {
  ...
}</code></pre>
 <p>Область видимости переменной s может быть как внутри блока if (как в примере выше), так и за его пределами, например:</p>
 <pre><code class="java">if (!(obj instanceof String s)) {
  throw new Exception();
}
System.out.println(s);</code></pre>
 <p>Переменную паттерна можно использовать и в выражении оператора if:</p>
 <pre><code class="java">if (obj instanceof String s &amp;&amp; s.length() &gt; 5) {
    System.out.println(s);
}</code></pre>
 <p>Однако такой пример приведет к ошибке компиляции:</p>
 <pre><code class="java">if (obj instanceof String s || s.length() &gt; 5) { // Error!
    ...
}</code></pre>
 <p>Переменные из паттерна могут затенять поля класса, следует быть внимательным при именовании и использовании переменных:</p>
 <pre><code class="java">class Example1 {
    String s;

    void test1(Object o) {
        if (o instanceof String s) {
            System.out.println(s);      // Field s is shadowed
            s = s + "\\n";               // Assignment to pattern variable
            ...
        }
        System.out.println(s);          // Refers to field s
        ...
    }
}

class Example2 {
    Point p;

    void test2(Object o) {
        if (o instanceof Point p) {
            // p refers to the pattern variable
            ...
        } else {
            // p refers to the field
            ...
        }
    }
}</code></pre>
 <h2>Изолированные типы (Sealed Classes). JEP 397</h2>
 <p>Изолированные классы и интерфейсы могут быть расширены и реализованы только теми классами и интерфейсами, которым это разрешено. Это позволяет передать компилятору знания о том, что существует ограниченная иерархия каких-либо классов. Для объявления изолированных типов используется модификатор <strong>sealed</strong>. Затем, после ключевых слов <em>extends</em> и <em>implements</em> идет ключевое слово <strong>permits</strong>, после которого перечисляются классы, которым разрешено расширять или реализовывать данный класс/интерфейс. Взглянем на пример:</p>
 <pre><code class="java">package com.example.geometry;

public abstract sealed class Shape
    permits Circle, Rectangle, Square { ... }
... class Circle    extends Shape { ... }
... class Rectangle extends Shape { ... }
... class Square    extends Shape { ... }</code></pre>
 <p>Классы, перечисленные после ключевого слова <em>permits</em> должны находиться рядом с родительским классом: в том же модуле или пакете. Если они малы и их не так много, их можно разместить в одном файле с родительским классом, в этом случае ключевое слово <em>permits</em> можно опустить. Каждый дочерний класс должен быть прямым наследником изолированного класса. Каждый дочерний класс должен использовать один из трех модификаторов:</p>
 <ul>
  <li><p>Модификатор <em>final</em>, если иерархия типов не должна расширяться далее.</p></li>
  <li><p>Модификатор <em>sealed</em>, если иерархия типов может расширяться далее, но в ограниченном ключе.</p></li>
  <li><p>Модификатор <em>non-sealed</em>, если эта часть иерархии может расширяться произвольным образом.</p></li>
 </ul>
 <p>Поскольку компилятор теперь обладает знанием того, что иерархия классов ограничена, это должно позволять нам перебирать типы объекта изолированного класса следующим образом:</p>
 <pre><code class="java">Shape rotate(Shape shape, double angle) {
    if (shape instanceof Circle) return shape;
    else if (shape instanceof Rectangle) return shape.rotate(angle);
    else if (shape instanceof Square) return shape.rotate(angle);
    // no else needed!
}</code></pre>
 <p>Однако, мне так и не удалось заставить такой код работать (возможно, потому что это все еще превью реализация):</p>
 <pre><code class="java">public class Main {

    static abstract sealed class Shape permits Rect, Circle {
    }

    static final class Rect extends Shape {
    }

    static final class Circle extends Shape {
    }

    public Shape getShape(Shape shape) {
        if (shape instanceof Rect) return shape;
        else if (shape instanceof Circle) return shape;
    }

    public static void main(String[] args) {
        new Main().getShape(new Rect());
    }
}</code></pre>
 <pre><code class="bash">javac -Xlint:preview --enable-preview --release 16 Main.java 
Main.java:9: warning: [preview] sealed classes are a preview feature and may be removed in a future release.
    static abstract sealed class Shape permits Rect, Circle {
                    ^
Main.java:9: warning: [preview] sealed classes are a preview feature and may be removed in a future release.
    static abstract sealed class Shape permits Rect, Circle {
                    ^
Main.java:9: warning: [preview] sealed classes are a preview feature and may be removed in a future release.
    static abstract sealed class Shape permits Rect, Circle {
                                       ^
Main.java:21: error: missing return statement
    }
    ^
1 error
3 warnings
</code></pre>
 <p>UPD: как выяснилось в <a href="https://habr.com/ru/post/538800/#comment_22589404" rel="noopener noreferrer nofollow">комментариях</a>, ожидание анализа на exhaustiveness в цепочках if-else появилось в результате ошибочного понимания объяснения в JEP.</p>
 <h2>Switch выражения (Switch Expressions). JEP 361</h2>
 <p>Использование оператора switch чревато ошибками из-за его сквозной семантики. Взгляните на пример:</p>
 <pre><code class="java">switch (day) {
    case MONDAY:
    case FRIDAY:
    case SUNDAY:
        System.out.println(6);
        break;
    case TUESDAY:
        System.out.println(7);
        break;
    case THURSDAY:
    case SATURDAY:
        System.out.println(8);
        break;
    case WEDNESDAY:
        System.out.println(9);
        break;
}</code></pre>
 <p>Из-за большого количества ключевых слов <em>break</em> легко запутаться и пропустить его где-то.</p>
 <p>Кроме того, очень часто оператор switch используется для эмуляции switch выражения, но это не удобно и тоже чревато ошибками:</p>
 <pre><code class="java">int numLetters;
switch (day) {
    case MONDAY:
    case FRIDAY:
    case SUNDAY:
        numLetters = 6;
        break;
    case TUESDAY:
        numLetters = 7;
        break;
    case THURSDAY:
    case SATURDAY:
        numLetters = 8;
        break;
    case WEDNESDAY:
        numLetters = 9;
        break;
    default:
        throw new IllegalStateException("Wat: " + day);
}</code></pre>
 <p>Для решения перечисленных проблем был введен новый способ записи условий в операторе switch в виде <strong>"case L -&gt;"</strong> и сам оператор стал еще и выражением.</p>
 <p>Если условие записано в виде "case L -&gt;", то при его срабатывании выполняется только инструкция справа от него. Сквозная семантика в этом случае не работает. Пример такой записи:</p>
 <pre><code class="java">static void howMany(int k) {
    switch (k) {
        case 1  -&gt; System.out.println("one");
        case 2  -&gt; System.out.println("two");
        default -&gt; System.out.println("many");
    }
}</code></pre>
 <p>Теперь рассмотрим пример switch выражения:</p>
 <pre><code class="java">static void howMany(int k) {
    System.out.println(
        switch (k) {
            case  1 -&gt; "one";
            case  2 -&gt; "two";
            default -&gt; "many";
        }
    );
}</code></pre>
 <p>Большинство выражений будут иметь единственную инструкцию справа от условия "case L -&gt;". На случай, если понадобится целый блок, вводится ключевое слово <strong><em>yield</em></strong> для возврата значения из выражения:</p>
 <pre><code class="java">int j = switch (day) {
    case MONDAY  -&gt; 0;
    case TUESDAY -&gt; 1;
    default      -&gt; {
        int k = day.toString().length();
        int result = f(k);
        yield result;
    }
};</code></pre>
 <p>Условия в switch выражении должны быть исчерпывающими, то есть охватывать все возможные варианты. На практике это означает, что обязательно присутствие общего условия - default (в случае с простым оператором switch это не обязательно). Однако, в случае со switch выражениями на enum типах, которые покрывают все возможные константы, наличие общего условия необязательно. В таком случае, при добавлении новой константы в enum, компилятор выдаст ошибку, чего не случилось бы, будь общее условие задано.</p>
 <h2>Заключение</h2>
 <p>В данной статье мы рассмотрели новые синтаксические возможности Java 16: записи, текстовые блоки, паттерны для instanceof, изолированные типы и switch выражения. Стоит отметить, что изолированные типы все еще находятся на стадии preview, а потому в Java 17 могут и не войти.</p>
 <h2>Ссылки</h2>
 <ul>
  <li><p><a href="https://openjdk.java.net/jeps/395" rel="noopener noreferrer nofollow">JEP 395. Records</a></p></li>
  <li><p><a href="https://openjdk.java.net/jeps/378" rel="noopener noreferrer nofollow">JEP 378. Text Blocks</a></p></li>
  <li><p><a href="https://openjdk.java.net/jeps/394" rel="noopener noreferrer nofollow">JEP 394. Pattern Matching for instanceof</a></p></li>
  <li><p><a href="https://openjdk.java.net/jeps/397" rel="noopener noreferrer nofollow">JEP 397. Sealed Classes (Second Preview)</a></p></li>
  <li><p><a href="https://openjdk.java.net/jeps/361" rel="noopener noreferrer nofollow">JEP 361. Switch Expressions</a></p></li>
 </ul>
 <p> </p>
</div>', '2021-01-24 13:14:00', 'Java 16 — новые синтаксические возможности языка', 86, null, 8),
        (31, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/bd/u0/93/bdu093dczdtra212fm0hpbkhu80.jpeg">
 <br> 
 <br> Дизайнер Рокки Берген на своем сайте <a href="http://rockybergen.com/papercraft" rel="nofollow noopener noreferrer">выкладывает</a> в общий доступ бумажные модели различных исторических ПК и игровых приставок. Каждый чертеж сделан с большой точностью к деталям, а также имеет в своем составе периферийные элементы — мониторы, мышки и коврики для них, дискеты и кассеты (их можно вставлять в нужные слоты), магнитофоны, джойстики, папки с документацией и даже пистолет для некоторых приставок. 
 <br> <a name="habracut"></a>
 <br> Берген консультировался с ретро-коллекционерами по поводу различных компонентов чертежей для максимальной оригинальности. Например, ZX Spectrum у него идет с портативным цветным телевизором Contec KTN-3732 и кассетным магнитофоном Dixons TR12, которые были популярны у покупателей этого ПК в 1982 году.
 <br> 
 <br> Сейчас на сайте Бергена можно скачать развертки для: Amiga 500, <a href="https://www.docdroid.net/1btVffs/amstrad-cpc-264-papercraft-ver-2-pdf" rel="nofollow noopener noreferrer">Amstrad CPC 464</a>, Apple II, Apple — LISA 1, Apple Macintosh 128K, Atari 520ST, BBC Microcomputer, Commondore 64, <a href="https://www.docdroid.net/x1C8VgS/commodore-vic-20-ver1-pdf#page=3" rel="nofollow noopener noreferrer">Commondore VIC-20</a>, IBM 5150 Personal Computer, <a href="https://www.docdroid.net/p6mZ4lN/ibm-5100-papercraft-ver-1-pdf" rel="nofollow noopener noreferrer">IBM 5100 Portable Computer</a>, Nintendo Advanced Video System (прототип), IMSAI 8080 (PCS-80 System), SEGA Master System, Nintendo Gamecube, <a href="https://www.docdroid.net/PhLOvMG/zx-spectrum-ver1-pdf" rel="nofollow noopener noreferrer">Sinclair ZX Spectrum</a>, Sharp X68000, TRS-80 Model III и стереосистемы CONION C-100F.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/um/pl/fy/umplfyyw0lv8jsoczdv7yky_e3a.jpeg">
 <br> <i>Вдобавок почти на каждую культовую бумажную модель есть на выбор несколько сменных экранов со скриншотами игр и приложений, которые были особо популярны на этом оборудовании.</i>
</div>', '2021-01-25 08:55:00', 'Дизайнер публикует бумажные модели исторических ПК', 5, null, 9),
        (32, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Привет, Хабр! Раз в неделю я рассказываю о крупнейших событиях в отрасли в России и мире.&nbsp;<a href="https://www.youtube.com/watch?v=Z5VmvztNbxA&amp;feature=youtu.be&amp;ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%93%D0%BE%D1%80%D0%BD%D1%8B%D0%B9.%23%D1%81%D1%82%D0%B0%D1%80%D1%82%D0%B0%D0%BF%D0%B4%D0%BD%D1%8F%D0%B8%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82-%D0%B1%D0%B8%D0%B7%D0%BD%D0%B5%D1%81" rel="noopener noreferrer nofollow">Оригинальный ролик</a>&nbsp;на YouTube, ниже расшифровка.</p><iframe id="600f0cec95bc5d2dedbee13d" src="https://embedd.srv.habr.com/iframe/600f0cec95bc5d2dedbee13d" class="embed_video embed__content" allowfullscreen="true"></iframe>
 <h2>Блокировки в России</h2>
 <p>Снимаю в субботу утром, что будет после митингов я не знаю. Но вот до митингов правительство просило практически все соцсети блокировать посты и группы посвященные митингам. И по статистики Роскомнадзора, Вконтакте и YouTube удалили 50% того о чем их попросили, а TikTok удалил 38%. То что TikTok и YouTube что-то удаляют, это кажется новость, такого раньше не было. Чтобы оперативно, в режиме онлайн, быстро реагировали, без всяких судов, просто&nbsp; по просьбе — по-моему это новость. Как реагировать на нее не знаю, но рассказываю. </p>
 <h2>Блокировки в США</h2>
 <p>Неделя была богатой на другие блокировки и похожие новости. Открылся многострадальный Parler. Ну как открылся? Приложение по-прежнему не работает, сайт, в общем, тоже не работает. Но сайт, по крайней мере, открывается и на нем написаны возмущенные письма от CEO и некоторых других людей о том, как все плохо, кто во всем виноват и мы требуем чтобы все заработало.&nbsp;</p>
 <p>Открылся он в таком виде при помощи российской компании, которая с одной стороны защищает его от DDoS, а с другой стороны — скрывает IP хостера. И в том что компания российская, кажется, плюсы для всех. Те, кто хотят видеть российскую руку, российское вмешательство и прочее — видят российскую руку и вмешательство. Те,&nbsp; кто хотят видеть, что Россия защищает демократию по всему миру — видят, что Россия защищает демократию по всему миру.&nbsp; И стоило всего лишь защитить Parler от DDoS.</p>
 <p>Американская лига безопасного интернета, есть у них такая общественная организация, подала в суд на Apple, чтобы Apple снес и Telegram тоже. Ровно по тем причинам, по которым он снес Parler. Там есть группы и каналы, которые призывают к каким-то беспорядкам с точки зрения этой лиги безопасного интернета. Это пока подача в суд. Суд будет очень-очень длинным. Apple ничего пока не делает. Но забавно.</p>
 <h2>Смерть онлайн-казино</h2>
 <p>В России тихой сапой уничтожены онлайн-казино и нелегальные онлайн-букмекеры. Предыстория такая, что еще несколько лет назад их запретили и после этого Роскомнадзор за ними охотился, они уворачивались. Либо меняли домены, либо просто сидели за&nbsp; VPN и объясняли пользователям, как им преодолеть эти блокировки.&nbsp;</p>
 <p>В этом году, то есть буквально в январе, делом занялся Центробанк. Он начал изучать, как они принимают деньги и обращаться к банкам, которые обеспечивали эквайринг — “Банк, ты какому-то неправильному клиенту оказываешь услугу. Прекрати, пожалуйста, а то будут проблемы”. Банки незамедлительно послушались. Ну вот собственно и все. То есть какие-то казино принимают сейчас деньги в Bitcoin, но для массовой аудитории это не работает.&nbsp; Какие-то вообще не принимают. Индустрия более-менее уничтожена. Оффлайн показал кто сильнее — он или онлайн. Оффлайн.&nbsp;</p>
 <p>А это был, между прочим, довольно большой рынок. Есть оценка оборота онлайн-казино — 73 млрд. рублей в год. И еще сверху оборот незаконных букмекеров. И этот рынок кормил другой рынок. Вот есть все нелегальные видеохостинги, где бесплатно показывают кино-новинки и сериалы. Они все живут за счет рекламы онлайн-казино, вернее, жили. А теперь рекламировать станет некого, и либо они сдохнут, либо что-то изменится. Но тоже пострадали.</p>
 <h2>Осторожно, мошенники!</h2>
 <p>На Facebook вышла очередная мошенническая реклама. В ней основатель Dbrain Дмитрий Мацкевич рассказывал о том, как они зарабатывают деньги, кажется, на бирже. Как это все круто, как все быстро растет и “несите деньги вот сюда и Вы будете так же зарабатывать вместе с нами, мы что-то поможем”.&nbsp; Я, честно говоря, не слушал содержание.&nbsp;</p>
 <p>Фокус в том, что это, естественно, не был настоящий Дмитрий Мацкевич. Но сгенерированный образ был настолько похож, что сам Мацкевич не видел разницы и говорил, что сделанно хорошо, отличить невозможно. Только по отсутствию каких-то характерных словечек в тексте, текст не подделали. А голос и видео прям вот настоящий Мацкевич.&nbsp;&nbsp;&nbsp;</p>
 <p>Получается, какие-то простые русские мошенники уже могут такое делать в нормальных промышленных количествах. Это уже не достижение какие-то супертехнологий. Это уже есть вот здесь в руках.&nbsp;&nbsp;</p>
 <p>И вторая любопытная вещь — скандал уже был, а я это объявление продолжал видеть. И сейчас ещё доступно</p>
 <div class="embed_link">
  <div class="embed__thumb" style="background-image: url(&quot;https://scontent-vie1-1.xx.fbcdn.net/v/t15.13418-10/p206x206/131869319_725816984987128_4273348602962237028_n.jpg?_nc_cat=109&amp;ccb=2&amp;_nc_sid=ad6a45&amp;_nc_ohc=9xhmzfUn_qoAX8POra3&amp;_nc_ht=scontent-vie1-1.xx&amp;tp=6&amp;oh=24ed740b72f63ad5bc524bd1d0c46091&amp;oe=60355928&quot;);"></div>
  <div class="embed__caption">
   <div class="embed__caption-title">
    <span>? Получить приглашение на мастер-класс</span>
   </div><a href="https://www.facebook.com/dbrainweb/videos/-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B8%D1%82%D1%8C-%D0%BF%D1%80%D0%B8%D0%B3%D0%BB%D0%B0%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BD%D0%B0-%D0%BC%D0%B0%D1%81%D1%82%D0%B5%D1%80-%D0%BA%D0%BB%D0%B0%D1%81%D1%81/231723048456916/" target="_blank" rel="noopener noreferrer nofollow" class="embed__caption-link">www.facebook.com</a>
  </div>
 </div>
 <h2>Инвестиции в Cruise</h2>
 <p>Microsoft проинвестировал в Cruise. Cruise — это внутренний стартап General Motors, который делает беспилотные автомобили. Статус примерно как у всех. Есть какие-то тестовые автомобили, которые где-то ездят. Но когда будет промышленное внедрение миллионов автомобилей, никто ничего не знает. И стоит этот стартап примерно как все стартапы в этом поле — 30 млрд. долларов. И последний раунд был 2 млрд. долларов.&nbsp;</p>
 <p>Забавно что весь General Motors стоит примерно 80 млрд. долларов. Это заводы, это продажи и всё остальное.&nbsp; А доля General Motors в Cruise с несколькими тестовыми машинами стоит 24 млрд. долларов. Ну вот так. </p>
 <h2>Акселератор United Investors</h2>
 <p>Начался второй набор в акселератор United Investors. Вроде как реклама, а вроде как и честная новость. Про акселератор Сбербанка я же говорил, чем мы хуже.&nbsp;</p>
 <p>Сам акселератор будет идти весной, примерно с 1 марта по, примерно 31 мая. Полностью онлайн. Упор на домашнее задание и работу над проектом. Теоретическая часть она, конечно, будет, но это такое приятное дополнение. Основное это домашние задания, чтобы Вы видели куда развивать проект.&nbsp; Целевая аудитория — это стартапы с MVP. У Вас уже что-то должно быть. Продажи могут быть в самом начале или их может не быть. А какой-то технический прототип обязательно нужен.&nbsp;&nbsp;</p>
 <p>Принимаем заявки до 20 февраля. Пишите, приходите, <a href="https://a.unitedinvestors.ru/" rel="noopener noreferrer nofollow">a.unitedinvestors.ru</a>. Результаты первого набора — 24 стартапа на демо дне, 6 получили инвестиции. И еще некоторые получат, просто мало времени прошло. В среднем время сделки полгода, а прошло пока 5 месяцев.</p>
 <h2>Новости одной строкой</h2>
 <p>В очередной раз закрылся Рокетбанк. На сайте никаких новостей, никаких изменений. Но в&nbsp; Instagram написано — “Мы закрылись на этот раз окончательно”.&nbsp; До свидания.&nbsp;</p>
 <p>Максим Спиридонов вышел из своего проекта Нетология. Покупатель Севергрупп. Поздравляем Максима. Очередной выход в российском EDtech. Ура! Всем от этого только лучше.</p>
</div>', '2021-01-25 21:37:00', 'Новости IT и стартапов: акселератор United Investors, блокировки повсюду и смерть Рокетбанка', 29, null, 4),
        (33, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Для этого нам понадобится </p>
 <ol>
  <li><p>Действующий account Google Play Developer</p></li>
  <li><p>Сервер Linux с предустановленным Docker, в моём случае это Ubuntu 16.04</p></li>
  <li><p>Установленный Android SDK</p></li>
  <li><p>Jenkins - в данном случае развернём его при помощи Docker</p></li>
  <li><p>Gitea - Удобная служба для собственного Git-репозитория (это не обязательно можно использовать и GItHub) её мы подымем также на базе Docker контейнера</p></li>
 </ol>
 <h2>Настройка Google Play Account</h2>
 <p>Давайте предположим что вы уже действующий разработчик и осуществляли публикацию своих приложений в ручном режиме, что даёт основание полагать что вам известны основные моменты процесса и их озвучивать не стоит, коснёмся лишь того что нам понадобится для автоматического развёртывания </p>
 <ol>
  <li><p>Авторизуйтесь в Google Cloud Platform, если еще не создан проект то создаём его </p></li>
  <li><p>В разделе IAM и администрирование - Сервисные аккаунты жмём <em>Создать сервисный аккаунт</em></p></li>
  <li><p>После заполнения соответствующих полей он будет создан и появится в списке, жмём на три точки с права и выбираем создать ключ, выбираем JSON, сохраните его он нам понадобится для настройки Jenkins</p></li>
  <li><p>Авторизуйтесь в Gooogle Play Developer Console</p></li>
  <li><p>В разделе <strong>Пользователи и разрешения </strong>нажимаем<strong> </strong>пригласить пользователя сервисного аккаунта по сгенерированному email , выставляем ему роль <strong>Релиз менеджер (</strong>при необходимости можете настроить права этого пользователя более детально)</p></li>
  <li><p>Я предполагаю что <strong>Сертификат для ключа подписи приложения, </strong>и<strong> Сертификат ключа загрузки </strong>у вас уже настроен и это не требует пояснений. </p></li>
 </ol>
 <h2>Установка Android SDK</h2>
 <pre><code># Install latest JDK
sudo apt install default-jdk

sudo apt install android-sdk
</code></pre>
 <p>Добавьте Android SDK в свой PATH, откройте&nbsp;<code>~/.bashrc</code>&nbsp;в редакторе и скопируйте следующие строки</p>
 <pre><code># Export the Android SDK path 
export ANDROID_HOME=$HOME/android-sdk
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# Fixes sdkmanager error with java versions higher than java 8
export JAVA_OPTS=''-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee''</code></pre>
 <p>Для проверки запустите </p>
 <pre><code>source ~/.bashrc</code></pre>
 <p>Для того что бы просмотреть все доступные инструменты сборки выполните команду</p>
 <pre><code>sdkmanager --list</code></pre>
 <p>По аналогии с выполните установку интересующих вас версий инструментов для нужных платформ</p>
 <pre><code>sdkmanager "platform-tools" "platforms;android-28"</code></pre>
 <p>На этом установка Android SDK может считаться завершённой, и в дальнейшем нам понадобится лишь путь к установленным инструментам, в моём случае это выглядит как то так </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/85e/3ab/537/85e3ab537ab95326212f1eefef6423e8.PNG" width="577" height="33">
  <figcaption></figcaption>
 </figure>
 <h3>Установка Gitea</h3>
 <p>Этот шаг является опциональным и совсем не обязательным если вы предпочитаете использовать git репозитарии такие как GitHub и им подобные и его можно пропустить, это малой степени повлияет на конечный результат. (На базе gitea в дальнейшем будет обсуждаться тема создания Telegram Bot`a для оповещения о публикациях)</p>
 <p>Подробно по установке и настройке написано на оф сайте https://docs.gitea.io/en-us/install-with-docker/</p>
 <p>По факту установка сводится к выполнению 2х действий</p>
 <p>1) Перейдите на официальный репозитарий Gitea , на Docker HUB и скопируйте то что там написано в предварительно созданный файл </p>
 <pre><code>version: ''2''
services:
  web:
    image: gitea/gitea:1.12.4
    volumes:
      - ./data:/data
    ports:
      - "3000:3000"
      - "22:22"
    depends_on:
      - db
    restart: always
  db:
    image: mariadb:10
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=changeme
      - MYSQL_DATABASE=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=changeme
    volumes:
      - ./db/:/var/lib/mysql</code></pre>
 <p>2) Сохраните и запустите команду <strong>docker-compose you_filename</strong></p>
 <p>3) Gitea установлена и доступна по URL http://you_IP:3000/</p>
 <p>4) Создайте пользователя, репозитарий, сделайте PUSH исходного кода вашего проекта, и в моём случае для упрощения процесса публикации приложения все необходимые ключи для его подписи и деплоя я храню в месте с исходным кодом в системе контроля версий (да знаю это не совсем верно и вы вольны делать так как считаете нужным, к примеру создать отдельный volume для ключей и пробрасывать их jenkins для дальнейшего их использования gradle при подписании приложения, описание этого лишь раздует статью и потому не будет рассматриваться) </p>
 <h2>Предварительная настройка проекта</h2>
 <p>Для подписания нашего apk файла в автоматическом режиме на стороне сервера, нам нужен файл нашего keystore и правильно настроенный скрипт gradle , для этого добавим в него несколько секций</p>
 <pre><code class="go">// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// GenerateNameVersion
def getVersionNameTimestamp() {
    return new Date().format(''yy.MM.ddHHmm'')
}

// GenerateVersionCode
def getVersionCodeTimestamp() {
    def date = new Date()
    def formattedDate = date.format(''yyMMddHHmm'')
    def code = formattedDate.toInteger()
    println sprintf("VersionCode: %d", code)
    return code
}

......

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties[''keyAlias'']
            keyPassword keystoreProperties[''keyPassword'']
            storeFile file(keystoreProperties[''storeFile''])
            storePassword keystoreProperties[''storePassword'']
        }
    }
......
    defaultConfig {
        versionCode getVersionCodeTimestamp()
        versionName "${getVersionNameTimestamp()}"</code></pre>
 <p>Содержимое файла keystore.properties</p>
 <pre><code>storePassword=you_password_keystore
keyPassword=you_password_key
keyAlias=you_key_name
storeFile=path_to_keystore_file</code></pre>
 <ul>
  <li><p>Я храню как файл с keystore.properties так и сам keystore в системе контроля версий, что не совсем правильно и не безопасно при публикации исходного кода в открытом виде к примеру на GitHub, по этому я не рекомендую использовать данный подход если у вас OpenSource проект , храните и подтягивайте их из отдельной папки. </p></li>
  <li><p>Для публикации в Google Play требуется уникальная версия сборки, и я генерирую её скриптом Gradle на основании текущей даты и времени, и как вы понимаете это исключает использование каких либо вразумительных номеров версий и если вам это важно , то вам придётся придумать некий другой механизм автоматизации версионирования, я же остановился на этом варианте - потому как хотел что бы deploy происходил по нажатию одной лишь кнопки (PUSH) </p></li>
 </ul>
 <h3>Установка Jenkins</h3>
 <p>Его мы развернём используя Docker , я применяю уже настроенный образ с нужными мне инструментами из своего репозитария, вы же вольны использовать официальный, принципиально ни чего не измениться </p>
 <pre><code class="bash">docker run -it -d -v jenkins_home:/var/jenkins_home -v /usr/lib/android-sdk:/usr/lib/android-sdk -p 8080:8080 -p 50000:50000 --env JENKINS_OPTS="--prefix=/jenkins" --restart always leganas/ls_repository:jenkins</code></pre>
 <p>пробрасываем в качестве volumes в в наш контейнер папку с установленным Android SDK</p>
 <p>Теперь он запущен и доступен по адресу http://you_IP:8080/jenkins/</p>
 <p>После не хитрых манипуляций по заданию пароля Jenkins готов к работе, и теперь нам предстоит его настроить</p>
 <p>1) Для начала нам нужно настроить окружение , заходим System Configuration - <strong>Глобальные настройки , </strong>и добавляем<strong> Environment variables</strong> (возможно ваши пути будут отличатся)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e6f/357/117/e6f35711778d88b96f1456fb901aaa2d.PNG" width="926" height="394">
  <figcaption></figcaption>
 </figure>
 <p></p>
 <p>2) В разделе <strong>Настройки - Конфигурация глобальных инструментов </strong>проверяем настройки Git и Gradle (по факту обычно там всё уже настроено)</p>
 <p>3) Заходим <strong>Настройки - Управление пользователями , </strong>выбираем пользователя и его настройки, ищем строку <strong>API Token , </strong>создаём новый и <strong>сохраняем </strong>его , он нам понадобится. </p>
 <p>4) В разделе управления плагинами проверяем и если нужно устанавливаем плагины Git, Git client<u>, </u>Google OAuth Credentials plugin, Google Play Android Publisher</p>
 <p>5) Заходим Настройки - Manage Credentials Configure credentials -Store - Jenkins - Global credentials (unrestricted)- и создаём там 2 ключа доступа |</p>
 <ul>
  <li><p>для доступа к Git репозитарию </p><p>в моём случае т.к. я использую Gitea я создаю обычную пару login/password , для GitHub есть специальный плагин и инструмент для авторизации</p></li>
  <li><p>для публикации приложения в Google Play Market</p><p>создаём ключ используя JSON файл который создали в первом разделе данной инструкции</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c96/c13/0b9/c96c130b9c67500880852a3bf141475c.PNG" width="803" height="436">
  <figcaption></figcaption>
 </figure>
 <p>6) Теперь создайте проект вашего приложения в Jenkins и настройте его </p>
 <ul>
  <li><p><strong>Управление исходным кодом - </strong>установите Git , укажите<strong> </strong>Repository URL и Credentials (которые создали на прошлом этапе)</p></li>
  <li><p><strong>Триггеры сборки - </strong>выставите Trigger builds remotely (e.g., from scripts), в поле ввода введите любой случайный текст (он нам понадобится для удалённой активизации процесса сборки) при помощи GIt huck</p></li>
  <li><p>Добавьте шаг сборки Invoke Gradle script , и <strong>После сборочные операции - </strong>публикацию</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/239/902/f80/239902f801eaac5b6eb5dcc530108773.PNG" width="608" height="304">
  <figcaption></figcaption>
 </figure>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2ff/8e6/c9e/2ff8e6c9eb721d5735e0616032205177.PNG" width="607" height="696">
  <figcaption></figcaption>
 </figure>
 <p>Обратите внимание на поле Release traack , оно указывает то как будет опубликовано ваше приложение , в моём случае это "Внутреннее тестирование"</p>
 <p>7) Запустите проект в ручную использую Web интерфейс Jenkins и посмотрите на результат в истории сборок - Вывод консоли Если вы всё сделали верно то ваше приложение должно быть подтянуто из Git репозитария до актуальной версии ветки /master , собрано , подписано и опубликовано на Google Play.</p>
 <h2>Автоматизация запуска сборки</h2>
 <p>Если мы всё сделали правильно и проект удачно был опубликован на Google Play , можно перейти к настройке его автоматического deploy по Git событию PUSH в /master ветку </p>
 <p>1) Если вы используете Gitea как я то зайдите в репозитарий вашего проекта - Настройки - Git хуки, и в post-receive нажмите редактировать, и добавьте нечто этого рода</p>
 <pre><code class="bash">#!/bin/bash
while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ "master" = "$branch" ]; then
       curl --user you_user_name:you_user_token http://you_url_jenkins/job/you_project/build?token=you_tocken_build
    fi
done</code></pre>
 <ul>
  <li><p>you<em>_user_name - Имя пользователя от лица которого jenkins будет производить сборку</em></p></li>
  <li><p>you<em>_user_token - Токен который был сгенерирован в настройках пользователя</em></p></li>
  <li><p>you<em>_url_</em>jenkins и вообще весь путь до хука можно посмотреть на странице настройки проекта Jenkins и будет выглядеть он примерно так :</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/08b/82a/908/08b82a908538b9e4ae50b58013dcf3a4.png" width="1103" height="267">
  <figcaption></figcaption>
 </figure>
 <p>После проведения такого рода манипуляций сборка проекта Jenkins будет начинаться автоматически после PUSH события в master вашего репозитария. </p>
 <p>PS. Если же вы используете для хранения вашего кода другую Git систему то этот же код вы можете поместить руками в .git\\hooks\\post-update</p>
 <h2>Заключение</h2>
 <p>В случае положительного фидбэка от статьи, в следующей части я расскажу как написать Telegram бота для оповещения ваших тестировщиков о наличии обновления приложения на Google Play.</p>
 <p>Надеюсь эта информация была полезна и как то облегчит вам жизнь по настройки автоматической публикации.</p>
</div>', '2021-01-26 19:24:00', 'Автоматизация публикации приложения в Google Play при помощи Jenkins', 64, null, 8),
        (34, true, 'NEW', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <h2 id="ishodnaya-zadacha">Исходная задача</h2>
 <br> 
 <ul> 
  <li>Необходимо прочитать нетривиальный конфиг из .yaml файла. </li> 
  <li>Структура конфига описана с помощью дата-классов.</li> 
  <li>Необходимо, чтобы при десериализации были выполнены проверки типов, и, если данные невалидны, было брошено исключение.</li> 
 </ul>
 <br> 
 <p>То есть, проще говоря, нужна функция вида:</p>
 <br> 
 <pre><code class="python">def strict_load_yaml(yaml: str, loaded_type: Type[Any]):
    """
    Here is some magic
    """
    pass</code></pre>
 <br> 
 <p>И эта функция будет использоваться следующим образом:</p><a name="habracut"></a>
 <br> 
 <pre><code class="python">@dataclass
class MyConfig:
    """
    Here is object tree
    """
    pass

try:
    config = strict_load_yamp(open("config.yaml", "w").read(), MyConfig)
except Exception:
    logging.exception("Config is invalid")</code></pre>
 <br> 
 <h2 id="klassy-konfiguracii">Классы конфигурации</h2>
 <br> 
 <p>Файл <code>config.py</code> выглядит следующим образом:</p>
 <br> 
 <pre><code class="python">from dataclasses import dataclass
from enum import Enum
from typing import Optional

class Color(Enum):
    RED = "red"
    GREEN = "green"
    BLUE = "blue"

@dataclass
class BattleStationConfig:
    @dataclass
    class Processor:
        core_count: int
        manufacturer: str

    processor: Processor
    memory_gb: int
    led_color: Optional[Color] = None
</code></pre>
 <br> 
 <h2 id="variant-kotoryy-ne-rabotaet">Вариант, который не работает</h2>
 <br> 
 <p>Исходная задача встречается часто, не так ли? Значит решение должно быть тривиальным. Просто импортируем стандартную yaml-библиотеку и задача решена?</p>
 <br> 
 <p>Делаем импорт <a href="https://github.com/yaml/pyyaml" rel="nofollow noopener noreferrer">PyYaml</a> и вызываем функцию <code>load</code>:</p>
 <br> 
 <pre><code class="python">from pprint import pprint

from yaml import load, SafeLoader

yaml = """
processor:
  core_count: 8
  manufacturer: Intel
memory_gb: 8
led_color: red
"""

loaded = load(yaml, Loader=SafeLoader)
pprint(loaded)
</code></pre>
 <br> 
 <p>и в результате получим:</p>
 <br> 
 <pre><code class="plaintext">{''led_color'': ''red'',
 ''memory_gb'': 8,
 ''processor'': {''core_count'': 8, ''manufacturer'': ''Intel''}}</code></pre>
 <br> 
 <p>Yaml прекрасно загрузился, но в виде словаря. Это не проблема, можно передать словарь как <code>**args</code> в конструктор:</p>
 <br> 
 <pre><code class="python">parsed_config = BattleStationConfig(**loaded)
pprint(parsed_config)</code></pre>
 <br> 
 <p>и результатом будет:</p>
 <br> 
 <pre><code class="plaintext">BattleStationConfig(processor={''core_count'': 8, ''manufacturer'': ''Intel''}, memory_gb=8, led_color=''red'')</code></pre>
 <br> 
 <p>Вау! Легко! Но… Подождите-ка. Поле processor это словарь? Черт побери.</p>
 <br> 
 <p>Python не выполняет проверку типов в конструкторе и не преобразует аргументы к классу <code>Processor</code>. Значит настало время идти на stackowerflow.</p>
 <br> 
 <h2 id="reshenie-kotoroe-trebuet-yaml-tegi-i-pochti-rabotaet">Решение, которое требует yaml-теги и почти работает</h2>
 <br> 
 <p>Я прочитал вопросы и ответы на stackowerflow и документацию к PyYaml и выяснил, что yaml-документ может быть помечен тегами для определения типов. Классы в документе должны быть потомками<code>YAMLObject</code>, и файл <code>config_with_tag.py</code> будет выглядеть так:</p>
 <br> 
 <pre><code class="python">from dataclasses import dataclass
from enum import Enum
from typing import Optional

from yaml import YAMLObject, SafeLoader

class Color(Enum):
    RED = "red"
    GREEN = "green"
    BLUE = "blue"

@dataclass
class BattleStationConfig(YAMLObject):
    yaml_tag = "!BattleStationConfig"
    yaml_loader = SafeLoader

    @dataclass
    class Processor(YAMLObject):
        yaml_tag = "!Processor"
        yaml_loader = SafeLoader

        core_count: int
        manufacturer: str

    processor: Processor
    memory_gb: int
    led_color: Optional[Color] = None</code></pre>
 <br> 
 <p>а код для загрузки так:</p>
 <br> 
 <pre><code class="python">from pprint import pprint

from yaml import load, SafeLoader

from config_with_tag import BattleStationConfig

yaml = """
--- !BattleStationConfig
processor: !Processor
  core_count: 8
  manufacturer: Intel
memory_gb: 8
led_color: red
"""

a = BattleStationConfig

loaded = load(yaml, Loader=SafeLoader)
pprint(loaded)</code></pre>
 <br> 
 <p>И что получится в результате десериализации?</p>
 <br> 
 <pre><code class="plaintext">BattleStationConfig(processor=BattleStationConfig.Processor(core_count=8, manufacturer=''Intel''), memory_gb=8, led_color=''red'')</code></pre>
 <br> 
 <p>Неплохо. Но теперь yaml-документ наполовину состоит из тегов и потерял читаемость. К тому же, <code>Color</code> по-прежнему читается как строка. Может нужно просто добавить <code>YAMLObject</code> в список родительских классов? Так? Увы, нет. Код</p>
 <br> 
 <pre><code class="python">class Color(Enum, YAMLObject):
    RED = "red"
    GREEN = "green"
    BLUE = "blue"</code></pre>
 <br> 
 <p>приведет к ошибке:</p>
 <br> 
 <pre><code class="plaintext">TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases</code></pre>
 <br> 
 <p>Я не нашел решения этой проблемы за разумное время. К тому же я не хотел добавлять теги к yaml-документу, поэтому продолжил искать другие варианты решения исходной задачи.</p>
 <br> 
 <h2 id="reshenie-s-bibliotekoy-marshmallow">Решение с библиотекой marshmallow</h2>
 <br> 
 <p>На stackowerflow я нашел рекомендацию использовать библиотеку <a href="https://github.com/marshmallow-code/marshmallow" rel="nofollow noopener noreferrer">marshmallow</a> для парсинга словаря, полученного при десериализации JSON-объекта. Я решил, что это случай аналогичной исходной задаче, за исключением того, что в нашей задаче используется yaml вместо JSON. Попробуем использовать генератор <code>class_schema</code>, чтобы получить схему дата-класса:</p>
 <br> 
 <pre><code class="python">from pprint import pprint

from yaml import load, SafeLoader
from marshmallow_dataclass import class_schema

from config import BattleStationConfig

yaml = """
processor:
  core_count: 8
  manufacturer: Intel
memory_gb: 8
led_color: red
"""

loaded = load(yaml, Loader=SafeLoader)
pprint(loaded)

BattleStationConfigSchema = class_schema(BattleStationConfig)

result = BattleStationConfigSchema().load(loaded)
pprint(result)
</code></pre>
 <br> 
 <p>и, в результате, получим:</p>
 <br> 
 <pre><code class="plaintext">marshmallow.exceptions.ValidationError: {''led_color'': [''Invalid enum member red'']}</code></pre>
 <br> 
 <p>Значит, marshmallow хочет имя enum, а не его значение. Можно немного изменить исходный yaml-документ на:</p>
 <br> 
 <pre><code class="plaintext">processor:
  core_count: 8
  manufacturer: Intel
memory_gb: 8
led_color: RED</code></pre>
 <br> 
 <p>И, в результате, мы получим идеально десериализованный объект:</p>
 <br> 
 <pre><code class="plaintext">BattleStationConfig(processor=BattleStationConfig.Processor(core_count=8, manufacturer=''Intel''), memory_gb=8, led_color=&lt;Color.RED: ''red''&gt;)</code></pre>
 <br> 
 <p>Но у меня все еще остается чувство, что можно использовать оригинальный yaml-документ. Я продолжил исследование документации marshmallow и нашел следующие строчки:</p>
 <br> 
 <blockquote>
  Setting <code>by_value=True</code>. This will cause both dumping and loading to use the value of the enum.
 </blockquote>
 <p>Оказывается, можно передать следующую конфигурацию в словарь <code>metadata</code> генератора датакласса <code>field</code>:</p>
 <br> 
 <pre><code class="python">@dataclass
class BattleStationConfig:
    led_color: Optional[Color] = field(default=None, metadata={"by_value": True})</code></pre>
 <br> 
 <p>И таким образом, мы получим ту самую "магическую" функцию, которая сможет распарсить исходный yaml-документ.</p>
 <br> 
 <h2 id="magicheskaya-funkciya">Магическая функция</h2>
 <br> 
 <p>Теперь мы знаем, как выглядит тело магической функции:</p>
 <br> 
 <pre><code class="python">def strict_load_yaml(yaml: str, loaded_type: Type[Any]):
    schema = class_schema(loaded_type)
    return schema().load(load(yaml, Loader=SafeLoader))</code></pre>
 <br> 
 <p>Эта функция может потребовать дополнительной настройки для дата-классов, но решает исходную задачу и не требует наличия тегов в yaml.</p>
 <br> 
 <h2 id="nebolshaya-zametka-o-forwardref">Небольшая заметка о ForwardRef</h2>
 <br> 
 <p>Если определить дата-классы с ForwardRef (строка с именем класса) marshmallow будет озадачена и не сможет распарсить этот класс.</p>
 <br> 
 <p>Например, такая конфигурация</p>
 <br> 
 <pre><code class="python">from dataclasses import dataclass, field
from enum import Enum
from typing import Optional, ForwardRef

@dataclass
class BattleStationConfig:
    processor: ForwardRef("Processor")
    memory_gb: int
    led_color: Optional["Color"] = field(default=None, metadata={"by_value": True})

    @dataclass
    class Processor:
        core_count: int
        manufacturer: str

class Color(Enum):
    RED = "red"
    GREEN = "green"
    BLUE = "blue"
</code></pre>
 <br> 
 <p>приведет к ошибке</p>
 <br> 
 <pre><code class="plaintext">marshmallow.exceptions.RegistryError: Class with name ''Processor'' was not found. You may need to import the class.</code></pre>
 <br> 
 <p>И если переместить класс <code>Processor</code> выше, marshmallow потеряет класс <code>Color</code> с аналогичной ошибкой. Так что, по возможности, не используйте ForwardRef для ваших классов, если хотите парсить их с помощью marshmallow.</p>
 <br> 
 <h2 id="kod">Код</h2>
 <br> 
 <p>Весь код доступен в <a href="https://github.com/kirillsulim/python-strict-yaml-parsing" rel="nofollow noopener noreferrer">репозитории на GitHub</a>.</p>
</div>', '2021-01-27 23:23:00', 'Строгая десериализация YAML в Python c библиотекой marshmallow', 20, null, 2),
        (35, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <p>Привет! 2020&nbsp;позади, но&nbsp;запомнится нам надолго. Быт и&nbsp;привычки пришлось поменять&nbsp;— хотя&nbsp;бы потому, что еще никогда столько времени мы&nbsp;не&nbsp;проводили дома. Как, кстати, он&nbsp;у&nbsp;вас организован? У&nbsp;кого рабочее место отобрала кошка, кто пересел из&nbsp;кресла на&nbsp;гимнастический мяч? Какие неожиданные навыки открылись? </p>
 <br> 
 <p>Попросили коллег из&nbsp;IT, живущих в&nbsp;разных странах мира, поделиться короткой зарисовкой. Эта рубрика&nbsp;— экспериментальная. Если вам было&nbsp;бы интересна какая-то сторона жизни и&nbsp;работы на&nbsp;удаленке, например, какие бонусы дают компании после выхода на&nbsp;ремоут, пишите в&nbsp;комментарии&nbsp;— сделаем сравнительную статью. <br> </p>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/dw/xt/je/dwxtjef1p3nwskxaxyszranghoo.jpeg">
 <br> <sub>«Про рабочее место&nbsp;бы сказал, что у&nbsp;меня IKEA&nbsp;/ Apple starter pack»↓</sub>
 <br> <a name="habracut"></a>
 <br> 
 <h2>Костя Голиков</h2>
 <br> 
 <h3>Data Engineer @ 0+X&nbsp;/ Spotify, Швеция</h3>
 <br> 
 <p>Пытаюсь четко разграничивать работу и&nbsp;жизнь: для работы у&nbsp;меня средней спелости макбук&nbsp;13″ (за&nbsp;монитором), для фана новый мак-миник на&nbsp;М1. Похожая история и&nbsp;с&nbsp;наушниками: две основных пары, для дома использую открытые проводные наушники, они не&nbsp;ощущаются, можно спокойно просидеть и&nbsp;5, и&nbsp;10&nbsp;часов, уши совсем не&nbsp;устают, да&nbsp;и&nbsp;звук отличный. Но&nbsp;в&nbsp;офис их&nbsp;не&nbsp;наденешь: слышишь всех вокруг, а&nbsp;все вокруг слышат тебя. Поэтому до&nbsp;пандемии использовал беспроводные от&nbsp;соньки. Теперь с&nbsp;удаленкой и&nbsp;работой из&nbsp;дома продолжаю их&nbsp;использовать, но&nbsp;скорее для созвонов, когда можно походить по&nbsp;дому и&nbsp;не&nbsp;быть привязанным к&nbsp;одной точке. </p>
 <br> 
 <p>Айпад использую как второй мини-монитор для не&nbsp;очень связанных с&nbsp;работой вещей: музыка, телеграм и&nbsp;чатики. Когда хочется сфокусироваться, можно просто отключить его и&nbsp;вместе с&nbsp;ним все отвлекаторы. Иногда рисую на&nbsp;нем диаграммки для работы с&nbsp;помощью эппл ручки, но&nbsp;вторым Рембрандтом я&nbsp;так и&nbsp;не&nbsp;стал.</p>
 <br> 
 <p>Пару лет назад начал ловить ранние симптомы туннельного синдрома, с&nbsp;переходом на&nbsp;вертикальную мышку они полностью отступили, хотя сначала было жутко непривычно. На&nbsp;днях собираюсь поменять дефолтную клавиатуру от&nbsp;Аpple, на&nbsp;MX&nbsp;keys, тоже от&nbsp;Logitech. </p>
 <br> 
 <p>Стол и&nbsp;зарядка от&nbsp;ИКЕИ. Просто работают и&nbsp;радуют глаз свой минималистиностью. Ну&nbsp;и&nbsp;конечно, чашечка кофе, без неё, особенно зимой, в&nbsp;Швеции совсем никак.</p>
 <br> 
 <p>На&nbsp;удаленке мы&nbsp;нон-стоп уже почти год, и&nbsp;скорее всего, если не&nbsp;до&nbsp;самого конца <nobr>
   2021-го,
  </nobr> то&nbsp;как минимум до&nbsp;осени. Офис закрыт для работы целиком, разработчики сидят по&nbsp;домам, но&nbsp;если нужно приехать и&nbsp;забрать что-то&nbsp;— всегда пожалуйста. Я, например, взял с&nbsp;работы домой свой монитор: жить на&nbsp;13″ макбуке можно, но&nbsp;грустно. </p>
 <br> 
 <p>Мы, как команда и&nbsp;как компания в&nbsp;целом, были готовы к&nbsp;удаленке: в&nbsp;2019 и&nbsp;2020 году (еще до&nbsp;пандемии) наша команда была размазана примерно поровну между Нью-Йорком и&nbsp;Стокгольмом, что вдвойне сложнее из-за часовых поясов. Пару недель я&nbsp;работал из&nbsp;России, мои коллеги, бывало, ездили домой во&nbsp;Францию и&nbsp;работали оттуда. Конечно, видеть не&nbsp;только пиксели на&nbsp;экране, но&nbsp;и&nbsp;хотя&nbsp;бы изредка пересекаться, даёт +100&nbsp;к морали. Пока было лето&nbsp;— мы&nbsp;время от&nbsp;времени встречались, например, играли в&nbsp;<a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%BE%D1%80%D1%82-%D0%B1%D1%83%D0%BB%D1%8C">буль</a>, но&nbsp;зимой&nbsp;— особенно шведской зимой&nbsp;— это куда как сложнее.</p>
 <br> 
 <p>Spotify пытается всячески сгладить ситуацию <a href="https://chat_acronyms.academic.ru/8324/wfh">wfh</a>. Для сотрудников есть бюджет, который можно потратить на&nbsp;оформление домашнего офиса. Прямо перед пандемией в&nbsp;стокгольмском офисе запустили программу горячих обедов, но&nbsp;в&nbsp;итоге она трансформировалось в&nbsp;ежемесячный бюджет, который можно потратить на&nbsp;обеды в&nbsp;местечке на&nbsp;выбор или на&nbsp;продукты. </p>
 <br> 
 <p>Дата открытия офиса уже пару раз переносилась, но&nbsp;компания потихоньку начала присылать специальные наборы swag’а: начиная от&nbsp;масок и&nbsp;до&nbsp;специальных многоразовых трубочек для напитков.</p>
 <br> 
 <p>Рубрика «Фишечка на&nbsp;удаленке»: в&nbsp;детстве у&nbsp;меня, как и&nbsp;у&nbsp;многих, был <a href="https://i.ebayimg.com/00/s/MTYwMFgxNjAw/z/OLIAAOSwf~NeBQNn/%24_57.JPG?set_id=8800005007">тамагочи</a>, и&nbsp;внезапно в&nbsp;2021&nbsp;я нашёл что-то похожее в&nbsp;совершенно другой области. Я&nbsp;давно хотел попробовать делать <a href="https://www.thekitchn.com/how-to-make-sourdough-bread-224367">sourdough-хлеб</a>, и&nbsp;с&nbsp;переходом на&nbsp;удаленку наконец-то вкатился: в&nbsp;отличии от&nbsp;обычного хлеба на&nbsp;дрожжах, нужно смотреть за&nbsp;закваской, буквально каждый день ее&nbsp;кормить, да&nbsp;и&nbsp;процесс готовки теста отлично ложится на&nbsp;перерывы между кодингом и&nbsp;созвонами.</p>
 <br> 
 <br> 
 <h2>Анна Наумова</h2>
 <br> 
 <h3>Senior Product Manager @ Zello, Austin, TX, US</h3>
 <br> 
 <img src="https://habrastorage.org/webt/oi/36/ey/oi36eypjanbhmdoflsowfgetwco.png">
 <br> 
 <br> 
 <p>Мы&nbsp;на&nbsp;удаленке с&nbsp;марта 2020, сколько еще будем работать из&nbsp;дома&nbsp;— никому не&nbsp;известно. Думаю, до&nbsp;конца лета. Все будет зависеть от&nbsp;дистрибуции вакцины. Мы&nbsp;часто ровняемся на&nbsp;крупные компании типа Google или Facebook, они уже объявили, что раньше конца лета не&nbsp;выйдут. Есть большая вероятность, что вообще будем работать в&nbsp;офисе по&nbsp;желанию, либо будет смешанная система: 3&nbsp;дня дома, 2&nbsp;в офисе.</p>
 <br> 
 <p>В&nbsp;офис приходить можно, но&nbsp;правила строгие: надо записаться в&nbsp;календаре, что придешь, в&nbsp;офисе обязательно находиться в&nbsp;маске, даже если никого больше нет, до&nbsp;и&nbsp;после себя надо дезинфицировать поверхности, до&nbsp;которых дотрагивался, кухня закрыта, есть в&nbsp;офисе нельзя, половина мебели залеплена крестами из&nbsp;изоленты, показывая, что сидеть там нельзя. </p>
 <br> 
 <br> <a href="https://t.me/g_jobbot?start=u_habr47"><img src="https://habrastorage.org/webt/gt/wr/x0/gtwrx0slvf1pmwbftjvm7zytnpw.png"></a>
 <br> 
 <br> 
 <p>Удаленка поначалу была болью. Я&nbsp;человек общительный и&nbsp;консервативный, достаточно сложно принимаю не&nbsp;зависящие от&nbsp;меня изменения. Сейчас, кажется, все наоборот, я&nbsp;привыкла и&nbsp;даже получаю кайф от&nbsp;работы дома. Плюсы: не&nbsp;надо тратить деньги на&nbsp;дорогу, одежду, сборы, могу в&nbsp;перерывах от&nbsp;работы готовить и&nbsp;делать домашние дела, больше времени провожу с&nbsp;бойфрендом, который тоже работает из&nbsp;дома.</p>
 <br> 
 <p>Из&nbsp;минусов&nbsp;— отсутствие живого общения и&nbsp;комфортного рабочего места. Работаю чаще всего с&nbsp;дивана в&nbsp;гостиной. У&nbsp;меня есть стол и&nbsp;табуретка в&nbsp;спальне, но&nbsp;там до&nbsp;обеда спит бойфренд, поэтому там я&nbsp;меньше сижу.</p>
 <br> 
 <p>В&nbsp;связи с&nbsp;удаленкой бонусов от&nbsp;компании не&nbsp;было, ничего не&nbsp;изменилось.</p>
 <br> 
 <p>«Фишечка»&nbsp;— мультитаскинг (быть на&nbsp;встрече без видео и&nbsp;готовить, например), я&nbsp;продолжаю соблюдать «дресс-код», по&nbsp;крайней мере, на&nbsp;верхней части тела, часто ношу рубашки на&nbsp;видеовстречи, а&nbsp;еще часто за&nbsp;спиной ставлю какую-то игрушку дочки (например, на&nbsp;фото с&nbsp;диваном виден фиолетовый единорог), коллегам нравится.</p>
 <br> 
 <br> 
 <h2>Яков</h2>
 <br> 
 <h3>QA&nbsp;Lead @ Wisebits, Cyprus</h3>
 <br> 
 <img src="https://habrastorage.org/webt/2o/5a/uz/2o5auznsid0trpzdbq8caifkxfe.jpeg">
 <br> <sub>«Macbook pro 16″ 2019, airpods pro, стул, стол и&nbsp;лампа IKEA, массажный мячик»</sub>
 <br> 
 <br> 
 <p>На&nbsp;удаленке с&nbsp;марта <nobr>
   2020-го,
  </nobr> и&nbsp;это продолжится до&nbsp;окончания пандемии. Если не&nbsp;было локдауна, ходил в&nbsp;офис раз в&nbsp;неделю. Но&nbsp;правила постоянно меняются, с&nbsp;февраля условия такие: 50% наполненности офиса, маски и&nbsp;еженедельные тесты на&nbsp;ковид. </p>
 <br> 
 <p>Не&nbsp;могу ответить однозначно, хорошо&nbsp;ли на&nbsp;удаленке. Основной плюс: нет жесткой привязки к&nbsp;офису, можно жить в&nbsp;любой локации. Основной минус: потеря рамок рабочего времени. То&nbsp;есть работать стал больше. </p>
 <br> 
 <p>Среди бонусов от&nbsp;компании из-за локдауна: ноутбук, который выдали, плюс перечисляют деньги на&nbsp;баланс сервисов доставки, чтобы можно было заказывать домой обед.</p>
 <br> 
 <p>Моя «фишечка на&nbsp;удаленке»: стал курить кальян каждый день. Это очень грустно </p>
 <br> 
 <h2>Георгий Могелашвили</h2>
 <br> 
 <h3><a href="https://coaching.dev">Коуч и&nbsp;наставник</a>, автор канала <a href="https://t.me/gltalks">«Мужик с&nbsp;бабочкой»</a>, а&nbsp;еще Lead Developer @ Booking.com, Амстердам, Нидерланды</h3>
 <br> 
 <img src="https://habrastorage.org/webt/ai/il/qm/aiilqmydjh9ohxqktvq5z0d30s0.png">
 <br> 
 <br> 
 <p>На&nbsp;удаленке с&nbsp;конца марта 2020, без возможности посещать офисы (они закрыты). Сейчас по-прежнему все закрыто, и&nbsp;последняя информация, что мы&nbsp;будем работать в&nbsp;онлайн-режиме минимум до&nbsp;октября 2021&nbsp;года, с&nbsp;возможностью посещать офис по&nbsp;договоренности, если они откроются.</p>
 <br> 
 <p>Удаленка&nbsp;— и&nbsp;боль, и&nbsp;счастье. Боль&nbsp;— рабочее место у&nbsp;многих не&nbsp;оборудовано, а&nbsp;кому-то просто его негде разместить (как мне, например). А&nbsp;ещё дети, собаки, кошки и&nbsp;прочие отвлекающие факторы. Ну&nbsp;и&nbsp;людей хочется видеть вживую, кофе попить вместе и&nbsp;поиграть в&nbsp;пинг-понг.</p>
 <br> 
 <p>А&nbsp;счастье потому, что график работы стал гибче. Можно с&nbsp;утра проснуться попозже, потому что не&nbsp;надо никуда ехать, или в&nbsp;обед вздремнуть, если кончились силы. Моё время может быть использовано гораздо эффективнее и&nbsp;больше соответствовать моему ритму, а&nbsp;не&nbsp;принятым в&nbsp;компании нормам.</p>
 <br> 
 <p>Нам компания компенсирует повышенные затраты на&nbsp;коммуналку, плюс можно купить себе домой кресло, стол и&nbsp;необходимое оборудование для работы (мониторы, наушники). Родителям с&nbsp;детьми дают дополнительные дни отпуска, чтобы компенсировать то&nbsp;время, когда школы закрыты.</p>
 <br> 
 <p>Моя фишечка: купил новый крутейший гриль и&nbsp;научился делать классные стейки и&nbsp;копчености. Раньше после работы не&nbsp;было желания с&nbsp;этим возиться, а&nbsp;сейчас можно гриль разжечь с&nbsp;утра, отправить туда томиться кусок сочного говяжего брискета, и&nbsp;к&nbsp;вечеру ужинать вкуснейшим мяском. Наловчился так, что теперь к&nbsp;нам очередь из&nbsp;друзей зовется в&nbsp;гости на&nbsp;барбекю (но&nbsp;вы&nbsp;никому не&nbsp;говорите, потому что в&nbsp;Голландии гостей сейчас принимать нельзя...)</p>
 <br> 
 <br> 
 <h2>Алина Коваленко</h2>
 <br> 
 <h3>Software Engineer @ Uber, Нидерланды</h3>
 <br> 
 <img src="https://habrastorage.org/webt/ew/a-/tq/ewa-tqpmanpw6ersqknv3cnbej0.jpeg">
 <br> <sub>Два компа: на&nbsp;одном митинги, на&nbsp;другом билды собираются </sub>
 <br> 
 <br> 
 <p>Я&nbsp;последний раз в&nbsp;офисе была 28&nbsp;февраля 2020, мы&nbsp;в&nbsp;антиковид-бирпонг играли… Сейчас офис полностью закрыт, ожидаемая дата возврата&nbsp;— 1&nbsp;июля.</p>
 <br> 
 <p>Удаленка&nbsp;— и&nbsp;боль, и&nbsp;счастье. Из&nbsp;плюсов&nbsp;— спать можно дольше, на&nbsp;улицу в&nbsp;мерзкую погоду выходить не&nbsp;надо, работать можно откуда угодно: я&nbsp;3&nbsp;недели из&nbsp;Франции работала, коллега в&nbsp;России уже полгода тусуется. Но&nbsp;живого общения с&nbsp;народом и&nbsp;кофе брейков не&nbsp;хватает. Общение через зум&nbsp;— так себе забава, а&nbsp;обучение&nbsp;— вообще мимо, никакой связи с&nbsp;обучаемыми. </p>
 <br> 
 <p>Компания в&nbsp;связи с&nbsp;удаленкой дала 500$ на&nbsp;всё, что угодно для хоум-офиса (без отчёта), из&nbsp;офиса можно было забрать рабочее кресло. Вроде больше ничего не&nbsp;было.</p>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ru/sk/1l/rusk1ltd3q7zjniztxpwjtu3z2k.png">
 <br> 
 <br> 
 <p>Моя фишечка&nbsp;— кошка выгнала из&nbsp;кабинета.</p>
 <br> 
 <br> 
 <h2>Павел Доронин</h2>
 <br> 
 <h3>Product Lead @ Intento, Ирландия, и&nbsp;музыкант </h3>
 <br> 
 <img src="https://habrastorage.org/webt/hs/on/3h/hson3hxnyvjhibj0a4zyeglsqzg.png">
 <br> 
 <br> 
 <p>Что у&nbsp;меня на&nbsp;рабочем столе: стол и&nbsp;стул из&nbsp;Икеи, компы&nbsp;— личный Macbook pro, рабочий Macbook Air&nbsp;— думал, будет легче носить его в&nbsp;коворкинг, но&nbsp;не&nbsp;тут-то было с&nbsp;ковидом, наушники для созвонов у&nbsp;меня простые проводные Sennheiser: много созвонов каждый день, ни&nbsp;одни беспроводные наушники не&nbsp;выдержат такого, монитор&nbsp;HP, ну&nbsp;и&nbsp;всякие музыкальные штуки&nbsp;— к&nbsp;сожалению, пространство не&nbsp;позволяет хранить их&nbsp;отдельно. Поэтому для разных творческих сессий убираю со&nbsp;стола рабочее, достаю из&nbsp;шкафа всё музыкальное. В&nbsp;результате после работы получаются вот такие штуки → <a href="https://lnkfi.re/untoldwords?fbclid=IwAR2X3GPjvHyhdcHOBjtmyPOoWOBhEyae0E4wkMwQdH2q0A4xyO3LeJT9R1A">lnkfi.re/untoldwords</a></p>
 <br> 
 <p>Intento&nbsp;— remote-first-компания, она изначально была построена для удаленной работы, так что, в&nbsp;общем-то, ничего не&nbsp;изменилось. Но&nbsp;время от&nbsp;времени я&nbsp;работал из&nbsp;коворкинга. Когда откроются коворкинги&nbsp;— пока непонятно, но&nbsp;точно не&nbsp;раньше марта.</p>
 <br> 
 <p>Удаленка: боль или счастье&nbsp;— да&nbsp;в&nbsp;целом всё равно. Но&nbsp;встречаться с&nbsp;коллегами вживую иногда всё равно было&nbsp;бы полезно. А&nbsp;так как изначально Intento и&nbsp;ориентирован на&nbsp;удаленку, то&nbsp;бонусов не&nbsp;было&nbsp;— ничего не&nbsp;изменилось. Но&nbsp;«фишечка» есть&nbsp;— можно рабочий день разрезать на&nbsp;две части и&nbsp;в&nbsp;середине дня прокатиться на&nbsp;велосипеде вдоль моря, а&nbsp;потом со&nbsp;свежей головой снова поработать. </p>
 <br> 
 <br> 
 <blockquote>
  <i>&lt;рекламная пауза&gt;<br> По статистике g-mate, минимум 30–50% работодателей готовы рассматривать удаленку, а релокейт среди локаций на второй месте по популярности. И надоевший всем коронавирус — не препятствие: за время пандемии и в России, и за рубежом наём ускорился в 3 раза.<br> <b>Регистрируйтесь в <a href="https://t.me/g_jobbot?start=u_habr47">@g_jobbot</a>,</b> подходящие вам вакансии с релокейтом будут приходить в Телеграм.<br> &lt;/рекламная пауза&gt;</i>
 </blockquote>
</div>', '2021-01-31 23:52:00', 'Booking, Uber, Spotify: как устроена удаленка', 80, null, 5),
        (36, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/ce1/09b/c44/ce109bc4428750ec240120898128aee1" width="780" height="439">
  <figcaption></figcaption>
 </figure>
 <hr>
 <p>Из прошлой статьи (<a href="https://habr.com/ru/company/otus/blog/539348/"><u>перевод на хабре</u></a>, <a href="https://dzone.com/articles/spring-cloud-amp-spring-bootimplementing-eureka-se"><u>оригинал на англ.</u></a>) вы узнали, как использовать Eureka Server для обнаружения и регистрации сервисов. В этой статье мы познакомимся с распределенной трассировкой (Distributed Tracing).</p>
 <h3>Что такое распределенная трассировка</h3>
 <p>Распределенная трассировка используется для поиска и устранения ошибок в работе микросервисов. Она помогает в отслеживании прохождения запроса через ряд микросервисов. И помимо этого, может использоваться для анализа производительности.</p>
 <p>С ее помощью легко определить, какой микросервис упал или где возникли проблемы с производительностью.</p>
 <p>В этой статье мы рассмотрим использование Zipkin Server для распределенной трассировки. Для этого нам понадобятся следующие зависимости в <code>pom.xml</code>.</p>
 <pre><code class="xml">&lt;dependency&gt;
  &lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;
  &lt;artifactId&gt;zipkin-server&lt;/artifactId&gt;
  &lt;version&gt;2.11.7&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;
  &lt;artifactId&gt;zipkin-autoconfigure-ui&lt;/artifactId&gt;
  &lt;version&gt;2.11.7&lt;/version&gt;
&lt;/dependency&gt;</code></pre>
 <h3>Запуск Zipkin Server&nbsp;</h3>
 <p>Создайте maven-приложение и дайте ему какое-то имя (например, zipkin-server). Для создания Spring-проекта можно воспользоваться <a href="https://start.spring.io"><u>https://start.spring.io</u></a>.</p>
 <p>Ваш <code>pom.xml</code> должен выглядеть следующим образом:</p>
 <pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;groupId&gt;com.example.zikin.server&lt;/groupId&gt;
  &lt;artifactId&gt;zipkin-server&lt;/artifactId&gt;
  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;jar&lt;/packaging&gt;

  &lt;name&gt;zipkin-server&lt;/name&gt;
  &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;

  &lt;parent&gt;
     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
     &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
     &lt;version&gt;2.0.7.RELEASE&lt;/version&gt;
     &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
  &lt;/parent&gt;

  &lt;properties&gt;
     &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
     &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
     &lt;java.version&gt;1.8&lt;/java.version&gt;
  &lt;/properties&gt;

  &lt;dependencies&gt;
     &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
     &lt;/dependency&gt;
     &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
        &lt;scope&gt;runtime&lt;/scope&gt;
     &lt;/dependency&gt;
     &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
     &lt;/dependency&gt;
     &lt;dependency&gt;
        &lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;
        &lt;artifactId&gt;zipkin-server&lt;/artifactId&gt;
        &lt;version&gt;2.11.7&lt;/version&gt;
     &lt;/dependency&gt;
     &lt;dependency&gt;
        &lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;
        &lt;artifactId&gt;zipkin-autoconfigure-ui&lt;/artifactId&gt;
        &lt;version&gt;2.11.7&lt;/version&gt;
     &lt;/dependency&gt;
  &lt;/dependencies&gt;
  &lt;build&gt;
     &lt;plugins&gt;
        &lt;plugin&gt;
           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
           &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
        &lt;/plugin&gt;
     &lt;/plugins&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
 <p>Теперь откройте <code>ZipkinServerApplication.java</code> и добавьте аннотацию <code>@EnableZipkinServer</code>, как показано ниже.</p>
 <pre><code class="java">package com.example.zikin.server;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import zipkin2.server.internal.EnableZipkinServer;

@SpringBootApplication
@EnableZipkinServer
public class ZipkinServerApplication {
  public static void main(String[] args) {
     SpringApplication.run(ZipkinServerApplication.class, args);
  }
}</code></pre>
 <p>В файл <code>application.properties</code>, расположенный в <code>src/main/resources</code>, добавьте следующие параметры.</p>
 <pre><code class="java">spring.application.name=zipkin-server
server.port=9411</code></pre>
 <p>Запустите проект как Java-приложение и перейдите по адресу <a href="http://localhost:9411/zipkin"><u>http://localhost:9411/zipkin</u></a>.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/ae9/b1a/e4d/ae9b1ae4d2627c1edce3302aaf002aca" width="1500" height="470">
  <figcaption></figcaption>
 </figure>
 <p>Здесь пока нет никаких трейсов, так как клиентские приложения еще не зарегистрированы.</p>
 <h3>Регистрация клиентского приложения в Zipkin Server</h3>
 <h4>Регистрация Eureka Server в Zipkin Server</h4>
 <p>В предыдущей статье (<a href="https://habr.com/ru/company/otus/blog/539348/"><u>перевод на хабре</u></a>, <a href="https://dzone.com/articles/spring-cloud-amp-spring-bootimplementing-eureka-se"><u>оригинал на англ.</u></a>) мы посмотрели, как запустить Eureka Server. Теперь его можно зарегистрировать в Zipkin Server, добавив одно свойство в файл <code>application.properties</code>.</p>
 <pre><code>spring.zipkin.base-url=http://localhost:9411/</code></pre>
 <p>Параметр <code>spring.zipkin.base-url</code> определяет адрес, где находится Zipkin Server.</p>
 <p>Вам также необходимо добавить еще одну зависимость в <code>pom.xml</code> приложения Eureka Server.</p>
 <pre><code class="java">&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
   &lt;artifactId&gt;spring-cloud-starter-zipkin&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
 <p>После того как Eureka Server запустится, в Zipkin Server вы увидите трейсы, а в Zipkin Server UI в поле Service Name появится eureka-server.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/60f/5a1/68f/60f5a168f5e3c01f35803b36242af828" width="1319" height="647">
  <figcaption></figcaption>
 </figure>
 <h4>Регистрация клиентского Spring Boot-приложения в Zipkin Server</h4>
 <p>Для регистрации любого клиентского приложения, основанного на Spring Boot, нужно добавить одно свойство в файл <code>application.properties</code>.</p>
 <pre><code class="java">spring.zipkin.base-url=http://localhost:9411/</code></pre>
 <p>И одну зависимость в pom.xml вашего клиентского приложения.</p>
 <pre><code class="java">&lt;dependency&gt;
   &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
   &lt;artifactId&gt;spring-cloud-starter-zipkin&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre>
 <p>После запуска клиентского приложения вы сможете увидеть его трассировку в Zipkin.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d9f/248/159/d9f248159c29e018aaef3d6c5956a684" width="1475" height="603">
  <figcaption></figcaption>
 </figure>
 <h4>Просмотр деталей трассировки в Zipkin Server</h4>
 <p>Вы можете посмотреть детали трассировки, нажав на любую запись, показанную на изображении выше.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/668/4dd/7c1/6684dd7c19d609d208a3eaa6ae2246fb" width="1321" height="612">
  <figcaption></figcaption>
 </figure>
 <p>Теперь вы знаете, как использовать Zipkin Server для распределенной трассировки.</p>
 <hr>
 <blockquote>
  <p><em>Перевод статьи подготовлен в преддверии старта курса </em><a href="https://otus.pw/OZ5N/"><em>«Разработчик на Spring Framework»</em></a><em>. Приглашаем всех желающих зарегистрироваться на бесплатный демо-урок по теме </em><a href="https://otus.pw/kE4f/"><em>«Введение в облака, создание кластера в Mongo DB Atlas»</em></a><em>. </em></p>
  <p></p>
  <p><strong><em>На уроке участники вместе с экспертом поговорят о видах облаков и настроят бесплатный Mongo DB кластер для своих проектов.</em></strong></p>
 </blockquote>
 <p></p>
</div>', '2021-02-02 01:50:00', 'Spring Cloud и Spring Boot. Часть 2: использование Zipkin Server для распределенной трассировки', 2, null, 3),
        (37, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/getpro/habr/post_images/3da/9c1/3f0/3da9c13f08eef0b005c81d4cc33e97b4.png" alt="image">
 <br> 
 <br> Привет, Хабр!
 <br> 
 <br> Не успела остыть печь после <a href="https://vivaldi.com/ru/blog/vivaldi-3-6-double-tab-bar-ru/" rel="noopener">выхода десктопной версии Vivaldi</a> на прошлой неделе, а мы уже испекли новую мобильную версию — Vivaldi 3.6 для Android. В данном релизе мы добавили несколько интересных функций, которые относятся не столько к собственно браузеру, сколько к внешнему его окружению. Итак, начнём с наиболее заметных и интересных новинок.
 <br> <a name="habracut"></a>
 <br> 
 <h2>Эффектный просмотр</h2>
 <br> Бывает так, что вид просматриваемой веб-страницы вам чем-то не нравится. Мелочь, но она отвлекает от собственно содержимого и вообще может испортить настроение в особо сложных случаях. Но теперь есть способ попытаться это исправить. В новой версии появилась функция, знакомая всем нам по десктопной версии — эффекты страницы. По сути это набор JavaScript, позволяющих на лету менять отображение просматриваемых веб-страниц или добавлять к ним полезные элементы. Например, вы можете включить полупрозрачную карту веб-страницы, чтобы понимать, сколько ещё вам осталось читать:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/3c8/daf/b83/3c8dafb83841c96ffcc2022284a4f8fb.jpg" width="320" height="631">
 <br> 
 <br> Или, например, вы можете инвертировать цвета страницы — может быть, в таком варианте она окажется более комфортной для чтения:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/a35/ecf/d62/a35ecfd62e7576d5aba29dbdc1ba0f62.jpg" width="320" height="631">
 <br> 
 <br> А включение CSS отладчика поможет разобраться со сложной иерархией элементов, составляющих просматриваемую веб-страницу:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/49f/5bf/843/49f5bf843a666e306ae11855d7dc0675.jpg" width="320" height="631">
 <br> 
 <br> Данные эффекты можно включать как по отдельности, так и в комбинации с другими эффектами. Доступ к функции осуществляется через главное меню браузера, но только при открытой активной веб-странице.
 <br> 
 <br> 
 <h2>Золотая середина</h2>
 <br> В прошлый раз, когда мы меняли отображение ячеек на Экспресс-панели, мы начали получать вопросы сразу с двух сторон. Одни жаловались на то, что ячейки слишком большие, а другие сетовали на их малый размер. Днями и ночами наш аналитический отдел ломал голову над этой дилеммой, пытаясь разгадать секрет пользовательских предпочтений. Пришлось подключить к решению Компьютер с Искусственным Интеллектом, который через три дня выдал ответ — «нужны ячейки среднего размера». Удивительное и неожиданное открытие! И вот теперь такая опция есть в браузере — вы можете выбрать в настройках средний размер ячеек:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/aa5/be5/145/aa5be5145ec34199cbdc861631a4be50.jpg" width="320" height="631">
 <br> 
 <br> А вслед за этим прорывным решением потянулись и соответствующие идеи — ведь с новым видом ячеек нужно что-то делать. Ну, не знаю, двигать там по-всякому, сортировать. Ещё очень интересно — а что будет, если одну ячейку перетащить пальцем поверх другой? В общем, мы дали разработчику компьютер и решили посмотреть, что получится. В итоге теперь вы можете простым движением пальца по экрану перетаскивать ячейки Экспресс-панели, сортировать их, а если навести одну ячейку на другую, то вообще получится новая папка. Сплошные чудеса, XXI век.
 <br> 
 <br> Разработчик так обрадовался компьютеру, что в качестве бонуса добавил ещё и сортировку ячеек по различным смешным параметрам — по описанию, по адресу, даже по дате создания! Понятно, что это никому не нужно, но ведь забавно же, правда?
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/efb/74e/308/efb74e3086b4168f16e3fb9873a5c247.jpg" width="320" height="631">
 <br> 
 <br> Собственно кнопка с опциями сортировки притаилась прямо на Экспресс-панели, в верхнем правом углу.
 <br> 
 <br> 
 <h2>Нашёл — передай другому</h2>
 <br> Ещё одна функция также относится к взаимодействию с некими внешними объектами, причём, в двух направлениях. Довольно часто мы находим в сети некие интересные или важные данные, которые хотим сохранить локально для дальнейшей работы с ними. Для этого нужно загрузить соответствующие файлы с помощью загрузчика. До последнего времени вы могли использовать встроенный в браузер менеджер загрузок — он простой и неприхотливый, и вполне справляется со своей работой. Но многие пользователи уже привыкли для таких задач устанавливать в мобильные устройства специализированные приложения, обладающие мощным функциональным разнообразием. Поэтому в новой версии Vivaldi мы добавили возможность интеграции браузера с приложениями для загрузки файлов.
 <br> 
 <br> Для доступа к этой опции откройте менеджер загрузок браузера и нажмите на иконку с шестерёнкой в правом нижнем углу — откроется меню настроек, через которое вы и сможете выбрать ваш предпочтительный загрузчик:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/6f6/272/565/6f62725658075b05f72fea7c997edeef.jpg" width="320" height="270">
 <br> 
 <br> 
 <h2>Читаем послания из параллельного мира</h2>
 <br> Современная цифровая индустрия уже похожа на отдельный мир — машины обмениваются непонятными большинству людей сигналами и посланиями, которые больше похожи на шифровки или сведения стратегического характера. Но владельцев браузера Vivaldi так просто не возьмёшь — теперь в их браузер встроен сканер QR и штрихкодов, который поможет разоблачить хитрые планы машин по захвату мира. Секретная кнопка активации сканера находится прямо в адресной строке — просто переведите фокус в адресную строку одним касанием, и иконка сканера появится в правой части:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/ff0/c02/1e7/ff0c021e767027995cbd2d0aa20ed06f.jpg" width="320" height="153">
 <br> 
 <br> На этом пока всё. Ждём ваших отзывов и пожеланий, загрузить новую версию браузера Vivaldi 3.6 для Android можно по ссылкам ниже.
 <br> 
 <br> <a href="https://play.google.com/store/apps/details?id=com.vivaldi.browser"><img src="https://habrastorage.org/getpro/habr/post_images/14d/f6f/336/14df6f336ae6fbe7c1287b4df690da0b.png" width="220" height="85"></a>
 <br> 
 <br> <a href="https://vivaldi.com/wp-content/uploads/8-qr-code.png"><img src="https://habrastorage.org/getpro/habr/post_images/ce4/bd1/3fa/ce4bd13fa691a2b91341e0502ca8fa34.png" width="220" height="221"></a>
</div>', '2021-02-04 10:49:00', 'Vivaldi 3.6 для Android — Внешние связи', 22, null, 2),
        (38, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>«Медиалогия» <a href="https://www.rbc.ru/technology_and_media/05/02/2021/601bd5dd9a79470b25b108a2" rel="noopener noreferrer nofollow">представила</a> статистику употребления ненормативной лексики в российских соцсетях после вступления в силу поправок о запрете мата. Выяснилось, что таких выражений стало только больше. Всего за 1–2 февраля во «ВКонтакте», «Одноклассники», Facebook, Twitter и Instagram россияне опубликовали 646,1 тысяч постов с обсценной лексикой. </p>
 <p>Если сопоставить эти данные с периодом 3–4 февраля 2020 года (тоже будни), то в предыдущем году было опубликовано 426,5 тысяч постов с нецензурными словами.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a0b/82f/5ca/a0b82f5cab9dcec6c856e544716d8668.jpg" width="1290" height="710">
  <figcaption></figcaption>
 </figure>
 <p>Год назад пользователи обсуждали новость о том, что коронавирус пришел в Россию, а также обрушение крыши стадиона в Санкт-Петербурге и вручение блокадникам батонов, а теперь основными темами дискуссии стали задержание Алексея Навального и митинги. </p>
 <p>Примечательно, что за неделю до вступления в силу новых поправок, в период 25–26 января насчитывалось 631,3 тысяч публикаций с матом. Агентство «Социальные сети» считает, что сам запрет на нецензурную брань спровоцировал ее рост в соцсетях в качестве ответной реакции. Предыдущий всплеск публикации матерных постов был зафиксирован 22–23 января на фоне новости о скором вступлении поправок в силу. </p>
 <p>В качестве ответа пользователи, как отметили в агентстве, стали менять буквы местами, использовать кириллицу вместе с латиницей, применять символы, цифры и ребусы, использовать анимацию и изображения «с намеком». </p>
 <p>Поправки в закон «Об информации, информационных технологиях и о защите информации» <a href="https://habr.com/ru/news/t/540218/" rel="noopener noreferrer nofollow">вступили</a> в силу 1 февраля. Согласно им, соцсети обязаны в течение суток удалять публикации с незаконным контентом, в том числе и с нецензурной бранью. На площадки ложится обязанность мониторинга такого контента. Роскомнадзор создаст реестр, участники которого подпадают под действие закона. В целом, поправки коснутся всех площадок, где пользователи создают персональные страницы и обмениваются сообщениями и суточная посещаемость которых выше 500 тыс. человек в сутки с территории РФ. </p>
 <p>По данным источника РБК, РКН пока не запрашивал и не планирует в ближайшее время требовать от соцсетей отчета по мониторингу. Подзаконные акты, необходимые для реализации закона, пока готовятся, и их планируется принять к концу марта. </p>
 <p>Ответственности за нарушение поправок пока тоже <a href="https://habr.com/ru/news/t/534688/" rel="noopener noreferrer nofollow">не предусмотрено</a>. Но соцсети можно оштрафовать по статье 13.41 КоАП. Санкции предусматривают штраф на сумму от 800 тыс. до 4 млн руб. </p>
 <p>Как объясняют юристы, нынешние поправки не обязывают соцсети предоставлять Роскомнадзору отчет о каждом факте блокировки, однако требуют ежегодного отчета о мониторинге. Плюс, к «недопустимой информации» напрямую не отнесены матерные материалы, а относится информация, «выраженная в неприличной форме, которая оскорбляет человеческое достоинство и общественную нравственность». Юристы сходятся в том мнении, что закон будет применяться выборочно.</p>
</div>', '2021-02-05 10:25:00', 'Соцсети ответили матом на его запрет', 99, null, 10),
        (39, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/getpro/habr/post_images/654/150/318/6541503187f950a8e4e4ad588e431260.jpg" alt="image">
 <br> 
 <br> 5 февраля 2021 года Mozilla <a href="https://www.mozilla.org/en-US/firefox/85.0.1/releasenotes/" rel="nofollow noopener noreferrer">выпустила</a> обновление Firefox — версию 85.0.1. Разработчики браузера исправили баг с повреждением файловой системы NTFS в Windows 10. Ошибку теперь нельзя вызвать из адресной строки браузера. В прошлых версиях Firefox ее можно было вызвать с помощью однострочной команды. 
 <br> <a name="habracut"></a>
 <br> Mozilla вставила в код браузера <a href="https://hg.mozilla.org/mozilla-central/rev/ca17538f31ff62a0c6769ff0cd8d2af317a4549e" rel="nofollow noopener noreferrer">изменение</a>, которое запрещает использовать в команде синтаксис '':$'' в именах файлов.
 <br> 
 <br> 
 <pre><code class="javascript">+
+  iter = begin;
+  // Any use of '':$'' is illegal in filenames anyway; while we support some
+  // ADS stuff (ie ":Zone.Identifier"), none of them use the '':$'' syntax:
+  if (FindInReadable(u":$"_ns, iter, end)) {
+    return true;
+  }
+
</code></pre>
 <br> Уязвимость, связанную с атрибутом индекса Windows NTFS или строки ''$ i30'', была <a href="https://habr.com/ru/news/t/537328/">обнаружена</a> экспертом Джонасом Л. Баг в драйвере Windows NTFS мгновенно производит повреждение файловой системы NTFS на жестком диске во всех версиях Windows 10, начиная с 1803 и выше, включая 20H2, а также Windows XP. Сразу после его отработки Windows 10 предлагает пользователю перезагрузить ПК, чтобы восстановить поврежденные записи и исправить индексацию на диске. В некоторых случаях после использования уязвимости повреждается MFT и перестает загружаться ОС. Microsoft в курсе этой проблемы. Компания до сих пор не выпустила патч с устранением этой ошибки.
 <br> 
 <br> По <a href="https://www.bleepingcomputer.com/news/software/mozilla-fixes-windows-10-ntfs-corruption-bug-in-firefox/" rel="nofollow noopener noreferrer">информации</a> Bleeping Computer уязвимость можно активировать из командной строки Windows 10 или из браузера Chrome. Баг доступен не только из под администратора, его может использовать любой пользователь Windows 10 с низкими привилегиями в системе. Уязвимость в драйвере Windows NTFS можно активировать удаленно, а также встраивать в HTML.
 <br> 
 <br> В конце января этого года разработчики компании OSR <a href="https://habr.com/ru/news/t/539354/">выпустили</a> неофициальный патч, который помогает предупредить и запретить активацию серьезной уязвимости в драйвере Windows NTFS во всех версиях Windows 10. Заплатка под названием <a href="https://github.com/OSRDrivers/i30Flt" rel="nofollow noopener noreferrer">i30Flt</a> является фильтром, который блокирует любые попытки системы открыть поток, который начинается с «:$i30:».
</div>', '2021-02-07 09:04:00', 'Mozilla патчем Firefox закрыла возможность вызвать баг для повреждения файловой системы NTFS в Windows 10', 29, null, 8),
        (40, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Привет, Хабр! Бывают случаи, когда приходят заказчики, которые до тебя уже «хлебнули сполна». Проект, о котором пойдет речь ниже, один из таких. Заказчик – крупное производственное предприятие, а если быть точным, то целая группа компаний. И хотя изначально мы обсуждали с ним систему защиты от утечек Solar Dozor и сервис мониторинга и реагирования на кибератаки Solar JSOC, гораздо большее внимание в тот момент привлекла наша IGA-система Solar inRights. Почему? Расскажем под катом.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d4f/44e/6fb/d4f44e6fbcfd0ba0f09756242ba3e93e.jpg" alt="Иллюстрация: кадр из м/ф «Ну Погоди!»" title="Иллюстрация: кадр из м/ф «Ну Погоди!»" width="604" height="453">
  <figcaption>
   Иллюстрация: кадр из м/ф «Ну Погоди!»
  </figcaption>
 </figure>
 <h3>Небольшая предыстория (разбираемся, чего хлебнул заказчик)</h3>
 <p>Организация хотела автоматизировать функции по созданию и изменению учетных записей и ролей: оперативно получать информацию о текущих доступах сотрудника и на любой момент в прошлом, автоматизировать жизненный цикл учетных записей, настроить плавный переход доступов при переводе в другое ДЗО, хранить данные о сотрудниках и их правах в одном месте и т.д.</p>
 <p>Заказчик использовал самописные скрипты в качестве лоскутной автоматизации отдельных функций, связанных с обеспечением прав доступа. Как это водится, скрипты справлялись с точечными болями. Однако с развитием компании потребность в автоматизации все больше росла, а желания дописывать скрипты, которые постепенно превращались в тяжеловесный нечитаемый код, не было.</p>
 <p>Так заказчик обратился к компании «Бублик» (все названия вымышлены, любое совпадение с реальными являются случайностью). Итак, «Бублик» продал свое IDM-решение и, утвердив детали, взялся за проект. Шло время, «Бублик» что-то делал, а результата все не было и не было видно. Продукт не оправдывал возложенных на него надежд. Когда силы, инвестированные заказчиком в этот проект, стали подходить к концу, мы обсудили внедрение нашей системы IGA. ИТ-отдел заинтересовался предложением и дал нам два месяца на пилотное тестирование.</p>
 <p>Стоит сказать, что в тот момент производственное предприятие также посматривало в сторону SAP GRC в качестве инструмента автоматизации прав доступа и полномочий в системах SAP. Но стоимость SAP GRC сильно уменьшила привлекательность этого решения в глазах заказчика.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/727/be1/65e/727be165e5d077c7a10bcaa51258fed1.jpg" alt="Иллюстрация: кадр из м/ф «Алладин»" title="Иллюстрация: кадр из м/ф «Алладин»" width="1200" height="628">
  <figcaption>
   Иллюстрация: кадр из м/ф «Алладин»
  </figcaption>
 </figure>
 <h3>Интеграция</h3>
 <h4>MS Active Directory</h4>
 <p>Первое, что должен узнать заказчик до внедрения IGA — если автоматизировать хаос, мы получим автоматизированный хаос. Компании зачастую этого просто не понимают, а мы слишком хорошо знакомы с такими кейсами, поэтому всегда стартуем с приведения в порядок информации в AD. Стоит сделать комплимент заказчику, потому что данные в кадровом источнике и AD велись структурно, орг.юниты упорядочены, карточки пользователей заполнены. Используется система идентификации по СНИЛС — очень элегантное решение для исключения ошибок при сопоставлении данных КИ и AD. Например, если в качестве идентификатора используют табельный номер и, допустим, какой-то сотрудник совмещает несколько должностей, учетные записи могут задваиваться. В общем, таких проблем не было, все довольно аккуратно лежало на своих местах, и это позволило нам быстро проскочить этот этап.</p>
 <p>До этой интеграции внешний скрипт получал информацию из кадровой системы и создавал учетные записи в AD. После — эту функцию взяла система IGA, позволив задавать разные базовые права для пользователей разных подразделений, причем через визуальный интерфейс. Новые сотрудники по умолчанию наделялись как стандартными для всех правами доступа, так и правами конкретных подразделений (например, диск, SharePoint, корпоративная рассылка и т.д.).</p>
 <p>Кстати, подробнее о том, как построить ролевую модель управления доступом, мы писали ранее (<a href="https://bit-ly.ru/95B6T">здесь</a> и <a href="https://bit-ly.ru/SLnGH">здесь</a>).</p>
 <h4>MS Exchange</h4>
 <p>Интеграция с Exchange позволила заводить почтовые адреса сотрудникам через IGA. Раньше это тоже делалось через скрипт, но Solar inRights в дополнение дал возможность настраивать уровни дифференциации в зависимости от категории пользователя и автономно наделять адреса ограничениями по объему хранения. Для руководителей отделов и департаментов — один объем памяти, для сотрудников без подчиненных — другой. При этом настройки позволяют наделять определенным объемом почтовые адреса не только на основании иерархичности должностей, но и на основании принадлежности к определенному подразделению.</p>
 <h4>MS Skype for business </h4>
 <p>При создании учетной записи в AD пользователям автоматически создаются учетные записи в Skype и выдаются права звонить друг другу в корпоративной версии системы.</p>
 <h4>Четыре SAP-системы. Подходим к самому интересному</h4>
 <p>У заказчика было четыре системы SAP: ERP, CRM, SRS, TM. Как раз для них он рассматривал SAP GRC, чтобы централизованно управлять учетными записями всех систем и автоматически каталогизировать структуру ролей.</p>
 <p><strong>1. Вычитка данных из внешних источников</strong></p>
 <p>Команда заказчика приняла решение отказаться от внедрения системы управления учетными записями от SAP в пользу IGA от «Ростелеком-Солар». Был один нюанс: наша система не могла автоматически каталогизировать структуру ролей из внешних файлов. Она позволяла создавать каталоги ролей и назначать их пользователям вручную, но не умела вычитывать данные о структуре каталогов из внешних источников.</p>
 <p>По запросу заказчика мы доработали IGA, добавив загрузку иерархии каталогов из внешних источников. Появилось два новых скрипта. Первый втягивает каталог с информацией о базовых ролях подразделений и должностей. Второй отмечает, какая роль SAP к какому каталогу и к какому бизнес-процессу относится, и воссоздает необходимую иерархию в IGA. Оба скрипта проверяли загружаемые данные на корректность и полноту. Механизмы валидации ловят ошибочки: скрипт находит некорректные названия каталогов, неправильно составленные каталоги и др. За несколько итераций загружаемые файлы привели в порядок.</p>
 <p>У заказчика появилась возможность согласовывать набор базовых ролей (допустим, в .excel) и загружать файл через удобный пользовательский интерфейс в IGA. После этого система автоматически пересчитывает состав базовых ролей, если возникает необходимость в его обновлении, и выдает пользователям измененный состав ролей.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b5b/2e6/137/b5b2e61377fe306fccffabce65958fa7.jpg" width="1428" height="323">
  <figcaption></figcaption>
 </figure>
 <p><strong>2. Прорабатываем все нюансы с доступом</strong></p>
 <p>Совместно с SAP-командой заказчика мы разработали проектное решение по интеграции IGA. Описали те методы, которые необходимо реализовать, и те данные, которыми должны обмениваться системы. Мы проработали набор штатных правил по предоставлению доступов, но внештатных кейсов, которые тоже нужно было учесть, оказалось много.</p>
 <p>Обычно админы систем управления доступом делятся деталями штатной работы системы, но всегда есть нюансы. Эти нюансы сидят в них как скрытые знания, которые открываются только по случаю. Администраторы понимают, что если придет такой запрос, то конкретно этому пользователю именно этого отдела и только в этом случае надо предоставить доступ вот к этому (?).</p>
 <p>Около трех месяцев мы совместно с админами компании прорабатывали нюансы. Когда начинали автоматизировать кейс и писать к нему соответствующий атрибут, возникали вопросы, а почему вообще его надо дописывать, почему этим людям, кому еще и в каких случаях. При этом ожидать, что всегда-всегда в основе кейса лежит логика или закономерность, не следует. Иногда это просто аксиома, которую мы должны принять бездоказательно.</p>
 <p><strong>3. Пишем коннектор к SAP</strong></p>
 <p>У нас не было штатного коннектора к SAP – инструмента, который позволял бы централизованно взаимодействовать нескольким SAP-системам – и поэтому мы его написали сами. Чтобы не плодить четыре типовых коннектора к каждой из SAP-систем, мы сделали интеграцию одним коннектором через шину SAP PI/PO, которая маршрутизирует запросы, к системам SAP, по ряду критериев определяет, в какую из систем его отправить, и возвращает ответ.</p>
 <h4>Два экземпляра 1С в WMS</h4>
 <p>Мы провели обследование, согласовали протокол взаимодействия систем, разработали коннектор 1С и провели интеграцию. В тот момент, когда мы первый раз показали заказчику, как все это работает, помимо ролей он попросил указывать также номер склада, к которому эти роли относятся. Поскольку номер склада – это атрибут пользователя, пришлось дорабатывать концепцию интеграции и коннектор к 1С.</p>
 <p>На выручку пришла гибкость нашей системы, которая позволила за счет метаролей сделать управление полем склада. Поскольку сам склад – это не роль, а просто атрибут, мы на стороне IGA создали 5 ролей, которые назывались «склад 1», «склад 2», «склад 3» и т.д. При назначении пользователю роли «склад» в атрибут прописывался конкретный идентификатор склада, в котором он выполняет операции под теми ролями, которые ему назначены. Таким образом, на стороне IGA была информация о том, на каком складе работает пользователь, которая передавалась автоматически в 1C.</p>
 <p>Эта интеграция подтолкнула нас к разработке собственного функционального расширения для платформ 1С и прохождению сертификации совместимости коннектора IGA Solar inRights с разными конфигурациями 1С, которую мы получили в конце 2020.</p>
 <h4>Кадровые источники – две системы кадрового учета на платформе 1С версии 7</h4>
 <p>У заказчика несколько источников кадровых данных, поэтому ему требовалось автоматизированное объединение информации в единую кадровую выгрузку. Наш механизм, каждые 30 минут обрабатывал кадровые источники и обновлял выгрузку.</p>
 <h4>Послесловие</h4>
 <p>Пост начинался с рассказа о негативном опыте заказчика, и несмотря на то, что процесс интеграции не бывает простым, нам удалось преодолеть скептицизм, который сформировался после затянувшейся и в итоге несостоявшейся интеграции IDM от другого вендора. Подводя итоги проекта, заказчик оценил работу нашей команды на 9 баллов из 10. Мы остались довольны взаимодействием с ИТ-командой компании и результатами интеграции.</p>
 <p><em>Итоги проекта в цифрах:</em></p>
 <div>
  <div class="table">
   <table>
    <tbody>
     <tr>
      <td data-colwidth="397" width="397"><p>Общее количество пользователей</p></td>
      <td><p>14 200</p></td>
     </tr>
     <tr>
      <td data-colwidth="397" width="397"><p>Количество учётных записей, которыми управляем<br><em>Остальные в статусе «Уволен»</em></p></td>
      <td><p>~ 12 000</p></td>
     </tr>
     <tr>
      <td data-colwidth="397" width="397"><p>Количество ролей, которыми управляем</p></td>
      <td><p>7 300</p></td>
     </tr>
     <tr>
      <td data-colwidth="397" width="397"><p>Количество подключенных управляемых ИС</p></td>
      <td><p>9</p></td>
     </tr>
     <tr>
      <td data-colwidth="397" width="397"><p>Количество подключенных кадровых источников</p></td>
      <td><p>2</p></td>
     </tr>
    </tbody>
   </table>
  </div>
 </div>
 <p>Мораль истории: правильно выстроенная работа команд интегратора и заказчика – половина успешного внедрения :)</p>
 <p><em>Автор: Максим Мордачев, руководитель проектов Solar inRights компании «Ростелеком-Солар»</em></p>
</div>', '2021-02-09 10:00:00', 'Кейс внедрения IGA-системы в крупном производственном предприятии', 74, null, 10),
        (41, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a93/ad8/8b7/a93ad88b735a95d351f5d783dcf031de.png" width="1200" height="628">
  <figcaption></figcaption>
 </figure>
 <p>Развитием языка программирования Rust займется некоммерческая организация Rust Foundation. Новый фонд создали AWS, Huawei, Google, Microsoft и Mozilla. Уже сформирован бюджет на два года работы фонда, он составит миллион долларов.</p>
 <p>Rust разрабатывался Грэйдоном Хором из Mozilla Research при участии создателя JavaScript Брендана Эйха. Rust стал основным языком для некоторых фундаментальных функций браузера Firefox и его движка Gecko. Из-за сокращений штата сотрудников Mozilla в последние месяцы часть команды Rust потеряла работу, и будущее языка без спонсорства стало неясным.&nbsp;</p>
 <p>Rust Foundation — автономная некоммерческая организация. В ее совет директоров войдут представители компаний-учредителей — AWS, Huawei, Google, Microsoft и Mozilla — а также пять человек от руководства проекта Rust. Первое заседание правления состоится 9 февраля.&nbsp;</p>
 <p>«Mozilla передала все торговые марки и активы инфраструктуры, включая реестр пакетов на crates.io, в Rust Foundation. Мы благодарны Mozilla; компания взращивала Rust в качестве исследовательского проекта до выпуска первой стабильной версии в 2015 году. И теперь мы выступаем в качестве полностью независимой организации», — <a href="https://blog.mozilla.org/blog/2021/02/08/mozilla-welcomes-the-rust-foundation/" rel="noopener noreferrer nofollow">написал Бобби Холли</a>, член правления Rust Foundation.</p>
 <p>Все компании-спонсоры проекта заинтересованы в Rust и используют его для своих целей. Google недавно заявила, что профинансирует проект на основе Rust, который нацелен на повышение безопасности веб-сервера Apache.</p>
 <p>«В Android мы обнаружили, что более половины уязвимостей, которые мы исправили в 2019 году, возникли из-за ошибок безопасности памяти. Rust доказал свою эффективность в обеспечении дополнительного уровня защиты во многих средах, включая браузеры, игры и библиотеки. Мы рады расширить как наше использование Rust в Google, так и наш вклад в Rust Foundation и экосистему Rust», — <a href="https://opensource.googleblog.com/2021/02/google-joins-rust-foundation.html" rel="noopener noreferrer nofollow">сообщается в блоге компании</a>.</p>
 <p>Microsoft также <a href="https://cloudblogs.microsoft.com/opensource/2021/02/08/microsoft-joins-rust-foundation/" rel="noopener noreferrer nofollow">сформировала команду</a> Rust и использует этот язык для переписывания некоторых основных API Windows. Amazon Web Services запустила Bottlerocket, Linux-дистрибутив, инструментарий которого, в основном, написан на Rust. <a href="https://aws.amazon.com/es/blogs/opensource/congratulations-rustaceans-on-the-creation-of-the-rust-foundation/" rel="noopener noreferrer nofollow">В самой AWS подчеркивают</a>, что Rust «критически важен» для создания инфраструктуры AWS.&nbsp;</p>
 <p>«Мы используем Rust для таких сервисов, как Amazon Simple Storage Service, Amazon Elastic Compute Cloud, Amazon CloudFront и других. Причина, по которой инженеры AWS выбирают Rust, заключается в том, что он позволяет им гораздо быстрее и с меньшими затратами разрабатывать сервисы, соответствующие высоким стандартам качества и безопасности».</p>
</div>', '2021-02-09 14:02:00', 'Google, Microsoft, Huawei, Mozilla и AWS основали Rust Foundation', 4, null, 5),
        (42, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Кажется, мы <a href="https://habr.com/ru/company/audiomania/blog/538548/">рассказали о Clubhouse</a> за пару недель до того, как он успел надоесть большей части русскоязычного веба. Дело в том, что недавнее появление Илона Маска в голосовых комнатах нового аудиопроекта вызвало невиданную волну интереса: в Facebook и других соцсетях все начали делиться друг с другом инвайтами и приглашать друзей немедленно присоединиться к обсуждениям в Clubhouse. Дошло до того, что в эфир стали выходить топ-менеджеры ведущих российских компаний, а в мире к трансляциям подключились сотни знаменитостей вроде Канье Уэста и других звезд музыкальной индустрии и мира кино. Несмотря на то что хайп затронул исключительно iOS-аудиторию, этого хватило, чтобы привлечь внимание команды Facebook, которая — <a href="https://www.nytimes.com/2021/02/10/technology/facebook-building-product-clubhouse.html">по данным</a>&nbsp;The New York Times — начала разработку аналогичного функционала.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/82f/7a4/1ca/82f7a41ca7cda226ac40ce7ecf5181e1.jpeg" alt="Фотография: Josh Rose. Источник: Unsplash.com" title="Фотография: Josh Rose. Источник: Unsplash.com" width="2000" height="1472">
  <figcaption>
   Фотография: Josh Rose. Источник: Unsplash.com
  </figcaption>
 </figure>
 <h2>Копируй как Марк</h2>
 <p>Clubhouse девять месяцев, и он уже переживает кризис. Локальный «<a href="https://habr.com/ru/company/audiomania/blog/538548/">харассментгейт</a>» поставил на повестку дня вопрос о необходимости модерации аудиоконтента — теперь команда всерьез задумывается о хранении записей разговоров на случай разбирательств и жалоб пользователей. Еще один казус заключается в том, что несмотря на постоянное обсуждение проекта в медиа и соцсетях, аудитория большей части его голосовых комнат не может и близко приблизиться к YouTube-стримам или показателям популярных подкастов. Получается, что обыватель еле-еле привлекает пару десятков подписчиков и фактически оказывается в ситуации очередного скайп-колла или зум-конференции, но только c достаточно низким качеством звука, а в эфирах с тысячами участников — он выступает по большей части в роли простого статиста.</p>
 <p>Даже те, кто две недели назад пытался попасть в ряды Clubhouse-спикеров, сейчас задаются закономерными вопросами о том, как найти время на прослушивание такого количества прямых трансляций, стоит ли это делать и инвестировать силы в то, чтобы сделать свой контент действительно полезным для слушателей. Пока маркетологи и пиарщики размышляют над ответами, готовят руководства и гайды, соцсеть постепенно движется к новому кризису.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c05/92f/f95/c0592ff953fcb485ff34dcd6adbb3a95.jpeg" alt="Фотография: William Krause. Источник: Unsplash.com" title="Фотография: William Krause. Источник: Unsplash.com" width="2000" height="1424">
  <figcaption>
   Фотография: William Krause. Источник: Unsplash.com
  </figcaption>
 </figure>
 <p>Но даже он не помешает Facebook «клонировать» проект или его определенные части — по версии NYTimes, компания Марка Цукерберга заинтересовалась Clubhouse и готовится представить ряд похожих возможностей для собственной социальной платформы. Эти планы изданию <a href="https://www.nytimes.com/2021/02/10/technology/facebook-building-product-clubhouse.html">подтвердили</a> два источника, сообщив о соответствующих распоряжениях руководства.</p>
 <p>Как заметили журналисты, такой подход нельзя назвать новым. В 2016-м аналогичным образом в Facebook и Instagram <a href="https://techcrunch.com/2017/04/18/will-snap-copy-the-fb-platform/">появились</a> истории и селфи-маски, ставшие трендом благодаря усилиям Snapchat, а в конце прошлого года — так называемые <a href="https://techcrunch.com/2020/06/24/instagram-expands-its-tiktok-clone-reels-to-new-markets/">Reels</a> — короткие видео, которые многим <a href="https://techcrunch.com/2021/02/03/instagram-confirms-its-working-on-a-vertical-stories-feed/">напоминают</a> ролики из TikTok’а. Пока представители Clubhouse не комментируют слухи, но все идет к тому, что их опыт популяризации аудиоконтента используют в сторонних продуктах.</p>
 <h2>Конкурируй как Тим</h2>
 <p>Достаточно агрессивный подход к развитию крупнейших платформ сегодня <a href="https://www.businessinsider.com/facebook-breakup-restoring-competition-regulation-experts-say-2021-1">привлекает</a> не только внимание регуляторов, которые все чаще говорят о разделении крупнейших медиаплатформ на более компактные и управляемые проекты, но и потенциальных конкурентов из мира ИТ. Так — по случайному совпадению — две недели назад на одной из профильных конференций Тим Кук <a href="https://appleinsider.com/articles/21/01/28/apple-ceo-tim-cook-indirectly-calls-out-facebooks-business-model">раскритиковал</a> бизнес-модели, базирующиеся на эксплуатации пользовательских данных. Он не не упоминал Facebook, однако многие предположили, что речь шла именно об этой соцсети.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9d5/cf0/77a/9d5cf077a32a9176d1eb019b473e70c1.jpg" alt="Фотография: B Rosen. Источник: Flickr.com" title="Фотография: B Rosen. Источник: Flickr.com" width="2000" height="1339">
  <figcaption>
   Фотография: B Rosen. Источник: Flickr.com
  </figcaption>
 </figure>
 <p>В этом свете Clubhouse и его монофункциональные аналоги действительно <a href="https://forum.ei2030.org/t/clubhouse-for-x-the-emerging-trend-of-audio-only-applications/99/2">выглядят</a> перспективно. Другое дело, что им еще предстоит разобраться в <a href="https://news.ycombinator.com/item?id=25826819">задачах</a> пользователей и адаптировать интерфейсы, исходя из той динамики, которую команда наблюдает в настоящий момент. Есть ли конкуренты и жизнеспособные альтернативы у Clubhouse — разберемся в одном из следующих материалов, где мы поговорим о социальной сети Audlist, проекте High Fidelity и парочке других разработок, которые могут заинтересовать аудиторию Хабра.</p>
 <hr>
 <p>Что еще у нас есть для дополнительного чтения:</p>
 <ul>
  <li><p><a href="https://www.audiomania.ru/content/art-6672.html">«Блеск и нищета»: еще немного о том, как зарабатывают на жизнь музыканты</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-7891.html">«Борьба за права или атмосфера паранойи»:в мире музыки еще выбирают</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-7955.html">«Плейлистификация» захватила умы паблишеров музыки и подкастов</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-6678.html">«От критиков к алгоритмам»: затухающий голос элит в мире музыки</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-7962.html">«Пиратство или монополия»: чего музыканты боятся больше</a></p></li>
 </ul>
 <hr>
</div>', '2021-02-14 13:02:00', 'Аудиосоцсети только-только вошли в тренды, но уже успели всем надоесть — обсуждаем ситуацию', 88, null, 3),
        (43, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/338/1b6/0bb/3381b60bbd792f09502521f97d44c783.jpg" width="1920" height="1080">
  <figcaption></figcaption>
 </figure>
 <p>Компании Microsoft, Google и Qualcomm выразили недовольство тем, что Nvidia приобретает Arm и обратились к регуляторам в США, ЕС, Великобритании и Китае, сообщают <a href="https://www.cnbc.com/2021/02/12/qualcomm-objects-to-nvidias-40-billion-arm-acquisition.html" rel="noopener noreferrer nofollow">CNBC</a> и <a href="https://www.bloomberg.com/news/articles/2021-02-12/google-microsoft-qualcomm-protest-nvidia-s-arm-acquisition?sref=ExbtjcSG" rel="noopener noreferrer nofollow">Bloomberg</a>. По данным изданий, компании опасаются, что Nvidia может потребовать от Arm изменить порядок лицензирования своих чипов.&nbsp;</p>
 <p>Nvidia утверждает, что не будет использовать контроль над Arm с целью изменить её взаимодействие с другими компаниями. В частности, генеральный директор Nvidia Дженсен Хуанг говорил в своём письме Financial Times, что открытая модель лицензирования Arm сохранится — по его словам, у компании нет цели «задушить» конкурентов или «отказать» в поставке чипов клиентам. Он заявил, что у Nvidia нет необходимости нарушать нейтралитет относительно порядка лицензирования чипов для других компаний.&nbsp;</p>
 <p>Тем не менее, конкуренты Nvidia всерьёз обеспокоены сделкой — по их мнению, компания вряд ли будет заинтересована в сохранении нейтральности на рынке после того, как заплатит за покупку Arm $40 миллиардов. Они отмечают, что ограничения на лицензирования, которые может ввести Nvidia, нанесут серьёзный ущерб конкурентоспособности рынка.&nbsp;</p>
 <p>Компании заинтересованы в том, чтобы порядок лицензирования чипов не менялся — по данным изданий, <a href="https://www.theverge.com/2020/12/18/22189450/microsoft-arm-processors-chips-servers-surface-report" rel="noopener noreferrer nofollow">Microsoft</a> и <a href="https://www.theverge.com/2020/4/14/21221062/google-processor-pixels-chromebooks-whitechapel-samsung-qualcomm" rel="noopener noreferrer nofollow">Google</a> работают над собственными чипами на базе Arm, а процессоры Qualcomm уже основаны на этой архитектуре. Однако конкуренты считают, что Nvidia может ограничить их доступ к технологии или повысить стоимость лицензирования ARM-чипов. Bloomberg утверждает, что как минимум одна из этих компаний настаивает на том, чтобы сделка между Arm и Nvidia не состоялась.&nbsp;</p>
 <p>Антимонопольные регуляторы приняли во внимание жалобы компаний. Как пишет CNBC, американская Федеральная торговая комиссия уже попросила у Nvidia и Arm предоставить больше информации о сделке, а также выразила желание поговорить с представителями конкурентов. В Великобритании и ЕС уже пообещали провести тщательное расследование обстоятельств сделки — один из источников CNBC заявил, что оно будет «очень долгим и болезненным».&nbsp;</p>
 <p>Резкое противодействие сделке со стороны конкурентов может сильно задержать процесс поглощения Arm или вынудить пойти Nvidia на невыгодные для себя уступки. Кроме того, это несёт определённые риски для SoftBank, нынешнего владельца Arm, пишет Bloomberg. Рынок уже отреагировал на сообщения о недовольстве крупных компаний сделкой — в пятницу акции Nvidia на торгах на Нью-Йоркской бирже упали на 3,1%.&nbsp;</p>
 <p>SoftBank <a href="https://habr.com/ru/news/t/518906/" rel="noopener noreferrer nofollow">объявила</a> о продаже Arm Nvidia за $40 миллиардов в сентябре 2020 года. Nvidia приобрела компанию для того, чтобы начать выпускать процессоры под своим брендом и таким образом <a href="https://habr.com/ru/news/t/519248/" rel="noopener noreferrer nofollow">создать конкуренцию</a> Intel и AMD. Практически сразу сделкой заинтересовались антимонопольные органы по всему миру — в январе <a href="https://habr.com/ru/news/t/539052/" rel="noopener noreferrer nofollow">сообщалось</a>, что регуляторы США, Китая и Великобритании проведут расследование. SoftBank и Nvidia понимали, в каких обстоятельствах будет проходить сделка и какова будет реакция антимонопольных регуляторов, поэтому заранее объявили, что она может занять 18 месяцев — намного больше, чем обычный процесс получения одобрения регулирующих органов.</p>
</div>', '2021-02-15 09:20:00', 'СМИ: Microsoft, Google и Qualcomm недовольны тем, что Nvidia покупает Arm', 14, null, 2),
        (44, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Microsoft <a href="https://www.microsoftedgeinsider.com/en-us/whats-new" rel="noopener noreferrer nofollow">анонсировала</a> режим Kids Mode для своего браузера Edge. В нем <a href="https://www.windowscentral.com/microsoft-starts-testing-kids-mode-microsoft-edge" rel="noopener noreferrer nofollow">присутствует</a> несколько функций для защиты детей в интернете. Kids Mode предназначен для детей в возрасте от 5 до 12 лет.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/5dd/f9f/39f/5ddf9f39f369b1a07c9ee4e08c39fd0c.jpg" width="760" height="507">
  <figcaption></figcaption>
 </figure>
 <p>Детский режим развертывается для Edge Insiders на каналах Dev и Canary.</p>
 <p>В этом режиме есть настраиваемые темы браузера и статьи для детей, которые помогут безопасно просматривать веб-страницы. Также включен безопасный поиск Bing и установлена ​​строгая защита от отслеживания действий. </p>
 <p>Детский режим можно запустить с помощью средства выбора профиля в Edge. Для этого не требуется дочерняя учетная запись, поэтому режим легко использовать, если речь идет об общем ПК. </p>
 <p>Для выхода из детского режима требуется пароль. С помощью пароля также можно предоставлять исключения во время просмотра в Kids Mode. </p>
 <p>Родители могут выбирать, к каким сайтам их дети получат доступ. Для этого внедрен «разрешенный список». </p>
 <p>Microsoft планирует со временем добавить в детский режим больше возможностей и функций. Некоторые функции могут обновиться по мере получения отзывов от инсайдеров.</p>
</div>', '2021-02-17 10:20:00', 'Microsoft начала тестировать детский режим в Edge', 24, null, 4),
        (45, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Продолжение цикла статей про редактор ассемблера для ARM микроконтроллеров под компилятор GNU AS</p>
 <p>предыдущая статья <a href="https://habr.com/ru/post/543044/" rel="noopener noreferrer nofollow">Assembler Editor Plus: Первый проект</a></p>
 <p>под катом будет скорее всего много картинок! </p>
 <p>Итак, у нас есть вчерашний проект с настройкой тактирования и глухим циклом, теперь давайте попробуем дописать его таким образом чтобы увидеть результаты работы на светодиодах</p>
 <p>Вспоминаем, что для того чтобы использовать какую либо периферию микроконтроллера нам ее нужно включить, для этого используются регистры RCC</p>
 <p>Поэтому нам нужно добавить модуль работы RCC в наш проект, для этого запускаем добавление модуля в проект (см. предыдущую статью если не знаете как)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/450/911/9c8/4509119c874796f067e295048a9762ae.jpg" width="1015" height="571">
  <figcaption></figcaption>
 </figure>
 <p>RCC находится в блоке PERIPH микроконтроллера, поэтому идем по дереву "PERIPH" - "Reset and clock control (RCC)" и тут появляются варианты:</p>
 <ul>
  <li><p>можно добавить просто файл определений RCC где будут описаны все регистры RCC и их возможные значения</p></li>
  <li><p>можно добавить уже готовый модуль настройки тактирования GPIO, который нам добавит модуль RCC и одновременно предоставит интерфейс включения/выключения GPIO</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bd6/dbe/944/bd6dbe944a80bef975e0818253ac08a6.jpg" width="1086" height="571">
  <figcaption></figcaption>
 </figure>
 <p>При нажатии установить у вас будет запрошен путь и имя для сохранения файла модуля настройки тактирования, поскольку это периферия, то для того чтобы избежать неизбежной энтропии вселенной, лучше этот файл настройки сохранить по какому нить осмысленному пути, я выбрал путь src\\periph\\rcc</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/58d/01e/473/58d01e4730ef449596fb6f9918bbae48.jpg" width="1001" height="796">
  <figcaption></figcaption>
 </figure>
 <p>в модуле видим строки включения и выключения периферии портов ввода вывода</p>
 <p>теперь самое время взглянуть в документацию нашей отладочной платы для того чтобы определить к какому GPIO подключены светодиоды</p>
 <p>у меня это сегодня отладочная плата Open407I-C, как уже писал в предыдущих статьях, в варианте Easy пакета редактора, посмотреть даташиты на различные отладочные платы можно в каталоге ArmAsmEdit\\Add\\MCUDoc\\DevBoards или скачать с сайта производителя вашей платы</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9df/da0/11b/9dfda011bb7b095afc7f17d98dc55ccc.jpg" width="385" height="286">
  <figcaption></figcaption>
 </figure>
 <p>у меня 2 варианта: GPIOH и GPIOI</p>
 <p>буду использовать светодиоды подключенные к GPIOH</p>
 <p>Для этого ищем в добавленном модуле строку включения GPIOH:</p>
 <ol>
  <li><p>встаем курсором на запись DISABLE для выбранного GPIO </p></li>
  <li><p>нажимаем кнопку "F4 Изменить"</p></li>
 </ol>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/845/d5b/828/845d5b82858a1da90ca5ce9e71880e8b.jpg" width="1005" height="800">
  <figcaption></figcaption>
 </figure>
 <p>И получаем диалоговое окно с возможными вариантами настройки, в котором нам надо просто выбрать нужное значение</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/0df/4d2/13d/0df4d213d9ade87b20909bcdf8b0cea6.jpg" width="686" height="387">
  <figcaption></figcaption>
 </figure>
 <p>Настройка будет исправлена на выбранную</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b93/123/c30/b93123c30319bcdd0ea1f280229d5cac.jpg" width="746" height="221">
  <figcaption></figcaption>
 </figure>
 <p>Теперь нужно задействовать этот модуль настройки в нашей программе, прочитав описание модуля понимаем, что все что нужно сделать это добавить .include с именем нашего файла модуля-настройки в нужном месте программы</p>
 <p>Идем в main.asm и после инициализации тактирования микроконтроллера пишем .include (без пробела после него)</p>
 <p>У меня в редакторе включен режим автоформатирования текста, поэтому директива после набора будет распознана, переведена в ВЕРХНИЙ регистр и помещена с начала строки</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/84e/670/f32/84e670f32f08bf4be33acbe9b87a9497.jpg" width="1001" height="599">
  <figcaption></figcaption>
 </figure>
 <p>и осталось только ввести путь и имя файла в кавычках, но поскольку мне как и всем нормальным людям лень набирать путь относительно папки проекта (придется по заглядывать в навигатор файлов проекта), то я опять нажимаю кнопку "F4 Изменить" и указываю имя файла в диалоге. При вставке путь к файлу сразу будет преобразован в нужный формат, так что вам не придется ломать голову как написать путь правильно</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/23d/fa6/9cc/23dfa69ccc2912894db914884df1bb29.jpg" width="997" height="604">
  <figcaption></figcaption>
 </figure>
 <p>Можно "будущим поколениям" оставить примечание о том что же все таки мы здесь вставили</p>
 <p>Теперь вторая часть рутины программиста микроконтроллеров на архитектуре ARM - настройка пинов микроконтроллера, и здесь нам опять помогут готовые шаблоны модулей - в этот раз нам понадобятся модули из группы GPIO</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/80e/d37/09a/80ed3709a081745ffe16901afd4837e1.jpg" width="1013" height="571">
  <figcaption></figcaption>
 </figure>
 <p>Как видно из списка, можно добавить как просто определения GPIO, так и уже готовые модули настройки, причем для некоторых GPIO (А, B, C) существуют индивидуальные модули настройки так как они имеют свои значения по умолчанию, в которые и устанавливаются после сброса микроконтроллера.</p>
 <p>Мой GPIOH в списке индивидуальных не числится поэтому выбираем "Модуль конфигурирования одного порта GPIO", и как и в случае с RCC при установке модуля указываем путь и имя файла настройки, про опасность энтропии я уже писал, поэтому я сохраню этот файл в папке src\\periph\\gpio</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/333/f8a/732/333f8a732d8c131f43a79d852280b738.jpg" width="1145" height="796">
  <figcaption></figcaption>
 </figure>
 <p>И теперь самые догадливые наверное уже тянут руки к клавише "F4" на клавиатуре, или двигают указатель мыши к кнопке "F4 Изменить", и правильно ! только не забудьте сначала встать на значение настройки :-)</p>
 <ul>
  <li><p>первое, нужно указать какой порт настраиваем</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bee/e99/5a5/beee995a5bc74acbb405e817916b0800.jpg" width="1145" height="796">
  <figcaption></figcaption>
 </figure>
 <p>И далее, вспомнив к каким именно пинам у нас подключены светодиоды (см. свой даташит, у меня это пины 2 и 3), обратив внимание что они подключены катодом на землю - значит управляться будут выходным сигналом с пина GPIO без инверсии, настраиваем их, так же через нажатие кнопки "F4"</p>
 <p>MODER пинов выставляем на "Выход", в нашем случае вам даже не надо особо запоминать как называется это значение, все есть в описании</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d5c/3af/2fc/d5c3af2fce2a6d8bb36c4c5b9ee0d38a.jpg" width="1147" height="796">
  <figcaption></figcaption>
 </figure>
 <p>АFR и OTYPER не трогаем (ну если особо интересно, можно через F4 посмотреть какие там варианты есть)</p>
 <p>Скорость нам здесь особо не важна, но если очень желается можем задать максимально возможную</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a06/75d/7ff/a0675d7ff2689c399a27cb15a28d9197.jpg" width="1147" height="796">
  <figcaption></figcaption>
 </figure>
 <p>Вот в общем то и все по настройке GPIO, согласитесь это было хоть и не так как в привычном всем Кубе, но тем не менее тоже не особо сложно</p>
 <p>Теперь нужно использовать этот модуль, для этого в файле main.asm после настройки тактирования добавим .include на измененный нами файл настройки</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/0ee/bb2/8f9/0eebb28f9fcd7bc9c51273842225e7fd.jpg" width="1087" height="631">
  <figcaption></figcaption>
 </figure>
 <p>Осталось зажечь нужный нам светодиод</p>
 <p>Для этого, в духе статьи, использовать бы еще какой нить модуль, но этот случай я приберег на потом, так что предлагаю сейчас начать хардкорить на ассемблере, в конце концов статья то о редакторе ассемблера, а мы еще ни строчки собственно ассемблерного кода и не написали !</p>
 <p>Пины портов управляются различными регистрами, давайте используем один из вариантов:</p>
 <ul>
  <li><p>нужно в один из регистров микроконтроллера загрузить адрес регистра, для этого будем использовать команду загрузки значения LDR, регистр пусть будет R0, введем с клавиатуры, [LDR R0,=] регистр вводимых символов не важен, компилятор их поймет в любом виде (еще раз обращаю внимание, если включено автоформатирование то команда ассемблера автоматически будет преобразована к верхнему регистру (если в настройках это выбрано), и позиционирована в строке, имена регистров у меня тоже преобразовываются к верхнему регистру) </p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/990/bfc/641/990bfc641f4e24e3a9c9f2274c40530d.jpg" width="794" height="295">
  <figcaption></figcaption>
 </figure>
 <p>Теперь нужно указать адрес регистра, я их не особо запоминаю, просто нажмем кнопку "F5 Символы" и в открывшемся окне выберем вкладку "Дерево символов" (можно нажатием на клавиатуре комбинации Ctrl+3)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/ef4/846/f00/ef4846f001ecc1fb49969c41669ffa4b.jpg" width="621" height="562">
  <figcaption></figcaption>
 </figure>
 <p>Нам показаны символы и метки доступные из текущего местоположения (файла программы), для удобства они сгруппированы:</p>
 <ul>
  <li><p>.GLOBAL - глобальные символы, видимые из любого файла проекта </p></li>
  <li><p>MODULE - символы определенные в текущем местоположении (файле), ту да же попадают определения и метки вложенных директивой .include файлов</p></li>
  <li><p>SWITCH - или любые другие группы настроек без определенной привязки, у нас это настройки одного из вложенных файлов (настройки тактирования GPIO)</p></li>
  <li><p>STM32F4 - доступные определения по микроконтроллеру, они зависят от видимых из текущего положения инклудов обычно размещаемых в папке src\\inc проекта</p></li>
 </ul>
 <p>Раскроем ветку STM32F4, в ней найдем узел AHB1PERIPH_BASE (это устройства подключенные к шине), там нам интересен GPIO, и наконец наш GPIOH, и регистр настройки GPIO_ODR</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2dd/cf8/b77/2ddcf8b77cb0fa6ab1da82c7eb322f67.jpg" width="616" height="989">
  <figcaption></figcaption>
 </figure>
 <p>Этот регистр, согласно Reference Manual RM0090 и отвечает за выдаваемое значение на пин</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f9d/116/d9a/f9d116d9a844e4d48461bd416a853e7d.jpg" width="874" height="418">
  <figcaption></figcaption>
 </figure>
 <p>Базовый адрес GPIOH содержится в определенном символе GPIOH, его и загрузим в R0, для это просто выбрав его в дереве сделаем двойной клик или нажмем кнопку "Выбрать"</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/877/64d/de9/87764dde978aa07bf6ecb1668b934444.jpg" width="777" height="334">
  <figcaption></figcaption>
 </figure>
 <p>Определим записываемое значение в регистре R1 командой MOV и запишем значение в регистр GPIO<em>ODR, </em>определенный как базовый адрес всех регистров GPIOH, в регистре R0, и смещение GPIO_ODR (последние опять таки можно вставлять по F5)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/904/af4/503/904af45032cd08a3d6b18f6ca84467aa.jpg" width="780" height="379">
  <figcaption></figcaption>
 </figure>
 <p>Теперь можно откомпилировать проект (про настройки компиляции, и сам процесс было описано в предыдущей статье)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f00/8bd/9b9/f008bd9b9421033f6206f98b4f990519.jpg" width="1088" height="794">
  <figcaption></figcaption>
 </figure>
 <p>Пора сходить за отладочной платой, подключить ее программатор к компьютеру и записать прошивку в устройство</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/722/4d7/2da/7224d72da86561d46afd5bd5e6354695.jpg" width="1086" height="792">
  <figcaption></figcaption>
 </figure>
 <p> по итогу мы должны увидеть горящий светодиод после программирования и сброса</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/3d0/8b1/e94/3d08b1e94082c04c5fabbf0cd60c2f79.jpg" width="3024" height="4032">
  <figcaption></figcaption>
 </figure>
 <p>Теперь нам бы вспомнить что хотели делать именно мигающий светодиод, а значит нужно озадачиться написанием какой нить задержки, чтобы не "давить клаву" можно просто задействовать такое устройство ядра микроконтроллера как SysTick, тем более что он уже описан и доступен в модулях микроконтроллера</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a12/314/cdb/a12314cdb580e3c78b711611a1daeeb1.jpg" width="1013" height="574">
  <figcaption></figcaption>
 </figure>
 <p>Модуль установится в папку src\\core\\stk</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/689/fbb/6a2/689fbb6a25bee43887c3010dcbfb4b2b.jpg" width="1092" height="797">
  <figcaption></figcaption>
 </figure>
 <p>в описании к модулю есть порядок его инициализации и использования:</p>
 <ul>
  <li><p>добавить инициализацию можно в файле main.asm после инициализации тактирования, набираем команду BL, и дальше жмем F5 чтобы там выбрать нужный нам глобальный символ, или можно набрать после BL первые буквы SYS чтобы после нажатия F5 сразу увидеть подходящие по имени метки и символы</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/13c/9bf/1d6/13c9bf1d6ac118454cc71caec8a7adea.jpg" width="1092" height="797">
  <figcaption></figcaption>
 </figure>
 <ul>
  <li><p>добавить запись значения в регистр R0 - который, согласно описанию на модуль и определяет задержку в мс и вызвать ожидание командой BL SYSTICK_DELAY. Дополнительно, помните я использовал R0 для определения адреса GPIOH ? - теперь мы наверное поменяем регистр на R2 чтобы не присваивать значение заново, и напишем простой индуский код нашей мигалки:</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b07/d70/e34/b07d70e34d7bf76f6de165cda11c3ac3.jpg" width="808" height="637">
  <figcaption></figcaption>
 </figure>
 <p>Дальше как всегда, компиляция, прошивка, сброс микроконтроллера</p>
 <p>Видео мигания снимать не буду, по-моему мне итак предупреждение вынесут за использование такого количества картинок в статье...</p>
 <p>Пожалуй это все на сегодня, в следующей статье рассмотрим еще несколько доступных и очень нужных функций редактора которые призваны облегчить вам жизнь при написании программ на языке ассемблера</p>
 <p> </p>
</div>', '2021-02-19 10:43:00', 'Assembler Editor Plus: Использование модулей', 2, null, 8),
        (46, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>В Москве семь часов вечера. Рабочий день подошел к концу. Коллеги прощаются, закрывают лэптопы и выходят из Zoom’а. Город потихоньку засыпает, просыпаются айтишники. 19:00 по Москве — это 08:00 в Сан-Франциско. Моя подруга из VMware Маша Шалдыбина делает утренний кофе, логинится и… впрочем, обо всем по порядку.</p>
 <p>Привет, Хабр. Меня зовут Катя Юдина, я руководитель контент-маркетинга облачного бизнеса МТС. Буквально на днях я взяла небольшое интервью у своей давней подруги, которая сейчас работает в <s>центральном офисе</s> хоум-офисе компании VMware. Под катом вас ждет интересный рассказ о карьере ИТ-специалиста в крупной международной компании. Поговорим о том, как происходит трудоустройство на западе, как устроена работа в VMware и почему мировой карантин почти никак не затронул отдел разработки.</p>
 <p>Кстати, у нас отличная новость! Если у вас нет времени на чтение, можно прослушать подкаст-версию статьи по этой <a href="https://youtu.be/HwYn9eI8yx0"><u>ссылке</u></a>.</p>
 <hr>
 <p><strong>— Маша, как начался твой путь в ИТ?</strong></p>
 <p>— Скорее, не «как», а «когда» — в раннем детстве. Повлияла семья: оба родителя у меня — физики. Так что у нас дома постоянно была разная электроника, даже компьютеры (что на тот момент было большой редкостью). Я достаточно рано освоила Бейсик. Помню, устраивала себе развлечение: писала программы, которые рисовали разные картинки на экране. Уже в школе заинтересовалась онлайн-играми, они как раз тогда только-только пошли. Когда я училась в 10 классе, была очень популярна Ragnarök Online. Игрушка меня заинтересовала, но сам геймплей показался неторопливым. Нужно было постоянно фармить и ждать. Так что я развернула свою собственную версию и начала копаться в ее коде, чтобы настроить игру под свои хотелки.</p>
 <p>Мы тогда жили в Ташкенте, и ВУЗ я выбрала достаточно быстро. Моя альма-матер — Ташкентский Университет Информационных Технологий. Собственно, направление «Информационные технологии» тогда только открылось. Мы много экспериментировали, делали что-то новое. Преподаватели тоже не отставали, учились вместе с нами. Там же я защитила диссертационную работу, самописную CMS для веб-сайтов.</p>
 <p><strong>— Ты помнишь свое первое место работы?</strong></p>
 <p>— Еще бы! Курсе на четвертом моя подруга, Юлия Яковлева, схантила меня поработать в местном интернет-провайдере. К своему удивлению, собеседование я прошла быстро и без проблем, чего нельзя сказать о первых месяцах моей работы. Вышло так, что разработчик, писавший биллинговую систему для компании, через две недели уволился. Я осталась один на один с этой системой. Пришлось очень много выучить в кратчайшие сроки — на собственных ошибках, с помощью коллег-администраторов…</p>
 <p>Еще в ВУЗе я познакомилась с будущим мужем, Олегом. Дальше мы двигались вместе. Стало понятно: если мы хотим добиться большего, понадобится переезжать. Из Ташкента мы отправились в Санкт-Петербург. Там мы продолжили карьеру веб-разработчиков: я — в Daxx, а Олег — в Murano.</p>
 <p>Тем не менее, мы все время находились в поисках лучшего. Через какое-то время муж прошел интервью в Microsoft, и его пригласили на работу в парижский офис. Но судьба распорядилась иначе. У компании, в которой он тогда работал, было много клиентов из США. Когда одному из них стало известно, что муж увольняется, он предложил ему дальше работать напрямую. Почему бы и нет?</p>
 <p>Дальше началась маета с визами. После первого интервью в посольстве США на J-визу мы получили отказ. Пришлось «штурмовать» Америку заново. Наученные горьким опытом и добрым послом, мы подготовили новый пакет документов и подали на визу H1B. Шел 2008-й, год финансового кризиса, даже лотерея тогда не проводилась из-за недобора запросов (если в первый день подачи документов на визу, первого апреля, не набирается 65000 запросов, лотерею не проводят).</p>
 <p>Для визы пришлось подготовить действительно много документов — с базовым списком можно ознакомиться на сайте посольства. Вдобавок мужу пришлось в деталях расписать, ради какого проекта он едет в Штаты: архитектура веб-сайта, предстоящие задачи и все в таком духе. Все это проверялось в посольстве, так что схитрить вряд ли бы вышло.</p>
 <p>Эти же документы мы взяли с собой в Америку. Таможенник на границе проявил компетентность и долго расспрашивал нас про этот сайт. Нам показалось даже, что он украдкой зашел на него во время беседы. Когда очередь дошла до меня, я сказала, что работать не планирую — виза не позволяет. Таможенника этот ответ устроил, и мы, наконец, услышали заветное: <em>Welcome to the United States</em>.</p>
 <p><strong>— Ты сразу пошла на работу в VMware?</strong></p>
 <p>— Нет (смеется), еще целый год после переезда я не могла устроиться на официальную работу. Нам очень помог работодатель Олега: встретил нас, поселил в своем доме, пока мы не нашли собственное жилье. Помог купить подержанный автомобиль — без машины здесь никак.&nbsp;</p>
 <p>Самый главный документ США, SSN (номер социального страхования, который присваивается всем гражданам и резидентам США), мы оформили быстро и без проблем. Всю информацию в доступной форме можно найти на сайтах агентств.</p>
 <p>Разумеется, сложа руки я не сидела. Постоянно решала задачи на всяких Topcoder’ах и CodeSprint’ах, готовилась к интервью. Есть такая хорошая книга — Cracking the Coding Interview. В ней описано, как проходить собеседования в крупных ИТ-компаниях, таких как Google или Facebook. Много хороших задач с решениями, рекомендую. Еще я прошла сертификацию на знание языков программирования, создала приложение для iPhone — то есть, всеми силами старалась сформировать хорошую базу для устройства на работу.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/979/621/99b/97962199b8c77cacadd2b4a7b24980f0.png" width="952" height="1360">
  <figcaption></figcaption>
 </figure>
 <p><em>Cracking the Coding Interview</em></p>
 <p>Когда через год я получила разрешение на работу, началась фаза активных поисков «компании мечты». У меня были друзья в Facebook — с их помощью удалось получить приглашение на интервью. Здесь важно понимать: в Америке как нигде сильно понятие leverage — потенциальный работодатель может заинтересоваться тобой, если ты упомянешь о собеседовании в другой компании того же ранга. Так что интервью в Facebook мне помогло получить приглашение от VMware. Они устроили все очень быстро, предложили даже пропустить «телефонный» этап и сразу пригласили on-site — в офис. Дальше все достаточно стандартно: мне дали несколько задач, после решения я лично поговорила с руководителями и получила оффер. Собственно, так я и попала в VMware.</p>
 <p><strong>— Расскажи подробнее об интервью. Что требуется, какой бэкграунд нужен кандидатам? Как проходит собеседование в деталях?</strong></p>
 <p>— Универсально рассказать не получится, тут все зависит от должности, на которую ты подаешь резюме, и от людей, которые будут проводить собеседование. В целом за день может быть четыре-пять разных бесед. Из них три, например, могут вести программисты — кандидату предложат решить задачки на программирование (перевернуть связанный список, решить задачу с установкой зависящих друг от друга приложений и т.п.). Чаще всего код пишется на белой доске маркером.</p>
 <p>Может быть беседа с HR — спрашивают про карьеру, цели, «почему именно к нам?». Еще одна интересная разновидность интервью — на дизайн. Писать код уже не придется — вам зададут некий общий вопрос из серии «как бы вы построили подобное приложение?» и попросят обосновать свой выбор.</p>
 <p><strong>— А что после собеседования? Сразу в поле или есть какая-то адаптация?</strong></p>
 <p>— На самом деле, ввод новых сотрудников в эксплуатацию у нас поставлен очень грамотно, что называется «на потоке». Первые пару недель занимают групповые тренинги и лекции. Тебя знакомят с компанией, ее целями, продуктами и историей. Затем прикрепляют к конкретной команде разработчиков и дают менеджера. Задания выдают попроще. В VMware для учета багов и фич используется Pivotal Tracker — весьма удобный инструмент, а для команд менее 5 человек он доступен бесплатно.&nbsp; Обычно раз в неделю обсуждается, кто из сотрудников над какой задачей будет работать. Вливание в работу очень мягкое и спокойное. Все хорошо документировано, так что типовых проблем «надо срочно что-то делать, но непонятно как» не возникает.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/6e6/01c/84f/6e601c84f3afcee5f6dceedc87c9e56f.png" width="1600" height="992">
  <figcaption></figcaption>
 </figure>
 <p><em>Pivotal Tracker</em></p>
 <p>Когда я присоединилась к VMware, мне поручили работу в проекте Cloud Foundry. На тот момент он существовал всего год. В двух словах, Cloud Foundry — это система, которая позволяет разработчикам запускать свои приложения в облаке. Лично я работала над компонентами, отвечающими за корректную работу приложений, написанных на Node.js, — он тогда как раз был на пике популярности.</p>
 <p>Интересный момент — как известно, основная деятельность VMware долгие годы была сосредоточена на решении достаточно низкоуровневых задач, «близко к железу». А Cloud Foundry — это уже software-level, он выбивался из концепции. Поэтому все высокоуровневые проекты решено было объединить в компанию Pivotal. То есть фактически это родная сестра VMware, обе находились в собственности Dell.</p>
 <p>Таким образом, я перешла из VMware в Pivotal. Кто-то из моих коллег был против перехода, они остались в VMware, ушли на другие проекты. Дело было в экстремальном agile-подходе к написанию кода, принятом в Pivotal. Парное программирование, SCRUM-собрания. Мне это показалось интересной возможностью научиться чему-то новому, да и с людьми мне общаться легко. Почему бы и нет?</p>
 <p>Так началась моя карьера в Pivotal. Спустя семь лет после начала моей работы компанию купила VMware, и я вернулась туда, откуда начинала (смеется).</p>
 <p>На самом деле, все оказалось не так страшно. Сессии парного программирования устраиваются ежедневно с 9 утра до 6 часов вечера. Все очень хорошо организовано: на утреннем стендапе мы определяемся с пулом задач и выбираем себе пару. Садимся за один компьютер, работаем над одним и тем же кодом, но при этом у каждого свои монитор, клавиатура и мышь. Практика парного программирования обычно подразумевает, что один из нас — драйвер, ведущий, а второй — ведомый. Роли распределяются так: драйвер печатает код, фолловер — проверяет и смотрит наперед, какие ошибки могут возникнуть в его работе. Идет постоянное обсуждение, как можно улучшить то или иное решение. Это очень помогает решать сложные задачи — как известно,&nbsp; одна голова хорошо, а две — лучше. Для продуктивности роли внутри пары меняются, обычно в середине дня. Кстати, у нас есть <a href="https://www.instagram.com/pivotalsoftware/"><u>инстаграм</u></a>, там можно посмотреть, как выглядят наши рабочие будни и праздники.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/17d/23d/9f6/17d23d9f68c35fc486aac8c74ab819dd.png" width="1600" height="1067">
  <figcaption></figcaption>
 </figure>
 <p>На самом деле, такой подход дает очень много свободы. Не стоит менеджер над душой, не приходится ждать code review — мы самостоятельно вычитываем код друг друга и решаем, как сделать его еще лучше. И сразу сабмиттим в тестовую ветку.</p>
 <p>Минусы тоже есть. За неделю накапливается эмоциональная усталость от постоянного общения с другим человеком. Приходится говорить, о чем ты думаешь. Описывать ход своих мыслей. Чтобы сотрудники не выгорали, по пятницам у нас этакий день разработчика — никакого парного программирования, все занимаются тем, что сами считают нужным для развития.</p>
 <p><strong>— А как вы уходили на карантин? Были сложности с построением коммуникации с удаленным партнером по программированию?</strong></p>
 <p>— Мы начали переход на удаленный режим работы еще до карантина. У нас было много офисов — в Нью-Йорке, Лондоне, Мюнхене. Иногда члены одной команды могли жить в разных городах. Да мы и ранее занимались парным программированием удаленно. Например, в моей команде были ребята из Нью-Йорка. Утром мы все встречались в Zoom, обсуждали дела и разделялись на пары. Собственно, на карантине все происходит точно так же. Ведущий включает демонстрацию экрана, ведомый может делать аннотации и по необходимости перехватывает управление. С кодом работаем в основном в Visual Studio Code. При необходимости разворачиваем виртуальную машину и работаем на ней. В этом сценарии для совместной работы в терминале используем Tmux, а код пишем в Vim. Мы привыкли к такому формату, так что карантин не стал для нас шоком.</p>
 <p>У моего мужа, например, сложилась обратная ситуация. Он работает в Google, а там любят, чтобы сотрудники приходили на работу. Удаленка им претит. Офисы для них —&nbsp; второй дом: и накормят, и стиральная машина имеется, и поспать можно. Хоть живи, главное из дома не работай. Конечно, им перестроиться было на порядок сложнее.</p>
 <p>Вообще, если не говорить о причинах карантина, я вижу в нем много плюсов. Не нужно тратить время на дорогу. В любое время я могу взять перерыв и провести время с дочерью. Благодаря парному программированию после шести вечера ты полностью свободен, никаких овертаймов, связь между сотрудниками осуществляется асинхронно. Никто никого не дергает. Я рада, что в свободное время я могу забыть о работе и быть со своей семьей. Моему сыну три, дочке нет еще и года, справляться с ней помогают родители — они всегда рядом и с радостью приходят на помощь.</p>
 <p><strong>— В двух словах: над какими продуктами ты работала/работаешь?</strong></p>
 <p>— Над Tanzu Application Service. Я участвовала практически во всех командах разработки: различные бэкенд-подсистемы, фронтенд, интерфейс командной строки, непрерывная интеграция и релиз. Примерно раз в год в проекте происходит ротация, и команды «перетасовываются». Это не только предотвращает выгорание, так как не приходится годами «долбить» одно и то же, но и не порождает новых проблем, что тоже важно. Наоборот, свежий взгляд на код помогает делать его лучше и чище.</p>
 <p><strong>— Маша, спасибо! Надеюсь, следующий раз получится рассказать об одном дне из жизни разработчика Google :)</strong></p>
 <p>***</p>
 <p>По традиции, ждем ваших комментариев. Поделитесь своим опытом, расскажите, понравился ли вам такой формат статьи, что стоило бы добавить или изменить. До встречи, друзья!</p>
</div>', '2021-02-20 12:14:00', 'Один день из жизни разработчика VMware', 8, null, 1),
        (47, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/kw/m8/wg/kwm8wgrcx9seakng7yqeeyvixdc.jpeg"><i>Скриншот с портала Onliner.by, где перекупщик <a href="https://catalog.onliner.by/videocard/gigabyte/gvn3060eagleoc12/used/290887" rel="nofollow noopener noreferrer">продает</a> три карты GeForce RTX 3060, которые официально должны выйти в продажу с 25 февраля. Видеокарта построена на базе чипа GA106 с 3584 ядрами CUDA. Она имеет на борту 12 ГБ памяти GDDR6.</i>
 <br> 
 <br> По <a href="https://www.tomshardware.com/news/john-carmack-proposes-auctions-to-fight-hardware-shortages-" rel="nofollow noopener noreferrer">информации</a> Tom''s Hardware, легендарный разработчик культовых игр Джон Кармак <a href="https://twitter.com/ID_AA_Carmack/status/1362619560763949060" rel="nofollow noopener noreferrer">предложил</a> простой способ борьбы с дефицитом современных видеокарт и игровых консолей нового поколения. 
 <br> <a name="habracut"></a>
 <br> Кармак рассказал, что в текущей ситуации с дефицитом и засильем спекулянтов нужно устранить посредников, включая дистрибьюторов и розничных продавцов, между производителями видеокарт и консолей и пользователями. Он предлагает для этого сегмента рынка создать прозрачную систему аукционов напрямую от производителей, чтобы более эффективно распространять графические устройства среди пользователей.
 <br> 
 <br> Кармак пояснил, что подобные аукционы были ранее на других рынках, но компании, которые контролируют каналы продаж, смогли их нивелировать. Однако, в настоящее время вариант с прямыми аукционами будет более востребованный, хотя производителям придется сразу продавать карты с дополнительной наценкой из-за расходов на логистику. Но даже с повышенной стоимостью, и конечно на первых порах покупатели могут быть возмущены этим, такой механизм продаж принесет больше пользы потребителям, чем существующий рынок, который сейчас прогнулся под скальпинг с помощью ботов и майнинга. 
 <br> 
 <br> Издание Tom''s Hardware пояснило, что в предложенном Кармаком варианте разработчики и производители графических решений смогут воспользоваться огромным спросом и заработать некоторую дополнительную прибыль, тогда как конечные пользователи не будут кормить скальперов, а также розничных торговцев, которые продают по ценам, которые иногда гораздо выше, чем рекомендованные розничные цены. Однако, это не полноценный выход из ситуации, так как является подходом типа «тушить огонь огнем».
 <br> 
 <br> В случае появления таких аукционов пропадет концепция рекомендованной розничной цены для видеокарт и консолей, что собьет с толку многих покупателей. Фактически на рынке будет некоторый беспорядок, так как крупные продавцы начнут продавать свои карты отдельно, и, следовательно, им не придется конкурировать друг с другом, особенно по цене и производительности.
 <br> 
 <br> Более того, устранение дистрибьюторов, оптовиков и розничных продавцов будет иметь свои последствия. Без них (и их сети продаж) производителям придется строить собственные логистические цепочки, включая склады (не каждый геймер достаточно заинтересован в том, чтобы иметь дело с таможней, если продукт доставляется из-за пределов США или ЕС), а также открывать свои розничные и интернет-магазины, аукционные площадки. Это потребует серьезных вложений, которые будут отбиваться с помощью повышения стоимости карт. 
 <br> 
 <br> С другой стороны, производители и сборщики ПК будут продолжать получать графические платы по заранее оговоренным ценам, это даст им серьезное конкурентное преимущество перед сборками пользователями ПК своими руками, так как графические платы, купленные на аукционе, будут обходиться дороже. 
 <br> 
 <br> В настоящее время некоторые поставщики <a href="https://www.evga.com/products/productlist.aspx?type=0&amp;family=GeForce+30+Series+Family&amp;chipset=RTX+3060+Ti" rel="nofollow noopener noreferrer">занимаются</a> розничной торговлей видеокартами. Но даже в этом случае продажи продуктов напрямую конечному пользователю и ограничения продаж в одну единицу оборудования на покупателя не особо усложняет жизнь спекулянтам. 
 <br> 
 <br> 18 февраля 2021 года Nvidia <a href="https://habr.com/ru/news/t/543148/">объявила</a>, что запускает на рынок решения на базе специализированного GPU под названием CMP HX (Crypto-mining processor) для профессионального майнинга. Видеокарты серии GeForce компания хочет оставить геймерам. Компания ограничит хешрейт графических процессоров GeForce RTX 3060, чтобы они были менее желательны для майнеров. Причем удаление или изменение заложенного производителем ограничителя скорости хэширования видеокарты нельзя сделать с помощью манипуляций с драйвером, так как производительность при майнинге <a href="https://habr.com/ru/news/t/543408/">понижается</a> прошивкой карты (vBIOS). 
 <br> 
 <br> В начале февраля Nvidia <a href="https://habr.com/ru/news/t/542350/">вернулась</a> к производству старых графических процессоров — 14 нм GP107 и 12 нм TU106. Компания выдала запасы этих чипов своим партнерам для дополнительного выпуска видеокарт GeForce RTX 2060 и GTX 1050 Ti. Nvidia пошла на этот шаг, чтобы хоть как-то справиться с продолжающимся дефицитом новых видеокарт на рынке.
</div>', '2021-02-22 09:55:00', 'Джон Кармак предложил способ борьбы с дефицитом видеокарт и игровых консолей нового поколения', 70, null, 4),
        (48, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Оба напитка, особенно в больших количествах, улучшают здоровье и увеличивают продолжительность жизни.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/554/22f/738/55422f738bd73ec3fd38b99f9760c655.jpg" width="1412" height="893">
  <figcaption></figcaption>
 </figure>
 <p><a href="https://www.ahajournals.org/doi/10.1161/CIRCHEARTFAILURE.119.006799"><u>Новое исследование</u></a> пополняет чашу растущего количества фактов, указывающих на то, что кофе и чай&nbsp;— и, похоже, именно в больших количествах&nbsp;— помогают жить дольше и здоровее. Есть только одна загвоздка: данные свидетельствуют о том, что нужно также заниматься спортом и хорошо питаться. Кофеиносодержащие напитки не смогут компенсировать неумеренное потребление пончиков и просиживание дивана.</p>
 <p>В <a href="https://elemental.medium.com/coffee-even-a-lot-linked-to-longer-life-75d23e56f5a8"><u>нескольких проведенных ранее исследованиях</u></a> потребление кофе удалось связать со сниженным риском развития диабета 2-го&nbsp;типа, рака, болезни Паркинсона, депрессии и болезни Альцгеймера. <a href="https://bmjopen.bmj.com/content/11/2/e038902"><u>Опубликованная в прошлом месяце</u></a> работа связала потребление нескольких чашек кофе в день со снижением риска смерти от рака простаты на 16%. Оказалось, что люди, которые пьют чай (зеленый или черный), тоже <a href="https://elemental.medium.com/can-tea-help-you-live-longer-c887497cc476"><u>живут дольше</u></a>, и у них меньше вероятность сердечных и других смертельных заболеваний.</p>
 <blockquote>
  <p><em>«Если сравнивать с отказом от курения, похудением и физическими упражнениями, то веских данных, позволявших бы с такой же уверенностью рекомендовать увеличение потребления кофе в целях снизить риск сердечных заболеваний, пока что недостаточно».</em></p>
 </blockquote>
 <p>Новые данные показывают, что употребление одной или нескольких чашек кофе с кофеином в день может снизить риск сердечной недостаточности. В журнале «Circulation: Heart Failure» Американской кардиологической ассоциации 9&nbsp;февраля было опубликовано исследование на основе 10-летних данных по 21&nbsp;000&nbsp;взрослых из США, которые были получены в трех отдельных научных проектах. Два набора данных показывают, что с каждой чашкой кофе (по сравнению с неупотреблением кофе) риск сердечной недостаточности снижается на 5–12%. Третий набор данных показал отсутствие разницы при употреблении лишь одной чашки в день, но для тех, кто выпивал две и более чашек в день, риск сердечной недостаточности был меньше на 30%.</p>
 <p>Некоторые более ранние исследования показали, что кофе вреден для сердца&nbsp;— но при этом часто не принималось во внимание курение и злоупотребление алкоголем среди любителей кофе. «<a href="https://elemental.medium.com/coffee-even-a-lot-linked-to-longer-life-75d23e56f5a8"><u>Множество новых исследований</u></a>, в том числе и упомянутое, учли эти факторы и в результате опровергли это заключение»,&nbsp;— рассказывает руководитель исследования Дэвид Као&nbsp;— доктор медицинских наук, доцент кардиологии и главный врач Колорадского центра персонализированной медицины Медицинского института Колорадского университета,&nbsp;— «Но есть и другие, более эффективные способы защитить сердце».</p>
 <p>Если сравнивать с отказом от курения, похудением и физическими упражнениями, то веских данных, позволявших бы с такой же уверенностью рекомендовать увеличение потребления кофе в целях снизить риск сердечных заболеваний, пока что недостаточно».</p>
 <h2>И чай тоже</h2>
 <p>В еще одном <a href="https://dx.doi.org/10.1161/STROKEAHA.120.032273"><u>новом исследовании</u></a>, опубликованном 4&nbsp;февраля в журнале «Stroke», проанализировали привычки употребления кофе и чая за более чем 18&nbsp;лет среди 46&nbsp;213 человек в Японии в возрасте 40–79 (на момент начала сбора данных). Результаты были получены следующие:</p>
 <ul>
  <li><p>В группе выживших после инсульта употребление большого количества зеленого чая (не менее семи чашек в день) снизило риск смерти на 62% по сравнению с теми, кто пил чай редко, и на 35% по сравнению с теми, кто пил одну-две чашки в день.</p></li>
  <li><p>У людей, перенесших сердечный приступ, риск смерти при употреблении чая снизился аналогичным образом.</p></li>
  <li><p>В группе без сердечных приступов и инсультов у выпивавших хотя бы чашку кофе в неделю риск смерти был на 14% ниже, чем у тех, кто кофе не пил.</p></li>
  <li><p>У выживших после сердечного приступа, которые выпивали хотя бы чашку кофе в день, риск смерти был на 22% ниже.</p></li>
 </ul>
 <p>Предыдущее <a href="https://elemental.medium.com/can-tea-help-you-live-longer-c887497cc476"><u>исследование</u></a> связало употребление чая с понижением артериального давления и уровня холестерина, а также с более низким риском смерти от рака, болезней сердца и других причин.</p>
 <h2>Кстати, о пончиках…</h2>
 <p>Новые исследования имеют ограничения, свойственные большинству связанных с питанием работ. Во-первых, они полагаются на самостоятельную оценку потребления чая и кофе. Во-вторых, эти исследования не могут полностью отделить потребление горячих напитков от общих характеристик диеты и физических упражнений каждого человека&nbsp;— несмотря на то, что исследователи стремятся учесть различные факторы образа жизни.</p>
 <p>Таким образом, результаты представляют собой корреляцию и не позволяют определить причину и следствие, и говорят не об индивидуальных исходах, а о средних показателях в популяции.</p>
 <p>«В обоих новых исследованиях люди, которые пили больше кофе или чая, как правило, вели более здоровый образ жизни»,&nbsp;— отмечает Линда Ван Хорн, доктор наук, профессор и руководитель отдела питания факультета профилактической медицины Медицинского института Файнберга в Северо-Западном университете США. Ван Хорн также входит в комитет по питанию Американской кардиологической ассоциации и не принимала участия ни в одном исследовании.</p>
 <p>«Эти люди ели больше рыбы, овощей и других продуктов, богатых питательными веществами, и с большей вероятностью чаще ходили и занимались физическими упражнениями»,&nbsp;— поясняет Линда изданию Elemental.</p>
 <p>Несмотря на недостатки исследований, доказательств пользы кофе и чая становится всё больше. Считается, что содержащиеся в напитках молекулы (полифенолы и другие антиоксиданты) подавляют действие свободных радикалов. Однако положительное влияние может ослабляться, если напитки содержат взбитые сливки, карамель и другие сахара и жиры, которые делают кофе и чай практически неузнаваемыми.</p>
 <p>«Эти напитки содержат полифенолы, которые, как известно, обладают противовоспалительным действием,&nbsp;— особенно если заменять ими бедные питательными веществами сладкие напитки, что может быть полезно»,&nbsp;— рассказывает Ван Хорн.</p>
 <h2>С кофеином или без</h2>
 <p>Пока что неясно, полезен ли сам кофеин, однако ученые <a href="https://www.hsph.harvard.edu/nutritionsource/food-features/coffee"><u>соглашаются</u></a>, что для большинства взрослых кофеин, по крайней мере, не повышает риск рака и сердечно-сосудистых заболеваний. В <a href="https://www.acpjournals.org/doi/10.7326/M16-2472"><u>исследовании</u></a> 2017&nbsp;г. обнаружили, что и обычный кофе, и кофе без кофеина коррелируют с большей продолжительностью жизни. Новое исследование, проведенное Као, показало, что «кофеин был, по крайней мере, одной из причин очевидной пользы от употребления большего количества кофе».</p>
 <p><a href="https://www.aacap.org/AACAP/Families_and_Youth/Facts_for_Families/FFF-Guide/Caffeine_and_Children-131.aspx"><u>Специалисты по охране здоровья</u></a> <a href="https://www.aacap.org/AACAP/Families_and_Youth/Facts_for_Families/FFF-Guide/Caffeine_and_Children-131.aspx"><u>не рекомендуют употреблять кофеин</u></a> детям. Однако для большинства взрослых, по-видимому, мало причин отказывать себе в удовольствии выпить чашку кофе или чая&nbsp;— если не забывать об <a href="https://www.mayoclinic.org/healthy-lifestyle/nutrition-and-healthy-eating/in-depth/caffeine/art-20045678"><u>известных побочных эффектах кофеина</u></a>: головных болях, <a href="https://medium.com/luminate/10-ways-to-sleep-better-based-on-actual-science-46fd52de5aa0"><u>нарушении сна</u></a> (у некоторых даже может проявляться дрожь и нервозность).</p>
 <p>«Ни кофе, ни чай не повышают риски для взрослых, перенесших инсульт или обострение сердечно-сосудистых заболеваний, поэтому употребление этих напитков действительно может быть полезным»,&nbsp;— говорит Ван Хорн.&nbsp;— «Особенно верно это в случае, если чай и кофе приходят на замену сладким напиткам и напиткам с высоким содержанием жира и калорий».</p>
 <hr>
 <h4>О переводчике</h4>
 <p>Перевод статьи выполнен в Alconost.</p>
 <p>Alconost занимается <a href="https://alconost.com/ru/localization/games?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=coffee-tea">локализацией игр</a>, <a href="https://alconost.com/ru/localization?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=coffee-tea">приложений и сайтов</a> на 70 языков. Переводчики-носители языка, лингвистическое тестирование, облачная платформа с API, непрерывная локализация, менеджеры проектов 24/7, любые форматы строковых ресурсов.</p>
 <p>Мы также делаем <a href="https://alconost.com/ru/video-production?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=coffee-tea">рекламные и обучающие видеоролики</a> — для сайтов, продающие, имиджевые, рекламные, обучающие, тизеры, эксплейнеры, трейлеры для Google Play и App Store.</p>
</div>', '2021-02-24 09:48:00', 'Кофе и чай удивительно полезны для здоровья', 60, null, 10),
        (49, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Крупнейшая видеоплатформа мира YouTube продолжает развиваться и релизит все больше инструментов для создателей контента, обычных пользователей и рекламодателей.</p>
 <p>YouTube рассказал о планах и нововведениях на 2021 год, о чем в феврале <a href="https://techcrunch.com/2021/02/17/youtube-to-expand-shorts-to-the-u-s-add-4k-and-dvr-to-youtube-tv-launch-in-video-shopping-and-more-in-2021/"><u>написал Techcrunch</u></a>. В статье раскрываем информацию о главных новинках.</p>
 <h3>YouTube VR: виртуальная реальность — тренд современности</h3>
 <p>Сервис продолжит развивать YouTube VR и планирует сделать взаимодействие с технологиями виртуальной реальности более доступным, понятным и удобным.</p>
 <figure class="bordered full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/03d/0bf/93e/03d0bf93e8eee9a85c539ddb4ac17963.png" width="1377" height="354">
  <figcaption></figcaption>
 </figure>
 <h3>Обновления в YouTube TV</h3>
 <p>В этом сервисе появятся новые полезные опции:</p>
 <ul>
  <li><p>просмотр видео в разрешении 4К;</p></li>
  <li><p>DVR (захват видео) для воспроизведения в офлайн-режиме;</p></li>
  <li><p>одновременная трансляция видео на неограниченное количество устройств в доме.</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/5c5/3c1/5c2/5c53c15c28d450283f6c4e3a641783b7.png" width="1392" height="620">
  <figcaption></figcaption>
 </figure>
 <h3>YouTube Music</h3>
 <p>Google продолжает развивать сервис YouTube Music (напоминаем, в декабре 2020 года закрыли Google Play Music, чтобы сосредоточиться на развитии YouTube Music). В 2021 году компания будет плотно заниматься сервисом, одно из нововведений — возможность создавать пользовательские плейлисты и расшаривать их для публичного прослушивания другими пользователями.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/411/3b7/e33/4113b7e33fde34b2b36e37f41a5d067e.png" width="1282" height="508">
  <figcaption></figcaption>
 </figure>
 <h3>Нововведения для создателей контента</h3>
 <p>В 2020 году YouTube создал функцию YouTube Shorts для создания 15-секундных вертикальных видео (отображаются на каналах авторов, а также в специальном разделе на главной YouTube).</p>
 <p>Shorts в виде отдельного приложения были запущены в Индии — в качестве альтернативы TikTok, который власти Индии заблокировали в июне 2020 года.&nbsp;</p>
 <p>Несмотря на то, что в виде приложения функция была доступна только в Индии, загружать на YouTube короткие вертикальные ролики могли пользователи и из других стран. Для этого необходимо лишь добавить хэштег #shorts.</p>
 <p>Такой формат видео набирает большую популярность (в основном благодаря TikTok), поэтому YouTube продолжает развивать Shorts и запускает функцию в США.</p>
 <p>Подтверждение популярности — по данным YouTube, <a href="https://www.cnbc.com/2021/01/26/youtube-shorts-tiktok-competitor-has-3point5-billion-daily-views-in-india.html"><u>видео Shorts собрали 3,5 млрд просмотров всего за день</u></a> при запуске бета-тестирования в Индии (сентябрь, 2020).</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/3c7/580/b69/3c7580b6910e69e5ad7f7da9e3b19023.png" width="462" height="339">
  <figcaption></figcaption>
 </figure>
 <h3>«Аплодисменты» — дополнительный способ монетизации видео</h3>
 <p>С помощью опции «Аплодисменты» пользователи могут поддержать понравившиеся видео. Опция платная, в тестовом режиме цена одного «аплодисмента» — 2 $.&nbsp;</p>
 <p>Пока что функция доступна в бета-режиме для пользователей из нескольких стран: Австралии, Бразилии, Индии, Японии, Кореи, Мексики, Новой Зеландии, США.</p>
 <p>Иконка «аплодисменты» располагается возле кнопок лайка/дизлайка. Также есть лимиты по количеству расходов для каждого пользователя:</p>
 <ul>
  <li><p>до 500 $ в день;</p></li>
  <li><p>до 2000 $ в неделю.</p></li>
 </ul>
 <figure class="bordered full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/328/ff4/564/328ff4564cfbdbbf7f6628faeb5199eb.png" width="734" height="594">
  <figcaption></figcaption>
 </figure>
 <h3>Автоматическая разметка разделов видео</h3>
 <p>В загруженных на YouTube видео можно добавлять отметки эпизодов — для того, чтобы пользователям было удобнее ориентироваться по видео и переходить к нужным фрагментам.</p>
 <p>Теперь YouTube реализовал функцию автоматической разметки: для некоторых видео отметки эпизодов будут добавляться автоматически, если автор контента не добавил их самостоятельно.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/028/394/562/028394562f7988afe5b7acdc03fa6b4e.png" width="877" height="108">
  <figcaption></figcaption>
 </figure>
 <p>Для успешного продвижения на YouTube в первую очередь важен контент. Во вторую — его оптимизация. Проверить, оптимизировано ли ваше видео, можно с помощью бесплатного инструмента <a href="https://click.ru/tools/youtube_video_optimization.html?utm_medium=post&amp;utm_source=habr&amp;utm_campaign=blog_post&amp;utm_content=youtube-vvodit-platnye-aplodismenty-kakie-izmeneniya-zhdut-nas-v-2021"><u>«Чек-лист оптимизации видео»</u></a> от <a href="https://click.ru/?utm_medium=post&amp;utm_source=habr&amp;utm_campaign=blog_post&amp;utm_content=youtube-vvodit-platnye-aplodismenty-kakie-izmeneniya-zhdut-nas-v-2021"><u>Click.ru</u></a>.</p>
 <h3>Как нововведения затронут контекстную рекламу</h3>
 <p>Кроме нововведений, связанных с публикацией и потреблением контента, YouTube также продолжает развивать функции для рекламодателей. К примеру, YouTube выводит из режима беты встроенные в видео объявления для торговых кампаний (Google Shopping). Это значит, что такие кампании станут доступны большему количеству рекламодателей, а сам формат — более эффективным.&nbsp;</p>
 <p>Также не исключена возможность того, что в вертикальных видео Shorts будет реализована монетизация. Сейчас в них не показывается реклама, но сам YouTube говорит, что продолжит экспериментировать с форматом и возможно добавит варианты монетизации.</p>
 <p>А какие новинки YouTube заинтересовали вас?</p>
</div>', '2021-02-25 11:00:00', 'YouTube вводит платные аплодисменты. Какие изменения ждут нас в 2021', 48, null, 10),
        (50, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Шотландская компания Orbex <a href="https://www.scotsman.com/business/countdown-continues-to-sutherland-spaceport-after-order-placed-for-largest-industrial-3d-printer-in-europe-3143984" rel="noopener noreferrer nofollow">заказала</a> самый крупный в Европе промышленный 3D-принтер весом 12 тонн. На нем собираются «печатать» 35 ракетных двигателей ежегодно.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/80f/51d/714/80f51d7143d0816eb63ee302a9d8cc31.png" width="800" height="533">
  <figcaption></figcaption>
 </figure>
 <p>3D-принтер займет площадь примерно в тысячу квадратных метров на заводе Orbex. Помимо ракетных двигателей, он будет производить турбонасосные системы главной ступени.</p>
 <p>Компания <a href="https://orbex.space/" rel="noopener noreferrer nofollow">Orbex</a> еще не проводила космических запусков, но уже получила разрешение на строительство объекта в Сазерленде. Стройка начнется в 2021 году, а первый орбитальный запуск может состояться уже в 2022-м. </p>
 <p>Orbex намеревается печатать двигатели как единое целое с использованием специальной смеси металлов, в том числе титана и алюминия. Таким образом, они не будут содержать сварных швов и соединений.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/282/ee7/4e0/282ee74e062fcbd390dfe854e4e86e9f.png" width="800" height="530">
  <figcaption></figcaption>
 </figure>
 <p>Компания <a href="https://orbex.space/news/orbex-secures-24-million-funding-round-for-uk-space-launch" rel="noopener noreferrer nofollow">привлекла</a> $24 млн в рамках раунда финансирования и подтвердила шесть контрактов на запуск спутников, начиная с 2022 года.</p>
 <p>Orbex работает над ракетой Prime длиной 19 м, которая будет способна нести нагрузку до 180 кг, а также будет на 80% пригодной для повторного использования. Ракета будет предназначаться для запуска малых спутников.</p>
 <p>Европейским конкурентом Orbex выступает шотландская Skyrora, которая планирует запустить более крупную ракету Skyrora XL, способную нести массу полезной нагрузки до 315 кг. Запуск по плану должен произойти с британской площадки в 2023 году.</p>
 <p>Между тем Rocket Lab, занимающаяся запусками малых коммерческих спутников, также использует 3D-печать при производстве жидкостных двигателей «Резерфорд» для питания ракеты «Электрон», и двигателей «Кюри» на «зеленом» монотопливе.</p>
 <p>В январе исследователи Массачусетского технологического института <a href="https://habr.com/ru/news/t/538688/" rel="noopener noreferrer nofollow">представили</a> свой полностью напечатанный на 3D-принтере двигатель малой тяги, который использует чистую ионную эмиссию для движения. Разработчики отмечают, что его можно будет применять для создания тяги при запуске миниатюрных спутников.</p>
</div>', '2021-02-25 17:19:00', 'Шотландская Orbex заказала крупнейший в Европе 3D-принтер для ракетных двигателей', 98, null, 5),
        (51, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/tk/af/dv/tkafdvpiu4tvlc7or6tn4mc_dp0.png">
 </div>
 <br> Компания Apple — одна из самых заметных на компьютерном рынке, она же — одна из самых противоречивых. Равнодушных к ее продукции и рыночной стратегии исчезающе мало — ее либо любят, либо критикуют — бывает и вовсе ненавидят. Ее продукты хорошо известны многим, интересующимся компьютерной техникой.
 <br> 
 <br> Но есть одно направление, присутствие в котором предложений от Apple многими будет воспринято с удивлением. Это — рынок серверов. Сейчас де-юре компания не предлагает покупателям серверные системы, де-факто — Mac Mini с установленной macOS Server вполне успешно используется как в on-premise инсталляциях, так и предлагается в аренду некоторыми облачными провайдерами, в том числе и Selectel в рамках предложения <a href="https://slc.tl/DKH43">Selectel.Lab</a>.
 <br> <a name="habracut"></a>
 <br> Но полноценными серверами назвать этих трудолюбивых малышей сложно — нет привычных возможностей расширения и обеспечения отказоустойчивости, нет уже давно ставших стандартом возможностей управления через IPMI. Предвидим вполне резонный вопрос — а кому это вообще нужно, кроме, может быть разработчиков под соответствующую экосистему, когда есть множество других вариантов построения сервера.
 <br> 
 <br> Ответ также прост — с давних пор у «фруктовой компании» есть свои решения для построения корпоративных сетей, а коль скоро macOS (и, соответственно OS X) вполне себе Unix-совместимая система, значит, что компания, выбравшая Mac в качестве корпоративного стандарта, может пожелать и серверные потребности решать с использованием привычной техники и операционной системы.
 <br> 
 <br> В течение долгого времени, с 1993 по 2003 годы, Apple выпускала серверы, основанные на современных рабочих станциях Apple Workgroup Server. Эти машины логически были близки к современной идее использования Mac Mini в качестве сервера и были рассчитаны на обслуживание нужд небольших команд — «рабочих групп». Работали они сначала под управлением A/UX — собственной реализации Unix с графическим интерфейсом, аналогичным System 7 и совместимой с программами для нее. Последняя версия ее вышла в 1995 году и лишь в 1999 ее заменила OS X Server.
 <br> 
 <br> Но были в ее линейке и полноценные серверные машины, созданные изначально для работы в этой роли. Первой попыткой были Apple Network Server на базе ранних PowerPC и работавшие под AIX — реализации Unix от IBM. Просуществовала эта линейка недолго — с февраля 1996 по апрель 1997 года. Вторая попытка была более успешной, и именно о ней и пойдет речь в сегодняшней статье.
 <br> 
 <br> <font color="#EB4247"><h2>Встречаем по одежке и спецификации</h2></font>
 <br> И так, разрешите представить — первенец «нового» семейства Apple Xserve, представленная в мае 2002 года модель Xserve G4 (внутреннее обозначение RackMac1,1) в практически максимальной комплектации:
 <br> 
 <br> 
 <ul> 
  <li>два процессора PowerPC G4 1.0 ГГц с 256 Кбайт кэша второго уровня и 2 Мбайта внешнего кэша третьего уровня каждый;</li> 
  <li>2 Гбайта ОЗУ DDR266(установлен максимальный поддерживаемый объем, в оригинальной комплектации было 512 Мбайт) ;</li> 
  <li>жесткий диск 60 Гбайт с поддержкой горячей замены;</li> 
  <li>два гигабитных сетевых адаптера (один установлен на системной плате, другой выполнен в виде платы расширения PCI64). </li> 
 </ul>
 <br> Стоимость сервера составляла $2999 за однопроцессорную версию и $3999 за двухпроцессорную. Подробнее «начинку» рассмотрим позже, а пока — обещанная «одежка»!
 <br> 
 <br> Большинство читателей, полагаю, привыкли видеть сервер как некий утилитарный девайс со исключительно функциональным дизайном — максимальное использование передней панели для размещения жестких дисков, россыпь кнопок и защелок, многочисленные разноцветные индикаторы и, главное — сплошные решетки и сеточки для вентиляции. Классический черный или бежевый цвет, реже матовый серый. Строго, эффективно, утитарно — да. Красиво — на любителя, особенно если ваш любимый авто — Defender или Gelandewagen, а любимый самолет — Skyvan. Стильно — смотрите предыдущий пункт, но как правило — не тот случай.
 <br> 
 <br> Apple удалось сделать функциональное устройство красивым и стильным по общепризнанным канонам красоты. Передняя панель — царство шлифованного алюминия. Аккуратная линия панели управления с круглыми блестящими кнопками из полированного металла, установленными с незаметным глазу зазором и породистым нажатием. Порт FireWire для быстрого подключения внешнего диска. 
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/je/xm/st/jexmstacpxsd1aw1aobnanoqwxg.png">
 </div>
 <br> Шестигранная скважина ключа блокировки отсека накопителей и устройств ввода. Две полоски светодиодов, отображающих загрузку процессоров. Собственно индикаторы — красивых сочных оттенков: 
 <br> 
 <br> 
 <ul> 
  <li>голубые для индикатора нагрузки,</li> 
  <li>зеленые для главного сетевого интерфейса,</li> 
  <li>желтые для отображения состояния системы и блокировки,</li> 
  <li>белый — главный индикатор включения.</li> 
 </ul>
 <br> Справа — оптический привод с лицевой панелью из такого же толстого куска алюминия и аккуратной блестящей кнопкой.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ax/mp/qf/axmpqfn0danjmaqyaqj7m-7pxhg.png">
 </div>
 <br> Ниже — отсеки для четырех жестких дисков — со сплошной, как вы уже догадались, алюминиевой лицевой частью. Защелок или рукояток нет, только два маленьких глазка индикаторов. Чтобы извлечь диск, нужно нажать на «мордочку» — плавно выедет удобная ручка — прямо как с ультрасовременном электромобиле Jaguar I-Pace. Диски с горячей заменой, но, что немало удивляет — с интерфейсом IDE. 
 <br> 
 <br> В корзинках расположен короткий шлейф, а сам разъем, соединяющий их с бекплейном позаимствован у SCA (SCSI Configured Automatically), но самого SCSI в сервере не предусмотрено совершенно. Контроллер дисков реализован на базе двух чипов Promise PDC20270 и поддерживает только программные RAID-массивы, созданные средствами операционной системы.
 <br> 
 <br> Впрочем, дисковую подсистему нельзя назвать слабой — в феврале 2003 года на рынок вышла внешняя дисковая полка Xserve RAID — на 14 IDE дисков, снабженная двумя независимыми контроллерами с аппаратной поддержкой массивов уровня 0, 1, 3(!), 5 и 10 и подключаемая к серверу с помощью FibreChannel. Чуть позже в 2003 году вышло и первое обновление — новая версия RackMac1,2 c 1.33 ГГц чипами и CD-ROM со слотовой загрузкой вместо привычного выдвижного лотка. На его базе выпускалась версия Cluster Node с одним отсеком для диска и одной сетевой картой, без CD-ROM и видеоадаптера, но всегда с двумя процессорами.
 <br> 
 <br> <font color="#EB4247"><h2>Вынем внутренности!</h2></font>
 <br> Да, именно так. Не снимем крышку, а вынем из нее шасси. Apple и тут нашла необычное решение: к стойке жестко фиксируется крышка корпуса, а если открутить два винта с накатанной головкой — основное шасси выедет на встроенных направляющих.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ts/m-/rg/tsm-rg0dhjlirarhvub5pa37-c0.png">
 </div>
 <br> И вот, она — начинка! Плата передней панели, отсеки жестких дисков с механизмом блокировки, бекплейн, мостиком с парой IDE контроллеров соединенный с системной платой (в терминах Apple — Logic Board). Системах охлаждения представлена парой вентиляторов-турбин, вращающихся с частотой около 5000 оборотов в минуту — одна турбина через воздуховод охлаждает процессорную плату, другая — карты в PCI-слотах в левой части сервера. В правой — расположен единственный блок питания.
 <br> 
 <br> Сама системная плата — непривычно «пустая», на ее поверхности расположен только один крупный чип — PCI64 мост Intel 21154BE. Дополняют пейзаж 4 слота DIMM и два разъема для райзеров — PCI64 для подключения двух слотов и универсальный слот AGP/PCI64 — да, в сервер можно установить производительную видеокарту и использовать его как стоечную рабочую станцию.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/hd/2z/1w/hd2z1wiuht_41s_nggwpo8ez600.png">
 </div>
 <br> В комплект входят два устройства расширения — гигабитная сетевая карта производства Apple на чипе Broadcom BCM5701 с интерфейсом PCI64 и PCI-видеокарта ATi Radeon DDR с 32 МБайт видеопамяти «на борту». Шина для видеокарты работает на 66 МГц (редко используемая в 32-битном варианте шины возможность), что обеспечивает производительность шины на уровне ранней AGP. Интерфейс подключения монитора — обычный D-SUB VGA. 
 <br> 
 <br> На задней панели, помимо привычных USB (пока еще версии 1.1), присутствует COM-порт для управления, разъем встроенного Ethernet-адаптера (также до 1 Гбит/сек) и пара портов FireWire 400 (для подключения внешних накопителей).
 <br> 
 <br> Внимательный читатель спросит — а где же чипсет? Все верно, он никуда не делся — на обратной стороне платы расположен еще один мост Intel 21154BE, а также — неизвестная микросхема, скрытая под накладкой и чип Agere 1258AK5 — составляющие системный контроллер (чипсет в более привычных терминах).
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/3w/rv/oz/3wrvozq5luvmll1fn7t6eipxf34.png">
 </div>
 <br> А вот чего нет на плате — это сокета для установки процессора. Вместо него — разъем для установки процессорной платы (похожий, только меньших размеров использовался в мобильных процессорах Intel Pentium II в упаковке MMC-2). На процессорной плате в традициях Apple тех времен процессоры распаяны — оба друг рядом с другом. Возле каждого — микросхема внешнего кэша.
 <br> 
 <br> Сами процессоры — PowerPC 7455 («Apollo 6», относятся к семейству G4, выпущены Motorola с использованием 180 нм техпроцесса), выполнены в керамической упаковке типа FCBGA — кристалл на поверхности керамической подложки, шариковые выводы для пайки. Кроме процессоров и кэша, на плате расположен модуль преобразователя питания (VRM).
 <br> 
 <br> <font color="#EB4247"><h2>Через пыль, снега и почтовую службу</h2></font>
 <br> Это не будет история о долгом безуспешном поиске или щедром донате, все получилось намного проще. Основатель коллекции искал что-нибудь интересное. Один из его друзей посоветовал: 
 <br> 
 <br> — “Купи себе Mac”. 
 <br> — “Хочу сервер” — ответил основатель. 
 <br> — “Так и купи себе Xserve” — ответ друга и определил вектор поиска. 
 <br> 
 <br> Поиск занял всего 10 минут — среди пачки предложений относительно свежих x86 моделей попалось лишь одно, только что появившееся — «Старый Xserve G4 — включается». Цена была весьма интересна, так что машина была тут же оплачена «не глядя» и спустя несколько часов отправилась в <s>увлекательное</s> путешествие по России.
 <br> 
 <br> Путешествие заняло почти неделю, что довольно быстро, но не прошло бесследно. К сожалению, сложились три фактора — невнимательность продавца к упаковке, непредусмотрительность покупателя (обычно тип упаковки оговаривается и контролируется ее качество) и не доведенные до ума процессы у перевозчика (хотя будет честным отметить, что за последний год виден значительный прогресс!). Сервер прибыл обернутым в картонку и зашитым в мешковину. В итоге, сильно досталось крепежным «ушам» — они просто сложились вдоль корпуса. Что сказать — урок коллекционеру!
 <br> 
 <br> Серверу, впрочем, повезло — после пары часов кропотливой работы, «уши» были выпрямлены: на шасси — полностью в прежнее положение, на крышке — остались небольшие, но заметные следы повреждений. Крышка была и до отправки немного помята, это и сказалось. Хотя сервер закрывается и открывается нормально, для идеального вида стоит посетить кузовной сервис, специализирующийся на ремонте Cybertruck или на худой конец DeLorean.
 <br> 
 <br> Судя по всему, большую часть жизни наш экземпляр провел не в солнечной Калифорнии, а крупном индустриальном городе близ Урала. И жизнь провел насыщенную — не в крупном, спокойном и чистом дата центре, а в обычной серверной. И относились к нему не как к породистой редкой технике, а как к рядовому серверу локальной сборки — за время жизни изрядно досталось фиксаторам плат расширения, один вентиляторов был безвозвратно утерян, а чистки машина не видела полжизни.
 <br> 
 <br> В плюсах — вместо штатных 512 Мбайт памяти, установлен 1 Гбайт. При пристальном изучении, были обнаружены повреждения механизма запирания отсеков накопителей. К счастью, были повреждены лишь лепестки, фиксирующие салазки — пять минут работы и механизм приведен в первозданное состояние. Все это звучит страшно, но, на самом деле, это очень хорошее состояние — передняя панель в отличном косметическом состоянии, даже без царапин, а сама машина практически комплектна. 
 <br> 
 <br> Следующий шаг — тестовое включение. И тут возникли проблемы — машина включается, по индикаторам видно, что идет инициализация, но вывода ни на экран, ни на последовательную консоль не было. После передергивания всех разъемов на плате, картинка появилась. Казалось бы, успех — теперь можно разобрать и почистить. Но не тут то было — после извлечения кучи пыли, машина вернулась к прежним симптомам.
 <br> 
 <br> При этом, машина точно пыталась стартовать — помимо работы индикаторов, была реакция на клавиатуру, которая пропадала при удалении оперативной памяти. Странный способ диагностики? Но имеющаяся в наличии пост-карта не подошла — оказалась несовместима по напряжению питания (а потом пришло осознание, что и ожидать пост-кодов от мака было бы слишком оптимистично), поэтому оставался только «метод тыка» и советы опытных маководов.
 <br> 
 <br> Первым делом была заменена батарея CMOS, здесь используется литиевый «бочонок» на 3.6 В, а установленная показывала еле-еле 3 В. Не помогло и это, равно как многократный сброс настроек. Помогла неожиданная и, на самом деле, абсолютно очевидная идея — очистить контакты спиртом. Обычно проблемы создает память, да и то — в очень старых машинах. Здесь же «слабым звеном» оказалась видеокарта — два прохода спиртовой салфеткой и сервер снова готов общаться с «администратором».
 <br> 
 <br> При покупке, конфигурацию сервера выяснить возможности не было. То, что наш экземпляр относится к старшей модели с двумя процессорами оказалось крайне приятным сюрпризом. По традиции, был увеличен до максимального объем памяти — установлены 4 модуля по 512 Мбайт, что интересно — использование ECC памяти не предполагалось. Также пришлось заменить диск — комплектный был в удручающем состоянии. Удалось найти диск «родной» емкости — 60 Гбайт, свободными остались две дисковых корзины, в четвертом отсеке даже сохранилась оригинальная заглушка.
 <br> 
 <br> Осталось только установить недостающий кулер. На удивление, идеально подошел вентилятор от серверной платформы Intel SR1530, пришлось только перепиновать разъем — Apple не была бы собой, если бы не поменяла местами «плюс» и «минус» в разъеме. Так как родной кулер уже имел заметный люфт подшипника, заменили оба. На этом реставрация сервера была успешно окончена.
 <br> 
 <br> <font color="#EB4247"><h2>На лицо «гуёвая», консольная внутри</h2></font>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/pt/xp/ev/ptxpevsginmzhgobemwhgq4d73i.jpeg">
 </div>
 <br> История серверных ОС Apple восходит к проекту A/UX — UNIX-подобной ОС с графическим интерфейсом в стиле современной ей System 7. Точкой отсчета же для OS X Server является 1999 год, когда была представлена версия 1.0, основанная на идеях проекта Rhapsody. Как и у A/UX «под капотом» был UNIX, точнее BSD-совместимое окружение поверх микроядра Darwin. Интерфейс же был позаимствован у NextSTEP — Workspace Manager, дополненный некоторыми нюансами из Mac OS 8.
 <br> 
 <br> Два года спустя, на этой же основе, но с новым интерфейсом «Aqua» вышла первая Mac OS X — версия 10.0, поставлявшаяся в клиентской и серверной версиях. По сей день Mac OS основывается на тех же принципах и считается одной из самых удобных и надежных операционных систем для персональных компьютеров и рабочих станций. Серверная версия выпускается по сей день, но так и осталась в тени более популярного клиентского варианта.
 <br> 
 <br> На Xserve было решено установить Mac OS X Server 10.2, версию соответствующую времени выпуска данного экземпляра (сервер выпущен в октябре 2002 года). Установка принципиально не отличается от прочих (в том числе десктопных) версий Mac OS X, за исключением выбора набора сервисов, среди которых есть как фирменные яблочные, так и стандартные опенсорсные, и ввода серийного номера. После установки, система встречает окном входа, где нужно ввести логин и пароль, а не выбрать пользователя из списка.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ne/vs/pk/nevspkkbqo4nv0_gv7i75k71rmc.png">
 </div>
 <br> В комплект поставки входят утилиты настройки и аппаратного мониторинга сервера — как локального, так и удаленных. Для фирменных сервисов Apple имеются удобные графические средства администрирования, при этом большинство возможностей, реализованных в графических утилитах не дублируются консольными командами или возможностью правки конфигов.
 <br> 
 <br> И наоборот — для настраиваемых из консоли опенсорс-сервисов, например Apache или MySQL, входящих в поставку, графических утилит не предоставляется. В результате, администратору требуется привыкнуть к обоим подходам к управлению. И все же, в целом, управление системой можно назвать удобным. А интерфейс — безусловно красивым, одним из лучших созданных для операционных систем по сей день.
 <br> 
 <br> <font color="#EB4247"><h2>Продолжение следует?</h2></font>
 <br> Обязательно. Тема винтажного яблочного железа будет раскрыта более подробно — в ближайшее время, пожалуй, это будет одним из важных направлений развития коллекции «Digital Vintage». Обязательно будет и продолжение темы обзоров линейки Xserve, но, к сожалению, оно не будет обширным — линейка просуществовала сравнительно недолго.
 <br> 
 <br> После модели Xserve G5 (RackMac3,1) серверная линейка, вслед за остальными компьютерами Apple перешла на процессоры Intel, сразу начав с 64-битных Xeon серии 5100. На Xeon вышло всего три серии Xserve — две на базе процессоров с микроархитектурой Core — Xeon 5100 (Xserve1,1) и Xeon 5400 (Xserve2,1) и одно на базе процессоров Nehalem — Xeon 5500 (Xserve3,1).
 <br> 
 <br> Последняя модель не получила даже обновления для поддержки линейки Xeon 5600, проект Xserve был свернут. К тому времени, Apple уже вовсю строила свое облако, iCloud. Серверы собственного производства в нем применения не нашли…
 <br> 
 <br> Да, Xserve не были лучшими серверами на рынке — они поздно получили поддержку IPMI, слишком рано перешли на IDE/SATA диски и никогда не использовали SCSI/SAS. Их модельный ряд был весьма ограниченным, а цена достаточно высокой. И все же — этот тот редкий случай, когда сервер был не только инструментом, но и действительно красивой вещью. 
 <br> 
 <br> Решение Apple свернуть проект, скорее всего, было стратегически верным, но мы будем скучать по этим необычным машинам. До новых встреч!
 <br> 
 <br> <a href="https://slc.tl/ePlVm"><img src="https://habrastorage.org/webt/bk/gz/bz/bkgzbzsrulun7_ogtlmob3kem0w.png"></a>
</div>', '2021-02-28 17:29:00', 'Сервер Haute Couture: обзор Apple Xserve G4', 74, null, 4),
        (52, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Этот пост написан в продолжение поста о <a href="https://habr.com/ru/post/544562/" rel="noopener noreferrer nofollow">"Добыча (подъем) водорода из атмосферы Урана"</a>, и описывает следующий этап доставки на низкую опорную орбиту земли (НОО) реактивной массы, но сперва хотелось бы дать пояснения по маневрированию КА на первом этапе.</p>
 <p>КА осуществляющий сборку водорода (Сборщик водорода) из атмосферы Урана в ходе своего рабочего цикла не покидает окрестностей планеты, после того как он будет полностью заправлен водородом он незначительно подымает свою орбиту, но в тоже время достаточно чтобы выйти за пределы атмосферы и перестать испытывать ее сопротивление и встречается там с транспортным кораблем Разгонщиком которому и передает собранный водород, а сам отправляется на следующий цикл сборки.</p>
 <p>Разгонщик конструктивно состоит из двухступенчатой ракеты с ТфЯРД на каждой ступени, при этом водород подлежащий перевозке размещается не в отдельных емкостях полезной нагрузки а в топливных емкостях первой ступени, причина чего пояснена ниже.</p>
 <p>Первая ступень производит поэтапный разгон в перицентре планеты до скорости <code>+6.0км/с </code>и&nbsp;переходит на высокоэллиптическую орбиту планеты, где происходит встреча с КА предназначенным для сборки земного кислорода (Сборщик кислорода), заблаговременно прибывшим на указанную орбиту для встречи с Разгонщиком. Сборщик кислорода состыковывается со второй ступенью и заправляется товарным водородом размещенным в емкостях первой ступени. После окончания процесса заправки Сборщика кислорода топливно-товарный бак первой ступень опустощается и первая ступень отделяется и совершает маневр аэроторможение в атмосфере планеты с переходом на парковочную орбиту для ожидания второй ступени.</p>
 <p>Вторая ступень производит разгон Сборщика кислорода заправленного товарным водородом до скорости <code>+2.6км/с</code>, также в перицентре планеты, но уже в один этап. После достижения требуемой скорости вторая ступень отделяется от Сборщика кислорода и незамедлительно начинает маневр торможения для возврата на высокоэллиптическую орбиту планеты, на которой также как и первая ступень производит маневр аэроторможение в атмосфере планеты.</p>
 <p>Таким образом в <code>32.2</code> летний полет отправляется Сборщик кислорода заправленный товарным водородом, а космические аппараты предназначенные для работы в атмосфере Урана не покидают окрестностей планеты.</p>
 <p>Спустя <code>32.2</code> года Сборщик кислорода прибывает в окрестности Земли.</p>
 <p>Для придания статье драматизма предположим что масса Сборщика <code>100''000 тонн</code> водорода, его подлетная скорость к поверхности планеты <code>13.858км/с</code>, а эквивалентная энергия взрыва <code>2.4 мегатонны</code> тротилового эквивалента. Как следствие Сборщик кислорода приоритетная цель для системы ПРО земли и лакомая цель для кибертеррористов. Взлом систем управления Сборщика кислорода может позволить направить его просто в поверхность планеты и нанести удар в <code>2.4 мегатонны</code>.</p>
 <p>Передняя конструкция Сборщика земного кислорода аналогична конструкции Сборщика водорода.</p>
 <p>Так же как и при работе с водородом разделяем входящий поток воздуха на два. Первый поток смешиваем с горячим газообразным водородом, способ получения которого опишем ниже, и поджигаем получая горячий поток водяного пара с температурой более 3000К. Производим охлаждение первого горячего потока вторым посредством теплообмена до температуры ниже точки кипения воды. Поскольку представляется сомнительным добиться охлаждения первого потока вторым до точки кипения воды, с момента достижения первым потоком определенной температуры отводим его из тракта воздушного теплообмена и направляем его во второй теплообменник в котором производим его охлаждение посредством относительно холодного азота способ получения которого опишем ниже, далее направляем первый поток в третий теплообменник где продолжаем производит его охлаждение уже посредством жидкого водорода итогом этого этапа является получение горячей жидкой воды, которую направляем в бак товарной воды, и горячего газообразного водорода который направляем для сжигания. . В момент перехода горячего пара в жидкое состояние отделяем от него газообразный азот и направляем его во второй теплообменник для охлаждения горячего пара а далее во второй поток. В качестве баков товарной воды используем баки для хранения водорода по мере их освобождения при расходовании водорода</p>
 <p>Горячий второй поток направляем в кормовую часть аппарата где производим его выброс через сопло для создания дополнительной тяги.</p>
 <p>Итогом движения Сборщика кислорода через атмосферу Земли должен стать выход его на низкую опорную орбиту земли загруженным 900''000 тоннами воды полученной при сжигании инопланетного водорода в атмосфере земли. Таким образом можно добиться мультипликативного эффекта увеличив массу доставляемую на НОО в 9 раз.</p>
 <p>Подтвердить изложенную идею расчетами в рамках данной статьи не представляется возможным потому что уже очевидно что даже предварительные расчеты покажут невозможность добиться девяти кратного роста выводимой массы. Данная проблема будет решена в следующей статье в которой и будет подкреплена общими расчетами принципиальной возможности подобного маневра.</p>
 <p>Принципиальной особенностью Сборщика атмосферного кислорода является отсутствие на его борту ядерных силовых установок для исключения загрязнения атмосферы земли.</p>
</div>', '2021-02-28 11:23:00', 'Добыча (подъем) кислорода из атмосферы Земли', 51, null, 6),
        (53, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Некоторое время назад компания Cadence анонсировала новый схемный редактор System Capture. Этот редактор стал уже третьим в линейке доступных инструментов для рисования электрических принципиальных схем Э3. Для чего же Cadence создает так много средств для выполнения одной и той же задачи? </p>
 <p>Дело в том, что новый System Capture разрабатывается, как замена старому редактору DE-HDL. Не секрет, что DE-HDL довольно сложен в освоении и использовании. Он применяется преимущественно большими корпорациями, которые реализовали у себя маршрут электронного управления оборотом конструкторской документации – EDM-систему (EDM – Electronic Data Management). Некоторые пользователи могут сказать, что есть прекрасный и простой OrCAD Capture. Но к сожалению, OrCAD Capture не может быть встроен в систему Allegro EDM, поставляемую Cadence “под ключ”. OrCAD Capture не имеет распределения пользователей по ролям и контроля версий схем, плат и библиотечных компонентов. Конечно, можно воспользоваться EDM-системами сторонних производителей, в которых OrCAD Capture участвует в полноценной системе автоматизированного электронного документооборота. Таким примером может служить EDM-система фирмы FlowCAD, а именно CAD-FlowManager, простая, компактная и довольно удобная в настройке, либо система OrCAD EDM – тоже несложное и базовое решение для управления проектами, поставляемое как опция к САПР OrCAD. Но, если нужна серьезная и универсальная система управления инженерными данными, с контролем доступа, контролем версий, возможностью добавления инструментов и создания пользовательских маршрутов – то лучшим выбором будет система Allegro EDM. К сожалению, в этом случае возможности использовать OrCAD Capture нет.</p>
 <p>Вернемся к вопросу о том, почему от использования старого редактора DE-HDL стараются уйти? Дело в том, что пользовательский интерфейс этой программы давно не обновлялся, да и о программе в целом нельзя сказать, что она User Friendly. Переписывать пользовательский интерфейс – довольно трудоемкая задача для программистов. По этим причинам, видимо, работы по модернизации DE-HDL было решено прекратить.</p>
 <p>System Capture позиционируется, как преемник DE-HDL. В нем есть возможность импорта библиотек и схем из старого схемного редактора.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/417/822/e0f/417822e0f6d82a32468a23228f544322.png" alt="Начало импорта схемы из DE-HDL в System Capture" title="Начало импорта схемы из DE-HDL в System Capture" width="403" height="234">
  <figcaption>
   Начало импорта схемы из DE-HDL в System Capture
  </figcaption>
 </figure>
 <p>Новый редактор обладает современным, приятным для глаза и удобным в работе пользовательским интерфейсом. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/88c/907/848/88c907848bcbf4745a51a75b63a354a0.png" alt="Первый взгляд на интерфейс System Capture" title="Первый взгляд на интерфейс System Capture" width="783" height="528">
  <figcaption>
   Первый взгляд на интерфейс System Capture
  </figcaption>
 </figure>
 <p>Размеры окошек и текста в них можно настроить “на лету”, не заходя в Options.</p>
 <p>Присутствует предпросмотр открываемых страниц – превью.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/014/f48/cb4/014f48cb4ba36d3abe6e4798a40f6e46.png" alt="При наведении курсора на схемную страницу формируется ее превью" title="При наведении курсора на схемную страницу формируется ее превью" width="482" height="420">
  <figcaption>
   При наведении курсора на схемную страницу формируется ее превью
  </figcaption>
 </figure>
 <p>Можно настраивать фильтр выбора объектов на листах схемы. Эта возможность взята из редактора OrCAD Capture. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c6a/257/442/c6a25744218e090670518f2535375a3a.png" alt="Фильтр по выделению объектов на листах схемы" title="Фильтр по выделению объектов на листах схемы" width="415" height="133">
  <figcaption>
   Фильтр по выделению объектов на листах схемы
  </figcaption>
 </figure>
 <p>Наиболее важной деталью является поддержка контроля версионности схемы. К каждой версии при желании можно вернуться. Можно хранить схему централизованно, а можно локально, как копию, у себя на рабочем месте. Локальная копия будет доступна для редактирования только на вашем рабочем месте.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b59/ba8/67e/b59ba867eb150a2bc3094a6ebd649a7f.png" alt="Контроль версий схемы" title="Контроль версий схемы" width="783" height="732">
  <figcaption>
   Контроль версий схемы
  </figcaption>
 </figure>
 <p>Вообще System Capture постарался вобрать в себя все лучшее из уже существующих редакторов OrCAD Capture и DE-HDL. По мнению автора, это у него получилось. Но цель данного текста не в описании всех возможностей нового редактора. Цель – познакомить пользователей DE-HDL и OrCAD с новым пополнением в линейке схемных редакторов. </p>
 <p>Запустить System Capture можно, если у вас есть лицензия для использования DE-HDL или же лицензия Allegro Design Authoring, которая позволяет запускать все существующие схемные редакторы Cadence.</p>
 <p>Файл запуска System Capture расположен в папке инсталляции: “C:\\Cadence\\SPB_17.4\\tools\\bin\\syscap.exe”. Вы можете запустить его и попробовать уже сейчас.<br> На сайте support.cadence.com доступны бесплатные видео-уроки по ознакомлению с интерфейсом этого редактора. Зайдите во вкладку Learning, Online Courses, PCB Design, и введите в строке поиска System Capture.</p>
</div>', '2021-03-09 14:19:00', 'Новый схемный редактор Cadence System Capture', 0, null, 4),
        (54, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <a href="https://habr.com/ru/company/piter/blog/545000/"><img src="https://habrastorage.org/webt/n8/pj/ml/n8pjmlfqv3elhp8jeb_sucag85m.jpeg" align="left" alt="image"></a> Привет, Хаброжители! Программирование и тестирование обычно принято относить к разным профессиональным сферам. Скотт Оукс — признанный эксперт по языку Java — уверен, что если вы хотите работать с этим языком, то обязаны понимать, как выполняется код в виртуальной машине Java, и знать, какие настройки влияют на производительность. Вы сможете разобраться в производительности приложений Java в контексте как JVM, так и платформы Java, освоите средства, функции и процессы, которые могут повысить производительность в LTS-версиях Java, и познакомитесь с новыми возможностями (такими как предварительная компиляция и экспериментальные уборщики мусора). В этой книге вы: — Узнаете, как платформы и компиляторы Java влияют на производительность. — Разберетесь c механизмом уборки мусора. — Освоите четыре принципа получения наилучших результатов при тестировании производительности. — Научитесь пользоваться JDK и другими инструментами оценки производительности. — Узнаете как настройка и приемы программирования позволяют минимизировать последствия уборки мусора. — Научитесь решать проблемы производительности средствами Java API. — Поймете, как улучшить производительность приложений баз данных Java.
 <br> <a name="habracut"></a>
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Для кого написана эта книга</b> 
  <div class="spoiler_text">
   Эта книга написана для специалистов по производительности и разработчиков, которые желают разобраться в различных аспектах влияния JVM и Java API на производительность. Если сейчас воскресный вечер, в понедельник ваш сайт должен принять первых посетителей, а вы хотите на скорую руку решить проблемы с производительностью — эта книга не для вас.
   <br> 
   <br> Если у вас еще нет опыта анализа производительности и вы начинаете заниматься им в Java — эта книга может вам помочь. Конечно, я постараюсь предоставить достаточно информации и контекста, чтобы начинающие специалисты могли понять, как следует применять основные настройки и принципы регулировки производительности в приложениях Java. Тем не менее системный анализ — весьма обширная область. Существует ряд превосходных ресурсов, посвященных системному анализу в целом (и конечно, эти принципы применимы к Java); в этом смысле книга станет полезным приложением к этим текстам.
   <br> 
   <br> Однако на фундаментальном уровне, для того чтобы ваши программы Java работали действительно быстро, необходимо глубоко понимать, как работает JVM (и Java API). Существуют сотни флагов настройки Java, и настройка JVM не должна сводиться к тому, чтобы бездумно изменять эти флаги и смотреть, что из этого получится. Вместо этого я постарался подробно рассказать о том, что делают JVM и API, в надежде, что вы поймете суть происходящего, разберетесь в конкретном поведении приложения и осознаете, почему оно неэффективно работает. После этого вам останется решить простую (или относительно простую) задачу: избавиться от нежелательного (неэффективного) поведения.
   <br> 
   <br> У работы в области производительности Java есть один интересный аспект: по уровню подготовки разработчики часто сильно отличаются от инженеров из группы производительности или контроля качества. Я знаю разработчиков, которые помнят тысячи сигнатур малоизвестных методов, редко используемых в Java API, но понятия не имеют, что делает флаг -Xmn. И я знаю инженеров по тестированию, которые могут выжать последнюю каплю производительности установкой различных флагов уборщика мусора, но едва смогут написать программу «Hello World» на Java.
   <br> 
   <br> Производительность Java включает обе области: настройку флагов компилятора, уборщика мусора и т.д., а также оптимальное использование API. Я буду считать, что вы хорошо умеете писать программы на Java. Даже если вас в первую очередь интересуют непрограммные аспекты Java, мы проведем немало времени за обсуждением программ, включая примеры, которые предоставляют тестовые данные для примеров.
   <br> 
   <br> Впрочем, если прежде всего вас интересует производительность JVM — то есть изменение поведения JVM без какого-либо программирования, — многие части книги вам все равно пригодятся. Просто пропустите материал, относящийся к программированию, и сосредоточьтесь на областях, которые вас интересуют. Возможно, в процессе чтения вы получите некоторое представление о том, как приложения Java могут влиять на производительность JVM, и начнете предлагать изменения разработчикам, чтобы они могли упростить вашу работу по тестированию производительности.
   <br> 
  </div> 
 </div>
 <br> 
 <h3>Алгоритмы уборки мусора</h3>
 <br> OpenJDK 12 предоставляет различные алгоритмы уборки мусора с разной степенью поддержки в более ранних версиях. В табл. 5.1 перечислены эти алгоритмы с указанием их статуса в выпусках OpenJDK и Oracle.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/xg/ey/xt/xgeyxth-8dkszwlv3guragtlwhk.png" alt="image">
 </div>
 <br> 
 <br> S — полная поддержка; D — считается устаревшим; E — экспериментальная поддержка; E2 — экспериментальная поддержка в сборках OpenJDK, но не в сборках Oracle.
 <br> 
 <br> Ниже приводятся краткие описания всех алгоритмов; в главе 6 приведена более подробная информация об их настройке.
 <br> 
 <br> 
 <h4>Последовательный уборщик мусора</h4>
 <br> Последовательный уборщик мусора — простейший из всех. Он используется по умолчанию, если приложение работает на машине клиентского уровня (32-разрядные JVM для Windows) или на однопроцессорной машине. Когда-то казалось, что последовательному уборщику мусора пора на свалку, но контейнеризация изменила ситуацию: с появлением одноядерных контейнеров Docker и виртуальных машин (даже с гиперпоточным ядром, которое воспринимается как два процессора) этот алгоритм снова стал актуальным.
 <br> 
 <br> Последовательный уборщик мусора использует один поток для обработки кучи. Он останавливает все потоки приложений на время обработки кучи (для малой или полной уборки мусора). Во время полной уборки мусора происходит полное сжатие старого поколения.
 <br> 
 <br> Последовательный уборщик мусора включается при помощи флага -XX:+UseSerialGC (хотя обычно он используется по умолчанию в тех случаях, в которых он может использоваться). Учтите, что в отличие от многих флагов JVM последовательный уборщик мусора не отключается заменой знака + на знак — (то есть с флагом -XX:-UseSerialGC). В тех системах, в которых последовательный уборщик мусора используется по умолчанию, он отключается выбором другого алгоритма уборки мусора.
 <br> 
 <br> 
 <h4>Параллельный уборщик мусора</h4>
 <br> В JDK 8 параллельный уборщик мусора используется по умолчанию на всех 64-разрядных машинах с двумя и более процессорами. Параллельный уборщик мусора использует несколько потоков для уничтожения молодого поколения, вследствие чего малая уборка мусора работает намного быстрее при использовании последовательного уборщика мусора. Алгоритм также использует несколько потоков для обработки старого поколения — собственно, именно по этой причине он называется параллельным.
 <br> 
 <br> Параллельный уборщик мусора останавливает все потоки приложения на время малой и полной уборки мусора и полностью сжимает старое поколение во время полной уборки. Так как он используется по умолчанию во многих ситуациях, в которых уместно его использование, явно включать его не нужно. Чтобы включить его тогда, когда это потребуется, используйте флаг -XX:+UseParallelGC.
 <br> 
 <br> Учтите, что в старых версиях JVM параллельная уборка мусора включалась для старых и новых поколений по отдельности, поэтому иногда встречаются упоминания флага -XX:+UseParallelOldGC. Этот флаг считается устаревшим (хотя и продолжает функционировать, и его можно отключить для параллельной уборки только молодого поколения, если по какой-то причине возникнет такая необходимость).
 <br> 
 <br> 
 <h4>Уборщик мусора G1</h4>
 <br> Уборщик мусора G1 использует стратегию конкурентной уборки мусора для очистки кучи с минимальными паузами. Этот уборщик используется по умолчанию в JDK 11 и более поздних версиях для 64-разрядных JVM на машинах, оснащенных двумя и более процессорами.
 <br> Уборщик мусора G1 делит кучу на области, но при этом рассматривает кучу как разделенную на два поколения. Некоторые области формируют молодое поколение, при уборке которого приостанавливаются все потоки приложения, а все живые объекты перемещаются в старое поколение или области выживших объектов (для чего используются множественные потоки).
 <br> В уборщике мусора G1 старое поколение обрабатывается фоновыми потоками, которым не нужно останавливать потоки приложения для выполнения большей части своей работы. Так как старое поколение делится на области, уборщик мусора G1 может освобождать объекты из старого поколения, копируя их из одной области в другую; это означает, что он (по крайней мере частично) сжимает кучу в ходе нормальной обработки. Это способствует предотвращению фрагментации куч G1, хотя полностью исключить ее нельзя.
 <br> 
 <br> За предотвращение полных циклов уборки мусора приходится расплачиваться процессорным временем: (множественные) фоновые потоки, которые уборщик мусора G1 использует для обработки старого поколения, должны располагать процессорным временем на время выполнения потоков приложения.
 <br> 
 <br> Уборщик мусора G1 включается при помощи флага -XX:+UseG1GC. В большинстве случаев он используется по умолчанию в JDK 11, но также сохраняет функциональность в JDK 8 — особенно в поздних сборках JDK 8, содержащих многие важные исправления ошибок и улучшения производительности, которые были перенесены из более поздних выпусков. Как можно увидеть при углубленном анализе уборщика G1, в JDK 8 не поддерживается один важный аспект производительности, из-за которого данный механизм может стать непригодным для этого выпуска.
 <br> 
 <br> 
 <h4>Уборщик мусора CMS</h4>
 <br> Уборщик мусора CMS стал первым конкурентным уборщиком. Как и другие алгоритмы, CMS останавливает все потоки приложений в ходе малой уборки мусора, которую он проводит в нескольких потоках.
 <br> 
 <br> CMS официально считается устаревшим в JDK 11 и выше, а использовать его в JDK 8 не рекомендуется. С практической точки зрения главный недостаток CMS заключается в том, что он не может сжимать кучу в ходе фоновой обработки. Если куча фрагментируется (что с большой вероятностью произойдет в какой-то момент), CMS приходится остановить все потоки приложения и сжать кучу, что противоречит самой цели конкурентного уборщика. С учетом этого обстоятельства и появлением уборщика G1 использовать CMS более не рекомендуется.
 <br> CMS включается флагом -XX:+UseConcMarkSweepGC, который по умолчанию равен false. Традиционно CMS также требовал установки флага -XX:+UseParNewGC (в противном случае уборка в молодом поколении будет выполняться одним потоком), хотя этот флаг считается устаревшим.
 <br> 
 <br> 
 <h4>Экспериментальные уборщики мусора</h4>
 <br> Уборка мусора остается благодатной почвой для разработчиков JVM, а более новые версии Java поставляются с тремя экспериментальными алгоритмами, упоминавшимися ранее. Я подробнее расскажу о них в следующей главе; а пока выясним, как выбрать между тремя уборщиками мусора, поддерживаемыми в средах реальной эксплуатации.
 <br> 
 <br> 
 <blockquote>
  Включение и выключение принудительной уборки мусора
  <br> Уборка мусора обычно происходит тогда, когда JVM считает, что она необходима: малая уборка мусора инициируется при заполнении нового поколения, полная — при заполнении старого поколения, а конкурентная (если она применима) — когда куча близка к заполнению.
  <br> 
  <br> Java предоставляет механизм, при помощи которого приложения могут инициировать принудительную уборку мусора: метод System.gc(). Вызывать этот метод почти всегда нежелательно. Вызов всегда запускает полную уборку мусора (даже если JVM работает с уборщиком G1 или CMS), поэтому потоки приложения будут остановлены на относительно длительный период времени. Вызов этого метода не сделает приложение более эффективным; он заставит уборку мусора выполниться ранее, чем она могла бы произойти, но в действительности проблема не исчезает, а всего лишь перемещается в другое место.
  <br> 
  <br> У каждого правила есть исключения, особенно при мониторинге производительности или хронометражных тестах. Для небольших хронометражных тестов, которые выполняют код для разогрева JVM, выполнение принудительной уборки мусора перед циклом измерений может иметь смысл. (Так поступает jmh, хотя обычно это не обязательно.) Аналогичным образом, при анализе кучи обычно стоит провести полную уборку мусора перед получением дампа. Многие способы получения дампа кучи все равно проводят полную уборку мусора, но ее также можно инициировать другими способами: выполнить команду jcmd&lt;идентификатор_процесса&gt; GC.run или подключиться к JVM при помощи jconsole и щелкнуть на кнопке Perform GC на панели Memory.
  <br> 
  <br> Другим исключением является механизм RMI (Remote Method Invocation), который вызывает System.gc() каждый час в процессе работы распределенного уборщика мусора. Периодичность вызова можно изменить, присвоив другие значения двум системным свойствам: -Dsun.rmi.dgc.server.gcInterval=N и -Dsun.rmi.dgc.client.gcInterval=N. Значения N задаются в миллисекундах, а значение по умолчанию равно 3 600 000 (один час).
  <br> 
  <br> Если вы выполняете сторонний код, который вызывает метод System.gc(), а для вас это нежелательно, уборку мусора можно предотвратить включением флага -XX:+DisableExplicitGC в аргументы JVM; по умолчанию этот флаг равен false. Такие приложения, как серверы Java EE, часто включают этот аргумент, для того чтобы вызовы RMI GC не мешали их работе.
 </blockquote>
 <br> 
 <h4>Резюме</h4>
 <br> 
 <ul> 
  <li>Поддерживаемые алгоритмы уборки мусора принимают разные меры для достижения своей цели — минимизации воздействия уборки мусора на приложение.</li> 
  <li>Последовательный уборщик мусора имеет смысл (и используется по умолчанию), когда на машине доступен только один процессор, а дополнительные потоки уборки мусора помешают работе приложения.</li> 
  <li>Параллельный уборщик мусора используется по умолчанию в JDK 8; он максимизирует общую эффективность приложения, но может стать причиной долгих пауз в отдельных операциях.</li> 
  <li>Уборщик мусора G1 используется по умолчанию в JDK 11 и выше; он проводит конкурентную чистку старого поколения во время выполнения потоков приложения, теоретически избегая полной уборки мусора. Такая архитектура снижает вероятность полной уборки мусора по сравнению с CMS.</li> 
  <li>Уборщик мусора CMS может одновременно чистить старое поколение во время выполнения потоков приложения. Если у процессора хватает ресурсов для фонового выполнения, алгоритм может избежать полных циклов уборки мусора в приложении. Сейчас он считается устаревшим, а вместо него рекомендуется использовать G1.</li> 
 </ul>
 <br> 
 <h4>Выбор алгоритма уборки мусора</h4>
 <br> Выбор алгоритма уборки мусора зависит от нескольких факторов: от имеющегося оборудования, от специфики приложения, от целей приложения по производительности. В JDK 11 уборщик мусора G1 часто оказывается наилучшим вариантом; в JDK 8 выбор зависит от приложения.
 <br> Для начала будем условно считать, что алгоритм G1 является более подходящим вариантом, но у каждого правила есть свои исключения. В случае уборки мусора эти исключения связаны с объемом ресурсов процессора, необходимых приложению, относительно доступного оборудования и вычислительными ресурсами, необходимыми потокам G1 для фоновой обработки. 
 <br> 
 <br> Если вы используете JDK 8, способность алгоритма G1 избегать полной уборки мусора также станет ключевым фактором. Если уборщик мусора G1 не является лучшим вариантом, выбор между параллельными и последовательными уборщиками мусора зависит от количества процессоров на машине.
 <br> 
 <br> Более подробно с книгой можно ознакомиться на <a href="https://www.piter.com/product/effektivnyy-java-tyuning-koda-na-java-8-11-i-dalshe-2-e-mezhd-izdanie?_gs_cttl=120&amp;gs_direct_link=1&amp;gsaid=42817&amp;gsmid=29789&amp;gstid=c">сайте издательства</a>
 <br> » <a href="https://storage.piter.com/upload/sg/9785446117574/C/1.jpg">Оглавление</a>
 <br> » <a href="https://storage.piter.com/upload/sg/9785446117574/F/1.jpg">Отрывок</a>
 <br> 
 <br> Для Хаброжителей скидка 25% по купону — <b>Java</b>
 <br> 
 <br> По факту оплаты бумажной версии книги на e-mail высылается электронная книга.
</div>', '2021-03-10 13:26:00', 'Книга «Эффективный Java. Тюнинг кода на Java 8, 11 и дальше. 2-е межд. издание »', 50, null, 6),
        (55, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Роботизация с каждым годом все глубже проникает в разные сферы жизни. С помощью роботов можно быстро сделать работу, которая слишком опасна, сложна или требует больших трудозатрат. В этой статье мы не будем рассказывать о роботизации в машиностроении или, например, о роботизации процессов (RPA). Лучше расскажем о тех областях, где роботам еще предстоит доказывать свою эффективность.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/os/ni/w7/osniw72tvsru6pfbcdaq1n2wfgi.jpeg">
 <br> <a name="habracut"></a>
 <br> 
 <h2>Робособаки на службе полиции</h2>
 <br> Департамент полиции Нью-Йорка <a href="https://www.nytimes.com/2021/02/27/nyregion/nypd-robot-dog.html">использует</a> Digidog — роботов-собак от Boston Dynamics, правда пока в тестовом режиме. Планируется, что они будут применяться в опасных ситуациях, когда есть риск для жизни полицейских. Среди заявленных плюсов Digidog — способность видеть в темноте и оценивать, насколько безопасно полицейскому заходить внутрь помещения.
 <br> 
 <br> Полицейские уже использовали Digidog на практике — например, чтобы освободить заложников. Кроме камер, роботы оснащены динамиками и микрофоном, поэтому оперативники могут использовать их для переговоров с преступниками. Полиция уверена, что благодаря Digidog число раненых и погибших сотрудников должно уменьшится. 
 <br> 
 <br> Высказываются и опасения, что таких роботов, как и любое устройство, можно взломать и использовать во вред — например, несанкционированно собирая информацию о людях. По словам вице-президента по развитию бизнеса Boston Dynamics Майкла Перри, компания серьезно относится к защите от взлома, а сами роботы не были задуманы, как скрытые инструменты массового наблюдения: «Они шумят, у них множество мигающих лампочек. Их сложно не заметить».
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/au/re/fi/aurefibc3maqn9olfbekwayzdfs.jpeg">
 <br> <i>Да, Digidog — это тот самый робот из пугающих видеороликов Boston Dynamics. Источник: inceptivemind.com</i>
 <br> 
 <br> 
 <h2>Роботы в других опасных ситуациях</h2>
 <br> Spot — еще один робот от Boston Dynamics, который используют в основном промышленные, коммунальные, энергетические и строительные компании. Его отправляют в опасные для людей места, используют, чтобы осмотреть сложные участки работ. В начале пандемии Spot использовался медицинскими работниками для общения с людьми с признаками коронавируса. Начальная стоимость таких роботов — от 74 000 долл. 
 <br> 
 <br> 
 <h2>Большой Робобрат</h2>
 <br> Компания Knightscope выпускает футуристичных автономных роботов, которые должны обеспечивать безопасность, патрулируя торговые центры и другие общественные пространства. Также компания заявляла о возможности распознавания лиц. Компания объяснила, что так роботы могут «приветствовать VIP-персону или уведомлять клиентов о прибытии VIP-персон на место». 
 <br> 
 <br> Некоммерческая правозащитная организация «Фонд электронных рубежей» (Electronic Frontier Foundation) <a href="https://www.eff.org/deeplinks/2021/01/police-robots-are-not-selfie-opportunity-theyre-privacy-disaster-waiting-happen">заявляет</a>, что роботы Knightscope без каких-либо ограничений собирают и передают властям персональную информацию о людях поблизости — идентификационные данные мобильных телефонов (например, MAC-адреса), геолокационные данные и другое.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/yo/qx/hd/yoqxhdnrm_bq1zuvezrexgfrmz4.jpeg">
 <br> <i>Роботы Knightscope на страже безопасности. Источник: businesswire.com</i>
 <br> 
 <br> 
 <h2>Сельское хозяйство</h2>
 <br> Роботы активно <a href="https://www.bbc.com/news/business-56195288">используются</a> в сельском хозяйстве многих стран. Это, например, автономные уборщики урожая и беспилотники для фотографирования и опрыскивания полей. По прогнозам, рынок сельхозроботов к 2027 году <a href="https://www.grandviewresearch.com/press-release/global-precision-farming-market">достигнет</a> 12,9 млрд долл., а среднегодовой рост составит 13%.
 <br> 
 <br> По словам директора Лаборатории распределенных автономных систем в Университете Иллинойса, профессора Гириша Чаудхари, появление полностью автономных ферм — дело не такого далекого будущего. «И здесь понадобятся разные виды роботов. Некоторые из них будут очень маленькими, другие будут большими, возможно, размером с зерноуборочный комбайн».
 <br> 
 <br> Еще один пример — международная американская некоммерческая организация TechnoServe, которая использует беспилотники для анализа состояния полей. Это помогает увеличить производство кешью в африканском Бенине. Директор компании Дэйв Хейл отмечает, что таким образом можно «с высокой точностью» определить оптимальные участки для выращивания орехов. Компания планирует тиражировать опыт на Западную Африку и Мозамбик.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/rj/5i/hu/rj5ihubjjwtkd4zbdtxxa7u_mzu.jpeg">
 <br> <i>Автономный робот мониторит условия, в которых растут культуры. Источник: share.america.gov</i>
 <br> 
 <br> 
 <h2>Логистика</h2>
 <br> Сборка заказов в электронной коммерции — сфера, которая и раньше активно развивалась, но пандемия придала ей дополнительный импульс. Например, в США к 2025 году <a href="https://www.cnbc.com/2020/07/09/us-may-need-another-1-billion-square-feet-of-warehouse-space-by-2025.html">понадобится</a> более 92 миллионов кв. метров новых складских площадей, чтобы отвечать запросам рынка.
 <br> 
 <br> Компания Locus Robotics, которая производит автономные мобильные роботы для складских помещений, недавно <a href="https://locusrobotics.com/our_news/funding-boost-takes-locus-valuation-to-1bn/">объявила</a> о полученных инвестициях в размере 150 млн долл., а ее общая рыночная стоимость достигла 1 млрд долл. По информации компании, складам хронически не хватает рабочей силы при постоянно растущих объемах интернет-продаж. Компания собирается в течение следующих четырех лет поставить более миллиона складских роботов. По прогнозам, количество складов, использующих их, <a href="https://www.logisticsmgmt.com/article/locus_robotics_announces_150_million_series_e_funding_round?__cf_chl_captcha_tk__=bb76fcdb7d5007fe67df2ce9ee46b5e252cd8750-1614672926-0-AQRlgoWdoyfAqqNxs7BYkFrkQXynRJe22tb65ZBvBS9jLVIbru48N9-T9Q28TCWQlVOnjaxSFhIYz9H6iz5ejuZ729XkWGgntQKoz3LeWUeJgwa2FNM0nA_7dIchl4U-bX7dBsd-Zvhsgo9cKRqtTQ9-J_4SeaHV--LeN_ARv80dPENcwwbc-FadcN1IIcJiEP7u6RM3d7zewmHZSmNUXm1nBvls2csPUwT2e3NKWM2l1YH0xzgBxXlT34y_VRePHNN7qm9ZHySmYDlas1mVdq8gviw-v3U-BNh3wQYqqIjc_Y7MStPqlIJpjBtrUv-rOqcPufraX0f-rWtwVUhGLuHL13-pP64S-fXKPZ91SsE99pyip2cHEQY_cZrw6GzTj8F_jRkeQegB4I0YGBMwLftB1rMPSfbqhlIsjfj8_ZZhLr_CdB6KTc7JEosWi3Ma4GjCHJAHRCJvuTKwxdBd44RYCzpk4x-kaQctbJc_vsoMTvxmqiKRF4T21cYzGUmMiKyFHRY_Iwg7JzsTr0bgwDlLccgFh_98QQvGjec-GkBgoJf_MnluCvEse1eoUb1pn7wJ2RJ5lCsvm-0Q2Y7ddTpUjFVX9qUKgaHdFOpqGwIf">вырастет</a> в десять раз. На сегодня у компании около 40 клиентов, их роботы используются на 80 складах по всему миру.
 <br> 
 <br> 
 <hr>
 <br> Блог <a href="https://itglobal.com/ru-ru/">ITGLOBAL.COM</a> — Managed IT, частные облака, IaaS, услуги ИБ для бизнеса:
 <br> 
 <br> 
 <ul> 
  <li><a href="https://habr.com/ru/company/itglobalcom/blog/540748/">Информационная безопасность в 2021 году. Угрозы, отраслевые тренды</a></li> 
  <li><a href="https://habr.com/ru/company/itglobalcom/blog/535682/">Технологические итоги 2020 года: от всеобщей удаленки до запуска Spotify в России</a></li> 
  <li><a href="https://habr.com/ru/company/itglobalcom/blog/528928/">Страх перед автоматизацией работы и другие тренды в мировой и российской кибербезопасности</a></li> 
  <li><a href="https://habr.com/ru/company/itglobalcom/blog/525860/">Главные тенденции ИТ-индустрии в 2021 году по версии Gartner</a></li> 
  <li><a href="https://habr.com/ru/company/itglobalcom/blog/521014/">Эволюция ИТ: от локальных серверов до managed services</a></li> 
 </ul>
</div>', '2021-03-03 12:31:00', 'От помощи полицейским до уборки урожая. Не самые очевидные сферы применения роботов', 91, null, 6),
        (56, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/889/f5a/0f7/889f5a0f77dc5c804d4286a2f6efef91.jpg" width="1920" height="1080">
  <figcaption></figcaption>
 </figure>
 <p>В России стартует проектирование межпланетной автоматической станции «Венера-Д», сейчас заключают договоры с исполнителями, <a href="https://tass.ru/kosmos/10830071" rel="noopener noreferrer nofollow">сообщает</a> ТАСС со ссылкой на научного руководителя Института космических исследований (ИКИ) РАН, академика РАН Льва Зелёного.</p>
 <p>Это будет первый аппарат, который Россия запустит на Венеру — ранее венерианские миссии проводились только в СССР. По словам академика, специалисты начали техническое проектирование проекта, а первый запуск должен произойти в 2029 году. Его исполнителями выступят НПО им. С.А. Лавочкина, которое входит в Роскосмос, и ИКИ РАН. Проектирование, утверждает Зелёный, продлится два года. </p>
 <p>Пока детали венерианской программы не определены — их установят в ходе проектирования. На сегодня она включает три миссии: первая, «Венера-Д» будет изучать поверхность, атмосферу, внутреннее строение и окружающую плазму Венеры. Второй запуск намечен на июнь 2031 года и предполагает продолжение этих исследований. А третья миссиия, по планам, состоится в июне 2034 года — в её ходе аппараты должны доставить на Землю образцы атмосферы, аэрозолей и, возможно, грунта с этой планеты.&nbsp;</p>
 <p>Предыдущая программа исследования Венеры в СССР была проведена в 1970 году. Тогда советская автоматическая станция «Венера-7» совершила первую в истории мягкую посадку на планету, где проработала около 20 минут и вышла из строя из-за крайне жёстких условий.&nbsp;</p>
 <p>В 2020 году интерес ко второй планете Солнечной системы вновь возрос: так, в сентябре учёные из Кардиффского университета и Массачусетского технологического института обнаружили в атмосфере Венеры фосфин. Это вещество может указывать на существование жизни — на Земле его производят анаэробные организмы. Тогда же о старте венерианской миссии в 2029 году высказались в ИКИ РАН — ведущий научный сотрудник института Людмила Засова <a href="https://habr.com/ru/news/t/519384/" rel="noopener noreferrer nofollow">сообщала</a>, что над концепцией проекта «Венера-Д» работала совместная российско-американская группа.</p>
</div>', '2021-03-04 07:50:00', 'В России началось проектирование первой со времен СССР миссии на Венеру', 14, null, 4),
        (57, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>На волне интереса к Clubhouse, основателям которого все чаще приходится <a href="https://habr.com/ru/company/audiomania/blog/542846/">отвечать</a> на критику, набирают популярность новые аудиосоцсети — Cappuccino, Audlist, Nibble и ряд других проектов, стремящихся стать жизнеспособной альтернативой «<a href="https://habr.com/ru/company/audiomania/blog/542200/">клубному дому</a>». Обсуждаем наиболее заметные начинания, их особенности, преимущества, недостатки и перспективы.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c4e/305/4f9/c4e3054f9010910a1f7031d398c73242.jpeg" alt="Фотография: Wes Hicks. Источник: Unsplash.com" title="Фотография: Wes Hicks. Источник: Unsplash.com" width="2000" height="1406">
  <figcaption>
   Фотография: Wes Hicks. Источник: Unsplash.com
  </figcaption>
 </figure>
 <h2>Почему так мало</h2>
 <p>Пока разработок в этой области не так и много, что вполне объяснимо — придумать новые способы взаимодействия с аудиоконтентом и привлечь к ним внимание публики весьма непросто. Люди не торопятся отказываться от привычных форматов <a href="https://www.audiomania.ru/content/art-4965.html">вроде радио</a>, <a href="https://www.audiomania.ru/content/art-7844.html">подкастов</a> и стриминга. Прямые эфиры и записи постоянно слушают в качестве фона. Как на работе, так и в транспорте, дома, на тренировках и даже во время чтения классических соцсетей. Последних меньше точно не становится, как и голосовых звонков с коллегами на «удаленке».</p>
 <p>В такой обстановке невозможно требовать от людей повышенного интереса к очередной аудиосоцсети с неизвестным «выхлопом». Да и пытаться продвинуть что-то такое с помощью рекламы, закидывая в печь деньги инвесторов, тоже — не вариант. Поэтому основная часть таких проектов остается лежать под толстым слоем пыли где-то в подвалах магазинов приложений, а их основатели вынуждены полагаться на волю случая — чуть ли не на ощупь угадывать комбинацию UX/UI-приемов, которые запустят тот самый виральный эффект, сделают проект запоминающимся и известным без каких-либо дополнительных вложений в маркетинг.</p>
 <h2>Дом напротив</h2>
 <p>Пример Clubhouse — не исключение. Наоборот, прекрасная иллюстрация «хайпа из топора». Теперь его невозможно обойти стороной при обсуждении практически любого проекта в этой области, и <a href="https://techcrunch.com/2021/03/01/cappuccino-lets-you-share-short-intimate-audio-stories-with-your-friends/">беседа</a> журналистов Techcrunch с разработчиками <a href="https://capp.fm/">Cappuccino</a> только подтверждает это правило. Сравнение этого стартапа с Clubhouse в первом же абзаце дает читателям понять — битва за первенство в нише только начинается, и «anti-Clubhouse» не собирается уступать.</p>
 <blockquote>
  <p>Он наследует от знакомых форматов — микроподкастов и пресловутых голосовых сообщений. Записи тех, на кого вы подписаны, Cappuccino собирает в аудиоленту со вступительной музыкой. Этот подход основатели тестировали в ручном режиме — просили знакомых присылать им голосовые заметки и сводили их в аудиоредакторе. Потом автоматизировали процесс и заложили его в основу новой соцсети.</p>
  <p>Cappuccino «варит» пользовательские «голосовухи» так, чтобы все могли ощутить себя в непринужденной обстановке. Без гонки за лайками, новыми подписчиками и другими «ванильными метриками». Без лишнего пафоса ведущих подкастов и передач из YouTube, с которыми практически невозможно связаться. Атмосфера здесь определенно другая и больше напоминает общение близких друзей на кухне за чашечкой кофе.</p>
 </blockquote>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d2a/dc0/d57/d2adc0d579c8e557cf5ffa44c319d78f.jpeg" alt="Фотография: Nathan Dumlao. Источник: Unsplash.com" title="Фотография: Nathan Dumlao. Источник: Unsplash.com" width="2000" height="1517">
  <figcaption>
   Фотография: Nathan Dumlao. Источник: Unsplash.com
  </figcaption>
 </figure>
 <p><a href="https://audlist.com/en/"><strong>Audlist</strong></a> выглядит скромнее. Про него пока не пишут крупные технологические издания. Однако стартап часто встречается в подборках соцсетей с аудиоконтентом. Он не ограничивает длительность записей, хотя и сводит общение к бесконечному обмену голосовыми заметками. Почти как в Clubhouse, но без перебивающих друг друга людей и с чуть более сложным для восприятия интерфейсом. Последний еще и включает аудиоистории, которые исчезают через сутки после публикации, плюс — аудиоэффекты для изменения звучания голоса.</p>
 <p>Что-то среднее между Cappuccino и Audlist предлагает проект <a href="https://nibble.fm/"><strong>Nibble</strong></a> — его <a href="https://www.producthunt.com/posts/nibble-3">представили</a> на Product Hunt в конце 2020-го. Здесь тоже есть <a href="https://www.instagram.com/nibble.fm/">сториз</a>, их преподносят в виде&nbsp;микроподкастов с практически полностью статичной обложкой и примитивной анимацией субтитров. Походит на урезанную версию TikTok или мотивирующих видео из Instagram [только без видео] и, откровенно говоря, пока смотрится скучно. Но Nibble только-только&nbsp;запустили, поэтому его основателям стоит дать время, чтобы освоиться в этой нише и предложить что-то поинтереснее.</p>
 <p>Аналогичная задача стоит и перед разработчиками <a href="http://hearmeoutapp.com/landingpage/join.aspx"><strong>HearMeOut</strong></a> и <a href="https://riffr.com/"><strong>Riffr</strong></a> — оба проекта базируются на компактном аудиоконтенте, тут и там можно найти аудиофильтры. Однако интерфейс как первого, так и второго приложения немного избыточен с точки зрения элементов для управления лайками и репостами. На их фоне могла бы выделиться аудиосоцсеть <a href="http://www.llisten.me/"><strong>Listen</strong></a>, хотя ее, кажется, упростили до предела и фактически повторили «голосовухи», которые и так есть в любом мессенджере. При этом разработчики не торопятся уделять внимание пожеланиям пользователей — в Google Play приложению поставили большое количество низких оценок.</p>
 <h2>Большая стройка</h2>
 <p>Как показывает практика, из массы однотипных приложений всегда выстреливает парочка наиболее удачных вроде Clubhouse. Сможет ли составить ему компанию собственный <a href="https://play.google.com/store/apps/details?id=com.relylabs.InstaHelo">клон</a> на Android-платформе или какой-либо из перечисленных выше аналогов, покажет время. Но одно ясно точно — крупные соцсети уже во всю готовят обновления с похожими возможностями [<a href="https://www.apple.com/newsroom/2021/01/time-to-walk-an-inspiring-audio-walking-experience-comes-to-apple-fitness-plus/">экспериментирует</a> в этой области и Apple] и смогут предоставить их своей аудитории гораздо раньше, чем крошечные стартапы привлекут хотя бы миллион пользователей.</p>
 <p>Другое дело, так ли короткий аудиоконтент необходим тем, кто уже <strong>не</strong> пользуется аналогом TikTok-роликов в Instagram, Snapchat-историями в Facebook и другим функционалом, накрученным поверх классических соцсетей с текстом, изображениями и видео.</p>
 <hr>
 <p><strong>Дополнительное чтение:</strong></p>
 <ul>
  <li><p><a href="https://www.audiomania.ru/content/art-8013.html">Стриминговым сервисам нужны новые подходы к работе с музыкой, но пока — все сложно</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-8021.html">«От экрана к звуку»: аудиосоцсети рвутся к глобальной аудитории, но получается так себе</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-7993.html">«Лайвстрим в рамках закона»: как и зачем соцсети ограничивают использование музыки</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-8006.html">Крупнейший видеохостинг мира отбивается от критики — как продвигается этот процесс</a></p></li>
  <li><p><a href="https://www.audiomania.ru/content/art-8001.html">Нельзя так просто взять и перейти на стриминг, но телевизионщики пытаются это сделать</a> </p></li>
 </ul>
 <p><strong>P.S.</strong> <a href="https://habr.com/ru/company/audiomania/blog/546390/">Делимся обзорами трех пар</a> примечательных и очень доступных систем полочного типа.</p>
 <hr>
</div>', '2021-03-14 21:52:00', 'Аудиосоцсети наступают, но пока малым числом', 43, null, 8),
        (58, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/fo/ee/zm/foeezm69xgewe7hjjslhtv-foq4.jpeg">
 <br> 
 <br> 3 марта 2021 года вьетнамская студия Bliss Interactive выпустила расширение для браузера Chrome под названием <a href="https://chrome.google.com/webstore/detail/crispy-subtitles-from-lay/kokpckgbhcmeobdddflajfcpmmfhkekn?hl=en" rel="nofollow noopener noreferrer">Crispy Subtitles</a> («Хрустящие субтитры»). Этот плагин включает субтитры на YouTubе именно в тот момент, когда пользователь начинаете есть чипсы или что-то хрустящее. Теперь, в большинстве случае, не нужно тянуться жирными руками к кнопкам перемотки и регулировки громкости на ноутбуке или ПК во время просмотра роликов.
 <br> <a name="habracut"></a>
 <br> Разработчики <a href="https://gizmodo.com/ai-powered-chrome-extension-automatically-turns-on-yout-1846414652" rel="nofollow noopener noreferrer">пояснили</a>, что модель машинного обучения, применяемая в их расширении, была обучена на записях 178 часов жевания пользователями различных чипсов и прочих снэков. 
 <br> 
 <br> Плагин не рекомендуется устанавливать пользователям, которые уделяют приоритетное внимание своей конфиденциальности. Расширение требует доступа к микрофону, уровень его чувствительности должен быть отрегулирован при необходимости. Если пользователь жует чипсы с закрытым ртом или тихо, то расширение может не включать субтитры.
 <br> 
 <br> Хотя спонсором плагина была Lay’s, технически расширение совместимо со всеми видами чипсов, например, Pringles. Разработчики не пояснили, будут ли они дорабатывать плагин, например, научат ли его реагировать на звуки открывающейся банки пива или отрыжки, которые тоже могут заглушать звук видеоролика. 
 <br> 
 <br> Издание Bleeping Computer <a href="https://www.bleepingcomputer.com/news/technology/chrome-extension-turns-on-youtube-captions-when-eating-noisy-chips/" rel="nofollow noopener noreferrer">провело</a> несколько тестов по реакции расширения на другие группы продуктов, например, арахис, морковь и хлопья из злаков. Оказалось, что только звук поедания хлопьев вызывал субтитры, на остальное плагин не реагировал. 
 <br> 
 <br> 
 <div class="oembed">
  <iframe allowfullscreen id="6043506fc373282e340f4804" src="https://embedd.srv.habr.com/iframe/6043506fc373282e340f4804"></iframe>
 </div><i>Видео с описанием плагина, внутри очень громкие звуки жевания, осторожно. </i>
</div>', '2021-03-06 13:10:00', 'Расширение для Chrome включает субтитры на YouTubе, когда пользователь громко ест чипсы', 33, null, 8),
        (59, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e3a/1c2/24c/e3a1c224ceb694e698bc126f9a016c3c.jpg" width="770" height="440">
  <figcaption></figcaption>
 </figure>
 <p>Прошло 4 месяца с написания <a href="https://habr.com/ru/post/517916/" rel="noopener noreferrer nofollow">предыдущей статьи</a>, за это время произошло довольно много нового как по технической части, так и по позиционированию девайса.</p>
 <p>Напомню какие требования к девайсу я поставил, когда начинал разработку:</p>
 <ul>
  <li><p>Устройство должно имитировать гитару с 6-ю струнами и 12-ю ладами на грифе</p></li>
  <li><p>Должно быть компактным, в идеале складным, чтобы можно было брать его с собой куда угодно</p></li>
  <li><p>Должно подключаться ко всем популярным осям — Android, IOS, Windows, Linux, MacOS и определяться там как MIDI устройство без каких-либо драйверов</p></li>
  <li><p>Работа от аккумулятора</p></li>
  <li><p>Подключение должно производиться без проводов по Bluetooth Low Energy (но раз уж там будет USB разъем для зарядки, то и по проводу пусть тоже подключается)</p></li>
  <li><p>Возможность сразу начать играть, без необходимости в долгих тренировках по адаптации кистевых связок</p></li>
  <li><p>На каждой струне и каждом элементе грифа должно быть по светодиоду, чтобы можно было запустить табулатуру мелодии, и гитара сама показывала куда нужно прикладывать руки</p></li>
  <li><p>Возможность использования основных техник игры на гитаре: hummer on, pull off, slide, vibrato</p></li>
  <li><p>Задержка передачи midi команд не более 10мс</p></li>
  <li><p>Все должно собираться из подручных материалов без сложных техпроцессов и дорогой электроники</p></li>
 </ul>
 <p>Реализовать мне все это удалось, и даже больше. Был дополнительно интегрирован акселерометр для управления параметрами фильтрации звука наклоном гитары и вибромотор (правда, я до сих пор не придумал зачем). </p>
 <p>На момент написания предыдущей статьи выглядело оно так:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/708/511/71e/70851171ed4c1b525f88963ef9ae0890.jpeg" width="1200" height="686">
  <figcaption></figcaption>
 </figure>
 <p>Было принято решение пытаться делать стартап и выходить на кикстартер.</p>
 <h2>Итак, что было дальше?</h2>
 <p>Следующим шагом стал стандартный этап поиска pre-seed раунда инвестирования. Деньги нужны были на доработку и изготовление нового прототипа, проведения пиар кампании и оплату юридических манипуляций (для участия на кикстартере необходимо юр. лицо в США со всеми вытекающими организационными тратами). Эту задачу нам с моим партнером, отвечающим за бизнес процессы, удалось решить за 2 месяца. </p>
 <h2>Позиционирование</h2>
 <p>Для подтверждения полезности продукта и его функционала мы решили провести встречи со всеми Питерскими и Московскими музыкантами, с которыми смогли связаться, и заодно поснимать видеороликов для соц сетей. </p>
 <p>Профессиональные гитаристы отнеслись к девайсу ожидаемо скептически. И я их полностью понимаю, это не замена настоящей полноценной гитаре. Это девайс для применений, в которых важны портативность, универсальность, простота, возможность играть в наушниках и т.д. Сидишь, например, в самолете, вокруг шум, суета, плачущие дети, кислородные маски выпадают. Спать невозможно. И тут внезапно наступает вдохновение, достаешь девайс, надеваешь наушники и записываешь новый трек.</p>
 <p>Широкой публикой гитара была оценена очень позитивно не смотря на пока что ограниченный функционал и большие конструктивные неудобства. Девайс оказался настолько интересным, что даже популярный в рунете блогер Ваганыч снял на него обзор.</p>
 <p>По результатам общения мы открыли для себя новую целевую аудиторию - саунд дизайнеры, мьюзик мейкеры - люди, которые пишут цифровую музыку. Оказалось, у них есть большие сложности с записью гитарных и других струнных партий на миди клавиатурах.&nbsp; Это очень сложно, долго, муторно настолько, что зачастую им приходится отказываться от струнных инструментов, органичивая свое творчество. Наш девайс они восприняли с максимальным энтузиазмом, пророча ему большую популярность.</p>
 <h2>Конкуренты</h2>
 <p>Есть на этом рынке и конкуренты. Мы купили по экземпляру каждого для оценки.</p>
 <p><strong>1. Artiphon</strong> - панель, чувствительная к нажатию, по форме напоминает гитару, но позиционируется скорее как настольная клавиатура.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b51/09e/36a/b5109e36ab3a82358fb83a78687eeafa.JPG" width="500" height="160">
  <figcaption></figcaption>
 </figure>
 <p>Интересная, но дорогая штука. В целом, работает неплохо, можно извлекать разнообразные звуки. Имеет встроенные динамики, но лучше их не включать. Подключается только по USB.</p>
 <p><strong>2. Jammy</strong> - гитарный форм-фактор, состоит из разъединяющихся элементов с реальными струнами. Датчики независимо отслеживают удары по струнам на деке и прикосновение струны к ладу на грифе. Знакомым гитаристам не удалось сыграть на ней что-то внятное - ноты то не извлекались, то извлекались по нескольку раз. Возможно, требуется длительное привыкание. На реальных роликах в интернете также не удалось найти полноценной гитарной игры, в основном это игра медленным перебором по отдельным струнам.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/6a6/d9b/5f4/6a6d9b5f4943f3e638fade23a462bc87.JPG" width="500" height="245">
  <figcaption></figcaption>
 </figure>
 <p><strong>3. Jamtik</strong> - игрушка с 7-ю ладами на батарейках. Сыграть на ней не удалось даже «В траве сидел кузнечик».</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2cc/9fd/85e/2cc9fd85e33f534ceae843340dc1e7a0.JPG" width="500" height="189">
  <figcaption></figcaption>
 </figure>
 <p>Анализ конкурентов добавил нам оптимизма. Ни один из этих девайсов не позволяет играть реальные быстрые гитарные партии, не имеет обучающей подсветки.</p>
 <h2>Теперь самое интересное – новый прототип</h2>
 <p>На основе испытаний старого прототипа, конкурентов и личных предпочтений, я решил расширить функционал девайса и добавить несколько пунктов к требованиям:</p>
 <ul>
  <li><p>Конечно, RGB подсветка </p></li>
  <li><p>Подвижные струны на деке с детектированием как касания, так и величины отклонения при извлечении ноты. Это позволит избавиться от проблемы задевания пальцами соседних струн и расширит возможности игры за счет поддержки velocity (разные параметры нарастания звука и громкости ноты) и глушения струн прикосновениями как в настоящей гитаре</p></li>
  <li><p>Детектирование силы нажатия на сенсоры грифа для реализации стандартных гитарных техник игры</p></li>
  <li><p>Встроенный синтезатор со встроенной библиотекой инструментов и разъем Jack 3.5мм для подключения наушников или внешних колонок. Встроенные динамики делать не стал – добиться хорошего звучания было бы слишком сложно и дорого</p></li>
  <li><p>Мобильное приложение со встроенным качественным синтезатором и функционалом обучения </p></li>
  <li><p>Пады с подсветкой для записи лупов</p></li>
  <li><p>Упоры на деке и удобного удержания сидя и стоя, крепления для ремешка</p></li>
 </ul>
 <h2>Корпус</h2>
 <p>Корпус получил множество изменений, особенно в узлах со струнами на деке и в механизме складывания. Сенсоры на грифе теперь покрыты матовыми рассеивателями и светятся всей поверхностью.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/049/843/dae/049843dae6fbd3a947913d50ad5aa881.png" width="1338" height="638">
  <figcaption></figcaption>
 </figure>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/aa1/08f/902/aa108f902aef9ae3ac8de4049ee94368.jpg" width="1060" height="416">
  <figcaption></figcaption>
 </figure>
 <p>Основная задача - сделать девайс таким, чтобы был применим мануальный опыт игры на настоящей гитаре. Были проработаны расстояния между ладами, механика струн, геометрия деки и развесовка. Пока что это только рендеры корпуса, но изготовление прототипов уже идет полным ходом. </p>
 <h2>Электроника</h2>
 <p>Электронику пришлось разделить на 4 платы:</p>
 <ul>
  <li><p><strong>Гриф</strong></p></li>
 </ul>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/1d4/470/75d/1d447075d2d62aef0dc91e897531a2f7.png" width="500" height="161">
  <figcaption></figcaption>
 </figure>
 <p>Адресные RGB светодиоды подключены последовательно к одной ноге STM-ки. Пришлось повозиться с двойной буферизацией и выводом данных через DMA 100 раз в секунду. Зато, теперь оно работает очень быстро и можно запускать цветные визуальные анимации на поверхности грифа.</p>
 <ul>
  <li><p><strong>Плата с падами и подпружиненными контактами для соединения с грифом в разложенном состоянии гитары</strong></p></li>
 </ul>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/71d/fce/a7e/71dfcea7e7f316c3e7e5c9102cc6f1e5.png" width="200" height="160">
  <figcaption></figcaption>
 </figure>
 <ul>
  <li><p><strong>Основная плата со струнами, мозгами, силовой частью, радио частью, синтезатором и датчиками </strong></p></li>
 </ul>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/556/ffe/755/556ffe755cbd13c08700676d963dbca0.png" width="500" height="223">
  <figcaption></figcaption>
 </figure>
 <p>Здесь происходит детектирование как прикосновения к струнам, так и величины их отклонения. Это решает проблему со случайными задеваниями соседней струны при игре и дает возможность глушить струны как на настоящей гитаре.</p>
 <ul>
  <li><p><strong>Плата с разъемами USB type-C, Jack 3.5мм и тремя индикаторными светодиодами</strong></p></li>
 </ul>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/290/3cf/c21/2903cfc21cf75179a7943ba60ff5ba8e.png" width="200" height="154">
  <figcaption></figcaption>
 </figure>
 <h2>Мобильное приложение</h2>
 <p>После выкладывания предыдущей статьи, мне написал мобильный разработчик <a href="https://habr.com/ru/users/IFITOWS/" rel="noopener noreferrer nofollow">Юрий Дубовой</a> с предложением помочь в разработке приложения под iOS. </p>
 <p>Мы сформировали протокол общения гитары с приложением и разбили его на несколько интерфейсов:</p>
 <ul>
  <li><p>Midi команды, разумеется, по умолчанию передаются по стандартному BLE-Midi интерфейсу. Таким образом, к приложению при желании можно будет подключить и другие midi устройства, например, клавиатуру</p></li>
  <li><p>Опционально поддерживается прием midi команд и по проводному USB-Midi интерфейсу. Это будет полезно для старых телефонов без поддержки BLE, а также в случае необходимости сокращения задержки до минимума (порядка 5мс)</p></li>
  <li><p>Отдельный кастомный BLE сервис для передачи уникальных команд, связанных с управлением светодиодами, режимами работы девайса, синхронизацией состояния и т.д.</p></li>
  <li><p>Стандартный BLE battery service для передачи уровня заряда аккумулятора. Он поддерживается на уровне операционной системы и, в случае в виндой, даже отображается соответствующая иконка в панели устройств</p></li>
 </ul>
 <p>Приложение разбито на несколько экранов, соответствующих разным режимам работы: </p>
 <h4>Свободная игра</h4>
 <p>В этом режиме пользователь выбирает один из инструментов (акустика, электрогитара, пианино, укулеле, барабаны, и т.д.) и просто играет как ему хочется. Есть возможность загружать свои инструменты в виде саундфонтов в формате «.sf2».</p>
 <h4>Игра по табулатурам</h4>
 <p>В этом режиме нужно выбрать мелодию из списка табулатур и запустить интерактивное воспроизведение, при котором гитара светодиодами подсвечивается нужный аккорд и приложение ждет, пока юзер его не сыграет, и зажигает следующий. При этом происходит оценка правильности и скорости игры.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/4d6/3cd/612/4d63cd6121b2ce9bca90108fcf9825df.png" width="500" height="231">
  <figcaption></figcaption>
 </figure>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/59a/c45/919/59ac45919bbfec0a49d0b4cf8f1d889b.png" width="500" height="231">
  <figcaption></figcaption>
 </figure>
 <h4>Обучение</h4>
 <p>Пока у нас нет даже прототипа этого режима, но предполагается интерактивное обучение нотной грамоте и гитарным основам в игровой форме с использованием светодиодов на девайсе.</p>
 <p>Есть и другие интересные режимы, о которых я расскажу в следующей статье. Впереди еще очень много работы.</p>
 <p>Теперь играть на ней можно тремя разными способами:</p>
 <ol>
  <li><p>Подключение через BLE MIDI протокол к телефону или компу, где девайс распознается как миди устройство, и игра через внешние виртуальные синтезаторы (Ableton, FL studio, Garage Band и т.д. или наше приложение)</p></li>
  <li><p>То же самое, но с подключением через USB MIDI (работает со всеми хостами, которые я проверял – Android, IOS, Windows, MacOS, Debian)</p></li>
  <li><p>Игра внутренним синтезатором, с подключением наушников или внешней колонки напрямую в гитару. В этом случае звук будет не самым Hi-Fi, но вполне приемлемым для игры для себя</p></li>
 </ol>
 <p>Интересно, что можно играть всеми тремя способами одновременно, может кому-то пригодится.</p>
 <h2>Завершение</h2>
 <p>После завершения изготовления корпуса и тестирования нового прототипа я планирую написать следующую статью, в которой будет больше технических подробностей. Если среди читателей Хабра есть люди, желающие поучаствовать в создании контента, поделиться предложениями или помочь с продвижением – пожалуйста, пишите мне. А также будем рады помощи с изготовлением корпуса и разработкой мобильного приложения.</p>
 <p>Кому интересно следить за новостями проекта или оформить предзаказ – оставляйте почту в форме на <a href="http://playsensy.com/ru/?utm_source=habr&amp;utm_medium=article2&amp;utm_campaign=email&amp;utm_term=kickstarter" rel="noopener noreferrer nofollow">сайте Sensy </a>и подписывайтесь на соцсети.</p>
 <p>Спасибо за внимание! Буду рад обратной связи в комментариях.</p><iframe id="60424eb4aa2e6ed27439fa0c" src="https://embedd.srv.habr.com/iframe/60424eb4aa2e6ed27439fa0c" class="embed_video embed__content" allowfullscreen="true"></iframe>
</div>', '2021-03-08 14:21:00', 'Как я делаю цифровую минигитару. Часть 2', 48, null, 8),
        (60, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/cc/jt/sp/ccjtspt34vf5gsytqbee30p7on4.png">
 </div><i><a href="https://cdn.arstechnica.net/wp-content/uploads/2020/07/starlink-dish-800x337.jpg">Источник</a></i>
 <br> 
 <br> SpaceX построит новый завод в Остине. На заводе будут <a href="https://arstechnica.com/information-technology/2021/03/spacex-plans-texas-factory-to-help-make-starlink-dishes-and-wi-fi-routers/">производить</a> системы для изготовления спутниковых антенн, маршрутизаторы Wi-Fi, монтажное и другое оборудование. Все это необходимо для ускорения развертывания спутниковой сети Starlink.
 <br> 
 <br> Новое производство в техасском Остине поможет не отставать от спроса на услугу глобального интернета. Предполагается, что строительство фабрики ускорит развертывание широкополосной спутниковой сети Starlink. 
 <br> <a name="habracut"></a>
 <br> О строительстве нового завода стало известно не из новостей, а из объявления о <a href="https://boards.greenhouse.io/spacex/jobs/5111363002?gh_jid=5111363002">вакансии</a> на должность инженера по автоматизации и контролю. В объявлении говорится о том, что инженер будет играть ключевую роль. Цель завода — «производить миллионы устройств, ориентированных на потребителя».
 <br> 
 <br> Фабрика не будет изготавливать спутниковые тарелки Dishy McFlatface и маршрутизаторы. Исходя из текста вакансии, очевидно, что завод будет проектировать системы управления и ПО для для оборудования, находящегося на производственных линиях. В приоритете будущего предприятия — решение задач крупносерийного производства. А также преодоление сложных механических, программных и электрических проблем, чтобы достичь в итоге гибкости, надежности, ремонтопригодности будущих систем систем и оборудования.
 <br> 
 <br> <font color="#EB4247"><h2>Чем придется заниматься инженеру SpaceX?</h2></font>
 <br> Специалист на этой должности станет проектировать, разрабатывать и управлять проектами автоматизации на разных этапах производственного процесса. Кроме того, он будет:
 <br> 
 <br> 
 <ul> 
  <li>Разрабатывать концепцию оборудования, согласовывать технические характеристики продукта.</li> 
  <li>Внедрять надежные системы безопасности для защиты роботов, порталов, конвейеров.</li> 
  <li>Создавать простые экраны HMI для сложного оборудования.</li> 
  <li>Разрабатывать электрические системы управления в соответствие с NEC70, NFPA79 и UL508A.</li> 
  <li>И еще интересное. Инженеру нужно будет уложиться в срок, проследить за графиком выполнения работ и бюджетом. Потому что к концу года заводом планирует поставлять продукцию в 25+ стран.</li> 
 </ul>
 <br> <font color="#EB4247"> <h2>Что внутри спутниковой антенны?</h2> </font>
 <br> Американский инженер Кен Кейтер получил в пользование терминал от SpaceX. И вместо бета-тестирования возможностей решил заглянуть «под капот». 
 <br> 
 <br> За задней панелью Dishy McFlatface инженер обнаружил моторный узел. Изменяя положение антенны, сервопривод позволяет оптимизировать получение сигнала от спутников SpaceX. 
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/fj/uz/fh/fjuzfhrfglmnzllzlvgsyi-lihq.png">
 </div> <i><a href="https://cdn.arstechnica.net/wp-content/uploads/2020/12/starlink-4-internal-ethernet-cable-980x569.jpg">Кабель Ethernet, который подключен внутри антенны</a></i>
 <br> 
 <br> Также Кена впечатлил кабель Ethernet. В антенне установлен мощный экранированный кабель, обеспечивающий не только передачу данных, но и подводящий 30 Вт электричества. При необходимости лимит можно поднять до 100 Вт без риска перегрева. Обычный Ethernet-кабель для этих целей точно не подойдет.
 <br> 
 <br> Внутри инженер также обнаружил плату Dishy''s PCB в большом диске под металлическим экраном. Плата представляет собой «мозги» спутниковой антенны.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/c3/qf/ga/c3qfgasy5c0jq8yau3euumtrcpy.png">
 </div> <i><a href="https://cdn.arstechnica.net/wp-content/uploads/2020/12/starlink-25-back-of-phased-array-pcb-980x563.jpg">Печатная плата Dishy после отделения от металлического экрана</a></i>
 <br> 
 <br> В целом, складывается впечатление, что антенна больше <a href="https://hackaday.com/2020/11/25/literally-tearing-apart-a-spacex-starlink-antenna/">похожа</a> на автономный компьютер. Она укомплектована процессором ARM и имеет оперативную память для запуска необходимого ПО.
 <br> 
 <br> <font color="#EB4247"><h2>Подробнее о тестировании сети Starlink</h2></font>
 <br> Starlink обслуживает &gt;1000 клиентов. Сеть находится в стадии бета-тестирования. В текущий момент Starlink ожидает от Федеральной комиссии по связи (FCC) разрешения на развертывание до 5 млн пользовательских терминалов. 
 <br> 
 <br> Спутниковая тарелка Dishy McFlatface может принимать сигналы от спутников SpaceX на низкой околоземной орбите. 
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/wa/cf/ew/wacfewqw0vunxhatdzssxbxwzui.png">
 </div> <i><a href="https://cdn.arstechnica.net/wp-content/uploads/2020/11/starlink-forest-1-980x735.jpeg">Снимки пользовательского терминала Starlink</a></i>
 <br> 
 <br> От первых бета-тестеров антенны уже идет обратная связь. Антенну хвалят за низкие задержки в удаленных районах и обещанную высокую скорость. Один из тестеров <a href="https://arstechnica.com/information-technology/2020/11/spacex-starlink-beta-tester-takes-user-terminal-into-forest-gets-120mbps/">запустил</a> антенну в национальном лесу в Айдахо. Там он подключился к Интернету со скоростью 120 МБит/с. Еще один пользователь <a href="https://www.fs.usda.gov/detail/ipnf/about-forest/offices/?cid=stelprdb5090477">тестировал</a> антенну на стрельбище в Национальном лесу Кер-д’Ален (также в Айдахо). С помощью оборудования ему удалось выйти в сеть, выложить пост на Reddit и загрузить несколько изображений.
 <br> 
 <br> Стоимость бета-версии Starlink составляет $99 в месяц. Залог за пользовательский терминал, монтажный штатив и маршрутизатор составляет $499.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ag/lh/c3/aglhc3deahrqnogf5tauwssc6ra.png">
 </div>
 <br> Общедоступными заказы на услуги спутникового интернета <a href="https://arstechnica.com/information-technology/2021/02/spacex-starlink-now-taking-pre-orders-for-service-in-mid-to-late-2021/">обещают сделать</a> во второй половине 2021 года. В начале февраля компания открыла <a href="https://www.starlink.com/">предзаказы</a> с ограниченным количеством слотов. Заказы будут выполняться в порядке очереди, их количество будет разным в зависимости от региона и конкретного местоположения.
 <br> 
 <br> Ограничение количества клиентов связано с желанием SpaceX гарантировать каждому клиенту получить заказ и услугу. Предположительно, сервис <a href="https://arstechnica.com/information-technology/2021/02/spacex-starlink-now-taking-pre-orders-for-service-in-mid-to-late-2021/">станет</a> более быстрым и доступным для клиентов, отправивших предварительные заказы.
 <br> 
 <br> <a href="https://slc.tl/AkG8g"> 
  <div style="text-align:center;">
   <img src="https://habrastorage.org/webt/1h/dq/mj/1hdqmj1bvguax5hnugdz0ci_jbw.jpeg">
  </div></a>
</div>', '2021-03-10 10:14:00', 'SpaceX построит в Техасе завод для ускорения производства спутниковых антенн Starlink', 61, null, 6),
        (61, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Многим прочитавшим заголовок, покажется странным сочетание имени крупного сетевого гипермаркета и девиза не уступающего ему в популярности торрент-трекера. Тем не менее, она есть. Интересующихся прошу под кат…
 <br> 
 <br> <a href="https://habr.com/ru/post/546600/"><img src="https://habrastorage.org/webt/au/yc/kt/auycktbba9ry5wj90hadsxv30zw.png"></a><a name="habracut"></a>
 <br> 
 <blockquote>
  <i>Вы тоже обращали внимание,<br> что у пирата нет глаза со стороны того плеча,<br> на котором</i><em> сидит попугай?<br> ©<a href="http://www.anekdot.ru" rel="nofollow noopener noreferrer">www.anekdot.ru</a></em>
 </blockquote>
 <br> 
 <p>Для тех кто не любит много букв, кратко: на официальном <a href="https://seller-edu.ozon.ru" rel="nofollow noopener noreferrer">сайте поддержки ОЗОН</a>&nbsp;в течении примерно полугода находилась&nbsp;обработка для бесплатной загрузки, добуквенно (от 95 до 99%) совпадающая с моей платной обработкой размещенной на Инфостарт и более нигде&nbsp;(никаких ссылок, чтобы это не было рекламой).<br> <br> Когда это обнаружилось, я как человек любознательный задал вопрос в отдел корпоративной поддержки, на который не получил ответа по сей день.<br> <br> <a href="https://youtu.be/EYIAUjaiekA" rel="nofollow noopener noreferrer">Подробнее можно посмотреть на видео</a><br> <br> </p>
 <blockquote>
  <p><em> — Почему&nbsp;Красная&nbsp;площадь&nbsp;именно Красной называется?<br> — Видите ли, это очень древняя история. Когда в 1147 году<br> первые жители тогда еще маленького…<br> — А покороче нельзя?<br> — Именно&nbsp;поэтому&nbsp;она и называется Красной!<br> ©<a href="http://www.anekdot.ru" rel="nofollow noopener noreferrer">www.anekdot.ru</a></em></p>
 </blockquote>
 <br> 
 <p>Кому интересны подробности, они есть у меня.&nbsp; Продолжим...</p>
 <br> 
 <br> 
 <p>2020 год принес столько катаклизмов и событий, что произошедшее скажем в 2019, это уже как времена Пушкина.<br> <br> Помню в начале 2019 ИТ сообщество и не только оно, с интересом следило (и не только следило) за тем как одна не маленькая интернет компания пытается "отжать" продукт у своего бывшего сисадмина. Как оказалось, вопрос можно решить вообще по другому. Просто и элегантно. Да просто взять и все, раз вещь хорошая. Загадочным образом моя платная разработка из публикации в которой не так давно красовался баннер "Я/мы Nginx", перекочевала на сайт технической поддержки ОЗОН, в раздел бесплатные загрузки.<br> <br> <a href="https://habrastorage.org/webt/21/tn/g7/21tng7vipkfkk-rvf7-mxvudt1a.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/21/tn/g7/21tng7vipkfkk-rvf7-mxvudt1a.png"></a><br> <br> <a href="https://habrastorage.org/webt/ox/c8/uk/oxc8ukerp1nkhhew4krqdi7fey8.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/ox/c8/uk/oxc8ukerp1nkhhew4krqdi7fey8.png"></a><br> <br> </p>
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Для тех, кто далек от темы 1С, что такое обработка.</b> 
  <div class="spoiler_text">
   В самом далеком приближении это достаточно сложный скрипт с GUI интерфесом, плагин к чему то большему.
   <br> Например java-скрипт загрузки курсов валют центробанка — это маленькая обработка в терминах 1С.
   <br> 
  </div> 
 </div>
 <br> Да ладно, напишете вы. Сам в недоумении, отвечу я вам.
 <br> 
 <br> В этом месте горячие головы конечно скажут: все ясно, расходимся, ОЗОН выходил на IPO, надо было срочно показать заботу о поставщиках, вот тихонько и подтырили, что плохо лежит.
 <br> 
 <br> Эту мысль я с негодованием отметаю. Не мог же портал продающий в том числе книги, аудио- видео продукцию не знать об авторском праве.
 <br> 
 <br> Что еще можно предположить?
 <br> 
 <br> На всякий случай проверил свои записи, нет, обработка никогда не была бесплатной.
 <br> 
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Лирическое отступление:</b> 
  <div class="spoiler_text">
   <p><em>А почему собственно, спросите вы. Причин несколько.<br> <br> Во первых, я в силу возраста застал строительство коммунизма и в курсе, что он не построен. То есть пока действует принцип — каждый труд должен быть вознагражден. Если присмотреться к проектам СПО, на которые вы будете сейчас пенять, за каждым из них стоит добрый спонсор, если проект достойный. Отсюда плавно переходим к достойности. Небольшой экономический расчет. Средний чек поставщика ОЗОН это 1 млн. руб, штраф за некорректно/не вовремя предоставленные документы 10% от суммы. Набить его вручную у бухгалтера занимает около часа, а загрузить обработкой 5 минут. А обработка как раз и стоит пару часов работы хорошего бухгалтера. А уж сумму в эквиваленте равную бутылке хорошего коньяка, он из руководства выбивает за те же 5 минут. Что и произошло. Данная обработка надежно попала в тройку самых загружаемых.<br> <br> Теперь закроем тему с пет-проектами так модную ныне и то что многие считают, что их можно делать в рабочее время.<br> <br> Не ошибусь если предположу, что когда в новогодний корпоратив программист 1С топчет клавиши, это не пет-проект, а закрытие года, которым он и будет развлекаться в новогоднюю неделю.&nbsp;<br> <br> Все 1С овские пет-проекты пишутся на выходных и долгими зимними ночами. Вот и сейчас, простите за неровный почерк…<br> <br> &nbsp;</em></p>
  </div> 
 </div>
 <br> Перелистал трудовую книжку, тоже нет, в компании ОЗОН я не числился.
 <br> 
 <br> Поэтому самое правдоподобное предположение у меня следующее:
 <br> 
 <br> ИТ отделу ОЗОН удалось создать искусственный интеллект программиста, робота Феофана (к примеру, чтобы не путать с космическим роботом Федором <em>©Роскосмос)</em>. Пока конечно без ООП, но 1С все же язык программирования как никак.
 <br> 
 <br> Это безусловно выдающееся достижение о котором, я надеюсь, представители ОЗОН скоро заявят миру.
 <br> 
 <br> Пруфы? опять спросите вы.
 <br> 
 <br> А вот и они. Смотрите. Как мы видим в саппорте ОЗОН обработка подозрительно напоминает мою.
 <br> 
 <br> Да что там напоминает.
 <br> 
 <br> Вначале видимо дела шли не очень, в шаблоне сообщения поменялись только две строки и появилось подчеркивание в идентификаторе Номер_заказа. Подчеркивание — это олдскул, хороший стиль именования переменных лет 15-20 назад.
 <br> 
 <br> 
 <p><a href="https://habrastorage.org/webt/py/em/nt/pyemntgpj1vfep38erzfz4bpkn0.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/py/em/nt/pyemntgpj1vfep38erzfz4bpkn0.png"></a><br> <br> <a href="https://habrastorage.org/webt/fp/az/1v/fpaz1vgjcnyxubu6mtiqstkbwk0.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/fp/az/1v/fpaz1vgjcnyxubu6mtiqstkbwk0.png"></a></p>
 <br> 
 <br> 
 <p>но дальше пошло&nbsp;лучше.&nbsp;<br> <br> Искусственный интеллект программиста ОЗОН начал&nbsp;осознавать свою принадлежность к корпорации.</p>
 <br> 
 <p><em>Тут я сделаю техническое отступление.&nbsp;<br> <br> Мой стиль программирования начинается с процессоров КР580ВМ80А, Хоровиц Хилл, искусство схемотехники, венгерская нотация знаете ли, префикс типа переменной, префикс места исполнения для процедур и функций. Это не совсем то что рекомендуют стандарты программирования 1С.&nbsp;Не ошибусь, если скажу, что второго такого 1С программиста еще поискать. Зато это 100% гарантия, что мои доработки не пересекутся потом с официальными обновлениями.</em></p>
 <br> 
 <br> 
 <p>Так вот робот Феофан, кодирует точно в таком же стиле, но префикс он уже добавляет ozon_ вместо фс, что означало функция выполняется на стороне сервера. Тут все понятно -функция на стороне ОЗОН<br> <br> <a href="https://habrastorage.org/webt/wz/ih/k0/wzihk0jlq-olpbodwce0lxop6jm.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/wz/ih/k0/wzihk0jlq-olpbodwce0lxop6jm.png"></a><br> <br> <a href="https://habrastorage.org/webt/w_/rq/yp/w_rqypen3ooemgsmg0lvigsm2as.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/w_/rq/yp/w_rqypen3ooemgsmg0lvigsm2as.png"></a></p>
 <br> 
 <br> 
 <p>Это безусловно еще одно выдающееся достижение, но это не апофеоз.<br> Что самое грандиозное?<br> <br> А то что роботу Феофану удалось повторить не только мой стиль программирования и код, но и GUID обработки.<br> <br> Не все это знают. А видимо в ОЗОН этого как раз не знают, но каждая внешняя обработка 1С при создании получает уникальный&nbsp;GUID. Это сделано конечно не для защиты прав, а для непересекающихся доработок.<br> <br> Так вот, шах и мат вам, верующие в уникальность гуидов! Они совпадают.<br> <br> Вот обработки, о которых идет речь в статье: <br> <br> <a href="https://habrastorage.org/webt/tu/or/dz/tuordzuizyxmmdzdcj1yf4iqr_q.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/tu/or/dz/tuordzuizyxmmdzdcj1yf4iqr_q.png"></a><br> <br> <a href="https://habrastorage.org/webt/kt/uh/8s/ktuh8s70opuybkp3mdvoizu7jdk.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/kt/uh/8s/ktuh8s70opuybkp3mdvoizu7jdk.png"></a><br> а вот просто созданная с нуля обработка:<br> <br> <a href="https://habrastorage.org/webt/_1/0l/-z/_10l-zswacvzbj1ynishxhv1lq4.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/_1/0l/-z/_10l-zswacvzbj1ynishxhv1lq4.png"></a><br> <br> Есть конечно еще небольшие шероховатости.<br> <br> К примеру, в моей обработке была для отладки оставлена функция получения данных документа ТОРГ12. Да просто добавлена 1 в наименование.<br> <br> И робот Феофан сделал то же самое.<br> <br> Я конечно через некоторое время код привел в продуктовый вид, а у ОЗОН он так и пошел в продакт.<br> <br> То есть пока есть отставание от оригинала.<br> <br> Как тут не вспомнить призыв качать только оригинальные обработки.<br> <br> Так же видимо не удалось пока освоить другие конфигурации 1С, кроме УТ 11.<br> <br> Но это видимо не за горами. Или за горами. Потому что в феврале 2021 произошло загадочное.<br> <br> Страница исчезла с сайта ОЗОН. По необъяснимой случайности это произошло на следующий день после моего письма в НП ППП.<br> <br> Надеюсь я не прервал столь смелых наработок в области победы разума над копирайтом.<br> И опять слышу из задних рядов — Ну и чего тебе еще надо хороняка, <s>бери княжну и женись</s>.</p>
 <br> 
 <br> 
 <p><em>Быстро&nbsp;поднятая с пола еда&nbsp;не считается&nbsp;упавшей<br> Народная мудрость</em></p>
 <br> 
 <br> 
 <p>Господа из ОЗОН, вы же не торрент-трекер, вы вполне себе официальное и даже юридическое лицо.<br> <br> Поэтому все скачавшие обработку с вашего сайта вполне себе без задней мысли и угрызений совести теперь улучшают ее и продают.<br> <br> Это надо понимать.<br> <br> <a href="https://habrastorage.org/webt/jq/vq/ut/jqvqutl37waujf4kvbnxczp7n2o.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/jq/vq/ut/jqvqutl37waujf4kvbnxczp7n2o.png"></a><br> <br> <a href="https://habrastorage.org/webt/ny/qu/r7/nyqur7siqik_llelp313yru_lio.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/ny/qu/r7/nyqur7siqik_llelp313yru_lio.png"></a>&nbsp;</p>
 <br> 
 <br> 
 <p><em>Дело в том, что время на небе и на земле летит не одинаково.<br> <br> Там — мгновения, тут — века Все относительно. Впрочем, это долго объяснять.<br> ©Тот самый Мюнхгаузен</em></p>
 <br> 
 <br> 
 <p>Два месяца назад служба корпоративной поддержки обещала решение вопроса в ближайшие несколько дней.<br> <br> <a href="https://habrastorage.org/webt/ij/3u/wb/ij3uwb_ofxpofijhouymuqpvfkq.png" rel="nofollow noopener noreferrer"><img src="https://habrastorage.org/webt/ij/3u/wb/ij3uwb_ofxpofijhouymuqpvfkq.png"></a><br> <br> Давайте, выходите из зимней спячки, приходите хотя бы в комментарии этой статьи и объясните свое видение проблемы.<br> <br> А те из читателей, кто хочет помочь мне докопаться до истины, или например узнать, стоит ли ожидать более прорывных достижений в области копирайта, может windows или что то из классики, будете делать заказ в ОЗОН, напишите им в комментариях хештег #ОЗОНсделаемплатноебесплатным, чтобы они вышли на эту статью.</p>
 <br> 
 <br> 
 <blockquote>
  <p><em>У меня в квартире вчера побывал вор.<br> Странно… ничего не взял, на столе оставил 10 долларов и записку:<br> "Так жить нельзя"<br> ©<a href="http://www.anekdot.ru" rel="nofollow noopener noreferrer">www.anekdot.ru</a></em></p>
 </blockquote>
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">Лирическое отступление:</b> 
  <div class="spoiler_text">
   <p><em>Кстати о торрент-трекерах. Некоторое количество лет назад, наблюдал интересную историю. В варезную ветку известной в узких кругах программы, стоимостью кстати тоже порядка бутылки&nbsp;хорошего коньяка, пришел ее автор и без истерик и криков просто рассказал экономическую раскладку своей жизни и как он уходит в ноль при выходе новых кряков. И знаете, его поняли и по крайней мере из паблика все исчезло и больше не появлялось. Просто из уважения к чужому труду.&nbsp;Это несколько изменило мои представления о хакерах.&nbsp; И в мире стало на двух человек которых я искренне уважаю больше. &nbsp;</em></p>
  </div> 
 </div>
 <br> 
 <p>Спасибо.</p>
 <br> 
 <br> 
 <p>Будьте здоровы и до новых встреч</p>
</div>', '2021-03-12 09:12:00', 'ОЗОН: сделаем платное бесплатным', 41, null, 5),
        (62, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <p>Сегодня вместо обсуждения геологических моделей мы посмотрим пример их программирования в среде Jupyter Notebook на языке Python 3 и с библиотеками Pandas, NumPy, SciPy, XArray, Dask Distributed, Numba, VTK, PyVista, Matplotlib. Это довольно простой ноутбук с поддержкой многопоточной работы и возможностью запуска локально и в кластере для обработки больших данных, отложенными вычислениями (ленивыми) и наглядной трехмерной визуализацией результатов. В самом деле, я постарался собрать разом целый набор сложных технических концепций и сделать их простыми. Для создания кластера на Amazon AWS смотрите скрипт <a href="https://github.com/mobigroup/gis-snippets/tree/master/aws" rel="nofollow noopener noreferrer">AWS Init script for Jupyter Python GIS processing</a>, предназначенный для единовременного создания набора инстансов и запуска планировщика ресурсов на главном инстансе.<br> <img src="https://habrastorage.org/webt/b7/kl/i3/b7kli3upvttxschzvvxjxsv-0km.png"><br> Визуализация с помощью Visualization Toolkit(VTK) и PyVista это уже далеко не Matplotlib</p><a name="habracut"></a>
 <br> 
 <p>Идея сделать такой пример возникла у меня давно, поскольку я регулярно занимаюсь разнообразными вычислительными задачами, в том числе для различных университетов и для геологоразведочной индустрии, и знаком очень близко с проблемами переносимости и поддерживаемости программ, а также проблемами работы с так называемыми большими данными (сотни гигабайт и терабайты) и визуализацией результатов. Так что само собой появилось желание сделать ноутбук-пример, в котором коротко и просто показать и красивую визуализацию и распараллеливание и ускорение кода Python и чтобы этот ноутбук можно было без изменений запустить как локально, так и на кластере. Все использованные библиотеки доступны уже много лет, но мало известны, или, как говорится, они остаются широко известными в узких кругах. Оставалось лишь найти подходящую задачку, на которой все это можно показать и это было, пожалуй, самым сложным — ведь мне хотелось, чтобы пример получился достаточно осмысленным и полезным. И вот такая задача нашлась — рассмотреть моделирование гравитационного поля на поверхности для заданной (синтетической в данном случае) модели плотности недр и некоторые последующие преобразования с вычислением фрактального индекса по компонентам пространственного спектра и кольцевого преобразования Радона, как его называют математики, или Хафа, согласно компьютерным наукам. Замечательно то, что с популярными библиотеками Python эти преобразования делаются буквально в несколько строчек кода, что особенно ценно для примера. Поскольку моделирование поля в каждой точке поверхности требует вычисления для всего трехмерного объема, мы будем обрабатывать гигантский объем данных. Для визуализации используем человеколюбивую обертку <a href="https://www.pyvista.org" rel="nofollow noopener noreferrer">PyVista</a> для библиотеки <a href="https://vtk.org" rel="nofollow noopener noreferrer">VTK — Visualization Toolkit</a>, потому что писать код для последней это путь истинных джедаев… кто хочет лично в том убедиться, смотрите мой модуль к ParaView <a href="https://github.com/mobigroup/ParaView-plugins" rel="nofollow noopener noreferrer">N-Cube ParaView plugin for 3D/4D GIS Data Visualization</a>, написанный как раз на Python + VTK.</p>
 <br> 
 <p>Теперь предлагаю проследовать <a href="https://github.com/mobigroup/gis-snippets/tree/master/Synthetic%20Model%20Inversion" rel="nofollow noopener noreferrer">по ссылке на страницу GitHub репозитория</a> или сразу открыть ноутбук <a href="https://github.com/mobigroup/gis-snippets/blob/master/Synthetic%20Model%20Inversion/basic.ipynb" rel="nofollow noopener noreferrer">basic.ipynb</a> Надеюсь, код достаточно просто читается, остановлюсь лишь на нескольких особенностях. Запускаемый в ноутбуке локальный кластер dask предназначен для работы на многоядерных компьютерах, а вот для работы в кластере потребуется настроить подключение к его планировщику. В упомянутом выше скрипте <a href="https://github.com/mobigroup/gis-snippets/tree/master/aws" rel="nofollow noopener noreferrer">AWS Init script for Jupyter Python GIS processing</a> есть соответствующие комментарии и ссылки. В коде мы используем векторизацию NumPy, то есть передаем сразу массивы, а не скаляры, при этом пользуемся тем, что XArray объекты предоставляют доступ к внутренним NumPy объектам (object.values). Код NumPy ускорить непросто, но с помощью Numba и для такого кода можно получить некоторый выигрыш в скорости исполнения (возможно, даже около 15%):</p>
 <br> 
 <pre><code class="python">from numba import jit
@jit(nopython=True, parallel=True)
def delta_grav_vertical(delta_mass, x, y, z):
    G=6.67408*1e-11
    return -np.sum((100.*1000)*G*delta_mass*z/np.power(x**2 + y**2 + z**2, 1.5))</code></pre>
 <br> 
 <p>Для перебора всех точек на поверхности куба и вычисления для каждой такой точки гравитационного воздействия от каждой точки куба (это, кстати, получается пятикратный интеграл) мы пишем:</p>
 <br> 
 <pre><code class="python">def forward_gravity(da):
    (da_y, da_x, da_z) = xr.broadcast(da.y, da.x, da.z)
    deltagrav = lambda x0, y0: delta_grav_vertical(da.values.ravel(), (da_x.values.ravel()-x0), (da_y.values.ravel()-y0), (da_z.values.ravel()-0))
    gravity = xr.apply_ufunc(deltagrav, da_x.isel(z=0).chunk(50), da_y.isel(z=0).chunk(50), vectorize=True, dask=''parallelized'')
    ...</code></pre>
 <br> 
 <p>Здесь xarray.broadcast с линеаризацией массивов функцией ravel() позволяют из трех одномерных координат x, y, z получить триплеты координат для каждой точки куба. Выражения da_x.isel(z=0) и da_y.isel(z=0) извлекают x, y координаты верхней поверхности куба, на которой и вычисляется гравитационное поле (точнее, его вертикальную компоненту, т.к. именно она измеряется при практических исследованиях и такие данные доступны для анализа). Функция xarray.apply_ufunc() весьма универсальная и одновременно обеспечивает векторизацию и поддержку параллельных ленивых вычислений dask для указанной коллбэк функции deltagrav. Хитрость заключается в том, что для выполнения вычислений на кубе для каждой точки поверхности нужно координаты поверхности передать в виде XArray массивов, а для использования dask они также должны быть dask массивами, что мы и обеспечиваем конструкциями da_x.isel(z=0).chunk(50) и da_y.isel(z=0).chunk(50), где 50 это размер блока по координатам x, y (подбирается в зависимости от размера массивов и количества доступных вычислительных потоков). Да, такая вот магия — достаточно лишь использовать вызов chunk() для XArray массива, чтобы автоматически превратить его в dask массив.</p>
 <br> 
 <p>Обратим внимание, что dask-вычисления по умолчанию являются ленивыми (отложенными), то есть вызов функции forward_gravity() завершается почти мгновенно, но возвращаемый результат является лишь оберткой, которая инициирует вычисления только при непосредственном обращении к данным или вызовом load(). При интерактивной работе это очень удобно, так как мы можем написать сложный пайплайн с большими наборами данных и для проверки и визуализации выбрать лишь маленький его кусочек, а при необходимости и запустить вычисления на полном наборе данных. К примеру, мне часто приходится работать с NetCDF датасетами глобального рельефа планеты и прочими в сотни гигабайт на своем ноутбуке — визуализируя малую часть данных, а потом запускать уже готовый ноутбук в облаке для обработки всех данных. Таким образом, код для локальной работы и его продакшен версия ничем не отличаются. Главное, правильно настроить размеры dask блоков, иначе вся магия "сломается".</p>
 <br> 
 <p>Код кольцевого преобразования простой и полностью основан на стандартной двумерной свертке с кольцевой маской. Вот с вычислением фрактального индекса есть небольшой нюанс. А именно, здесь используется гауссова полосовая фильтрация исходного растра для выделения спектральных компонентов (диапазонов пространственных частот), мощность которых вычисляется как стандартное отклонение значений полученных матриц. Для нашей синтетической модели можно бы и попроще, а вот для реальных данных этот метод оказывается оптимальным в силу своей устойчивости к очень зашумленным данным и отсутствия проблем с границами. Далее стандартным способом вычисляется наклон кривой на двойном логарифмическом графике (логарифм длины волны и логарифм мощности компоненты).</p>
 <br> 
 <p>В заключение, приглашаю всех посетить <a href="https://github.com/mobigroup" rel="nofollow noopener noreferrer">GitHub репозитории</a> с множеством геологических моделей и их визуализацией в Blender и ParaView, а также примерами различного анализа. Также смотрите готовые визуализации на <a href="https://www.youtube.com/channel/UCSEeXKAn9f_bDiTjT6l87Lg" rel="nofollow noopener noreferrer">YouTube канале</a>.</p>
</div>', '2021-03-13 07:23:00', 'Вычислительная геология и визуализация: пример Python 3 Jupyter Notebook', 36, null, 5),
        (63, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/2k/hk/cb/2khkcbxofmbwac07dtbu5w1mhdw.png">
 <br> Каждый индекс Elasticsearch состоит из шардов. Шарды — это логическое и физическое разделение индекса. В этой статье мы расскажем о сайзинге шардов Elasticsearch — важной его части, серьёзно влияющей на производительность кластера. В высоконагруженных системах выбор правильной конфигурации архитектуры хранения позволит серьёзно сэкономить на железе. Бóльшая часть статьи основана на <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/size-your-shards.html">соответствующем разделе</a> документации Elastic. Подробности под катом.
 <br> <a name="habracut"></a>
 <br> 
 <h1>Сайзинг шардов Elasticsearch</h1>
 <br> 
 <h2>Как Elasticsearch работает с шардами</h2>
 <br> Поисковые запросы обычно попадают в несколько шардов (в продукционных нагруженных средах рекомендуем использовать ноду с ролью coordinating). Каждый шард выполняет поисковый запрос в одном процессорном треде. Если запросов много, пул тредов поиска заканчивается (именно поиска, т.к. <a href="https://sauravomar01.medium.com/elasticsearch-thread-pools-56a988dff1b7">есть и другие</a>), что приводит к возникновению очередей, снижению производительности и, как следствие, медленной скорости поиска.
 <br> 
 <br> 
 <blockquote>
  Каждый шард использует ресурсы памяти и процессора. Небольшое количество бóльших по объёму шардов использует меньше ресурсов, чем множество мелких.
 </blockquote>
 <br> Давайте теперь краем глаза взглянем на сегменты (см. картинку ниже). Каждый шард Elasticsearch является индексом Lucene. Максимальное количество документов, которое можно закинуть в индекс Lucene — 2 147 483 519. Индекс Lucene разделен на блоки данных меньшего размера, называемые сегментами. Сегмент — это небольшой индекс Lucene. Lucene выполняет поиск во всех сегментах последовательно. Большинство шардов содержат несколько сегментов, в которых хранятся данные индекса. Elasticsearch хранит метаданные сегментов в JVM Heap, чтобы их можно было быстро извлечь для поиска. По мере роста объёма шарда его сегменты объединяются в меньшее количество более крупных сегментов. Это уменьшает количество сегментов, что означает, что в динамической памяти хранится меньше метаданных (см. также <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-forcemerge.html">forcemerge</a>, к которому мы вернемся чуть дальше в статье).
 <br> 
 <img src="https://habrastorage.org/webt/2k/hk/cb/2khkcbxofmbwac07dtbu5w1mhdw.png">
 <br> Еще стоит сказать о ребалансировке кластера. Если добавляется новая нода или одна из нод выходит из строя, происходит ребалансировка кластера. Ребалансировка сама по себе недешёвая с точки зрения производительности операция. Кластер сбалансирован, если он имеет равное количество шардов на каждой ноде и отсутствует концентрация шардов любого индекса на любой ноде. Elasticsearch запускает автоматический процесс, называемый ребалансировкой, который перемещает шарды между узлами в кластере, чтобы его сбалансировать. При перебалансировке применяются заранее заданные <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-cluster.html">правила выделения сегментов</a> (об allocation awareness и других правилах мы подробнее расскажем в одной из следующих статей). Если вы используете <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/data-tiers.html">data tiers</a>, Elasticsearch автоматически разместит каждый шард на соответствующем уровне. Балансировщик работает независимо на каждом уровне.
 <br> 
 <br> 
 <h2>Как заставить Elasticsearch ещё лучше работать с шардами</h2>
 <br> <b>Правильно удалять данные.</b> Если вы удалили документ, из файловой системы он удалится не сразу. Вместо этого, Elasticsearch помечает документ как удаленный на каждом шарде. Отмеченный документ будет продолжать использовать ресурсы, пока он не будет удален во время периодического слияния сегментов. Если нужно физически освободить место, лучше всего сразу удалять индексы целиком, которые в итоге освободят файловую системы.
 <br> 
 <br> <b>Создавать шарды размером от 10 до 50 ГБ.</b> Elastic говорит, шарды размером более 50 ГБ потенциально могут снизить вероятность восстановления кластера после сбоя. Из-за той самой ребалансировки, о которой мы говорили в начале статьи. Ну, и большие шарды накладнее передавать по сети. Предел в 50 ГБ выглядит, конечно, как сферический конь в вакууме, поэтому мы сами больше склоняемся к 10 ГБ. <a href="https://thoughts.t37.net/resizing-your-elasticsearch-indexes-in-production-d7a0402d137e">Вот тут человек советует</a> 10 ГБ и смотреть на размер документов в следующем плане:
 <br> 
 <br> 
 <ul> 
  <li>От 0 до 4 миллионов документов на индекс: 1 шард.</li> 
  <li>От 4 до 5 миллионов документов на индекс: 2 шарда.</li> 
  <li>Более 5 миллионов документов считать по формуле: (количество документов / 5 миллионов) + 1 шард. </li> 
 </ul>
 <br> <b>20 или менее шардов на 1 ГБ JVM Heap.</b> Количество шардов, которыми может жонглировать нода, пропорциональны объему JVM Heap ноды. Например, нода с 30 ГБ JVM Heap должна иметь не более 600 шардов. Чем меньше, тем, скорее всего, лучше. Если это пропорция не выполняется можно добавить ноду. Посмотрим сколько там используется JVM Heap на каждой ноде:
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/th/3u/yf/th3uyf7361xwkh6epl8jrcbapee.png">
 <br> 
 <br> А теперь посмотрим сколько шардов на каждой ноде и видим, что с нашим тестовым стендов всё в порядке. Жить будет.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wc/st/7p/wcst7pgrgw8xn74whkpwh9fyeoa.png">
 <br> 
 <br> Количество шардов на узле можно ограничить при помощи опции <i>index.routing.allocation.total_shards_per_node</i>, но если их уже много, присмотритесь к <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-shrink-index.html">Shrink API</a>.
 <br> 
 <br> <b>Совсем необязательно создавать индексы размером в 1 день.</b> Часто встречали у заказчиков подход, при котором каждый новый день создавался новый индекс. Иногда это оправдано, иногда можно и месяц подождать. Ролловер ведь можно запускать не только с max_age, но и с max_size или max_docs. На Хабре была статья, в которой <a href="https://habr.com/ru/users/adel-s/posts/">Адель Сачков</a>, в ту пору из Яндекс Денег (сейчас уже нет), делился полезным лайфхаком: создавал индексы не в момент наступления новых суток, а заранее, чтобы этот процесс не аффектил на производительность кластера, но у него там были микросервисы.
 <br> 
 <blockquote>
  … каждые сутки создаются новые индексы по числу микросервисов — поэтому раньше каждую ночь эластик впадал в клинч примерно на 8 минут, пока создавалась сотня новых индексов, несколько сотен новых шардов, график нагрузки на диски уходил «в полку», вырастали очереди на отправку логов в эластик на хостах, и Zabbix расцветал алертами как новогодняя ёлка. Чтобы этого избежать, по здравому размышлению был написан скрипт на Python для предварительного создания индексов.
 </blockquote>
 <br> С новогодней ёлкой неплохой каламбурчик получился.
 <br> 
 <br> <b>Не пренебрегайте ILM и forcemerge.</b> Индексы должны плавно перетекать между соответствующими нодами <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-actions.html">согласно ILM</a>. В OpenDistro есть аналогичный механизм.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/vj/rw/xr/vjrwxrgzgopbnafurvlhubwioxu.png">
 <br> 
 <br> С индексами, в которые уже не ведется запись можно выполнить forcemerge — слияние меньших по размеру сегментов в более крупные. Это в итоге снизит накладные расходы на эксплуатацию шардов и повысит скорость поиска. Forcemerge требует значительных ресурсов, поэтому лучше это делать к какие-то в непиковые часы. Добавим, что forcemerge это фактические создание нового сегмента из двух старых, поэтому свободное место на диске лишним точно не будет.
 <br> 
 <br> Приходите в комментарии и расскажите о своём опыте с раскладыванием шардов по нодам. Было бы интересно узнать о том, что работает в вашем случае.
 <br> 
 <br> <b>Анонс вебинара.</b> Elastic приглашает посетить 17 марта в 12 часов по московскому времени вебинар <i>Elastic Telco Day: Applications and operational highlights from telco environments</i>. Эксперты расскажут о применении в решений Elastic в телекоме. <a href="https://www.elastic.co/webinars/elastic-telco-day-applications-and-operational-highlights-from-telco-environments">Регистрация.</a>
 <br> 
 <br> <b>Предложения по митапу.</b> Планируем проведение онлайн-митап по Elastic в апреле. Напишите в комментариях или в личку какие темы вам было бы интересно разобрать, каких спикеров услышать. Если бы вы хотели сами выступить и у вас есть что рассказать, тоже напишите. Вступайте в группу <a href="https://www.meetup.com/ru-RU/Elastic-Moscow/">Elastic Moscow User Group</a>, чтобы не пропустить анонс митапа.
 <br> 
 <br> <b>Канал в телеге.</b> Подписывайтесь на наш канал <a href="https://t.me/elasticstack_ru">Elastic Stack Recipes</a>, там интересные материалы и анонсы мероприятий.
 <br> 
 <br> <b>Читайте наши другие статьи:</b>
 <br> 
 <br> 
 <ul> 
  <li><a href="https://habr.com/ru/company/galssoftware/blog/544310/">Определение объёма кластера Elasticsearch и тестирование производительности в Rally</a></li> 
  <li><a href="https://habr.com/ru/company/galssoftware/blog/470640/">Сайзинг Elasticsearch</a></li> 
  <li><a href="https://habr.com/ru/company/galssoftware/blog/526426/">Как лицензируется и чем отличаются лицензии Elastic Stack (Elasticsearch)</a></li> 
  <li><a href="https://habr.com/ru/company/galssoftware/blog/455387/">Разбираемся с Machine Learning в Elastic Stack (он же Elasticsearch, он же ELK)</a></li> 
  <li><a href="https://habr.com/ru/company/galssoftware/blog/505930/">Elastic под замком: включаем опции безопасности кластера Elasticsearch для доступа изнутри и снаружи</a></li> 
 </ul>
 <br> 
 <hr>
 <br> Если вас интересуют услуги внедрения, администрирования и поддержки Elastic Stack, вы можете оставить заявку в <a href="https://gals.software/solutions/elasticstack#feedback">форме обратной связи</a> на специальной странице.
 <br> 
 <br> 
 <blockquote>
  Мы разработали <a href="https://gals.software/vendors/elastic/education">обучающий курс по основам работы с Elastic Stack</a>, который адаптируется под конкретные потребности заказчика. Подробная программа обучения по запросу.
 </blockquote>
</div>', '2021-03-15 20:12:00', 'Elasticsearch: сайзинг шардов как завещал Elastic + анонс вебинара + предложения по митапу', 64, null, 4),
        (64, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>МТС, «Вымпелком» и «МегаФон» <a href="https://www.kommersant.ru/doc/4730020" rel="noopener noreferrer nofollow">начнут тестировать</a> подключение к Единой биометрической системе от «Ростелекома». Однако пока операторы не планируют интегрировать свои системы удаленной идентификации в ЕБС, поскольку это может оказаться слишком дорого. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f3f/65f/8d9/f3f65f8d9e9e7f7ebe42cad0917c42f8.jpeg" width="1024" height="577">
  <figcaption></figcaption>
 </figure>
 <p>Кроме того, операторам придется самим наполнять реестр ЕБС. Сейчас он не такой многочисленный и включает данные 164 тысяч россиян. </p>
 <p>По информации источников, МТС, «Вымпелком» и «МегаФон» должны будут платить за каждое обращение к ЕБС 200 рублей, как и банки, но дополнительно «Ростелеком» будет взимать еще 23 рубля за использование системы криптозащиты. Компания подтвердила эту информацию, пояснив, что операторы смогут самостоятельно внедрить альтернативное решение безопасности. </p>
 <p>МТС, «МегаФон» и «Вымпелком» уже <a href="https://habr.com/ru/news/t/531612/" rel="noopener noreferrer nofollow">предупреждали</a> власти, что каждая из компаний будет терять по 10 млрд рублей ежегодно из-за требования о дистанционной идентификации абонентов. Источник оценивает затраты каждого оператора на покупку собственной сертифицированной системы криптозащиты для биометрической идентификации минимум в $15 млн. </p>
 <p>ЕБС запустили в 2018 году по инициативе Минцифры и Центробанка. Сейчас ее пользователями, в основном, являются банки. Для них ЦБ <a href="https://habr.com/ru/post/440670/" rel="noopener noreferrer nofollow">выпускал</a> рекомендации по криптозащите ЕБС. Сбербанк уже к концу этого года <a href="https://habr.com/ru/news/t/538068/" rel="noopener noreferrer nofollow">намеревается внедрить</a> удаленную регистрацию своих клиентов-физлиц.</p>
 <p>С 1 января к ЕБС также подключились страховые компании. Сейчас <a href="https://habr.com/ru/news/t/542406/" rel="noopener noreferrer nofollow">ведется</a> разработка реестра государственных и коммерческих организаций, которые смогут получить доступ к системе. </p>
 <p>Сотовым операторам такое подключение может понадобиться для удаленной идентификации абонентов виртуальных сим-карт (eSIM). Соответствующий закон был принят в декабре и заработает с июля. Абонентам дадут возможность удаленно заключать договор с оператором с помощью квалифицированной электронной подписи или простой электронной подписи при условии идентификации в ЕБС.</p>
</div>', '2021-03-16 17:57:00', 'Сотовые операторы согласились протестировать Единую биометрическую систему', 22, null, 5),
        (65, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>В марте компания Microsoft выпустила плановые обновления безопасности, закрывающие 82 уязвимости в своих продуктах, 10 из которых были классифицированы как&nbsp;<em>критические</em>. Среди закрытых уязвимостей 2 являются 0-day и обнародованы публично, а эксплуатация одной из этих уязвимостей была зафиксирована в реальных атаках.</p>
 <p>В данной статье я расскажу о самых главных моментах этого выпуска.</p>
 <p><em>Примечание: помимо плановых обновлений в марте был внеплановый выпуск обновлений безопасности для локальных версий Microsoft Exchange Server 2010, 2013, 2016, 2019. Подробности об этом выпуске можно получить в нашем&nbsp;</em><a href="https://msrc-blog.microsoft.com/2021/03/02/multiple-security-updates-released-for-exchange-server/"><em><u>блоге</u></em></a><em>.</em></p>
 <p>Сводная информация по количеству и типу уязвимостей в соответствующих продуктах приведена на графике ниже.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a1c/f9a/75e/a1cf9a75e1945e5370cacccc6dcb540c.jpeg" width="1268" height="707">
  <figcaption></figcaption>
 </figure>
 <p>На следующие уязвимости и обновления безопасности следует обратить особое внимание.</p>
 <p>Была закрыта критическая уязвимость удаленного исполнения кода&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26867"><u>CVE-2021-26867</u></a>&nbsp;в гипервизоре Microsoft Hyper-V (CVSS 9.9), которой подвержены все последние версии Windows 10 20H2, 2004, 1909 и Windows Server 20H2, 2004, 1909.</p>
 <p>Мартовские обновления также исправляют важную уязвимость повышения привилегий&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-27077"><u>CVE-2021-27077</u></a>&nbsp;в компонентах Windows Win32k (CVSS 7.8). Она была публично раскрыта исследователями из команды Trend Micro Zero Day Initiative. Данная уязвимость затрагивает все поддерживаемые версии Windows и Windows Server.</p>
 <p>Отдельного внимание заслуживает закрытая критическая уязвимость удаленного исполнения кода&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26897"><u>CVE-2021-26897</u></a>&nbsp;в службе сервера разрешения сетевых имен Windows DNS (CVSS 9.8). Уязвимости подвержены все поддерживаемые версии Windows Server c 2012 по 2019.</p>
 <p>Также обновления затронули важную уязвимость повышения привилегий&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-24090"><u>CVE-2021-24090</u></a>&nbsp;в функции создания отчетов об ошибках Windows Error Reporting (CVSS 7.8), которой подвержены все последние версии Windows 10 20H2, 2004, 1909 и Windows Server 20H2, 2004, 1909.</p>
 <p>Были закрыты сразу 10 уязвимостей в расширении видеокодека HEVC, наиболее интересной из которых является критическая уязвимость удаленного исполнения кода&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-24089"><u>CVE-2021-24089</u></a>&nbsp;(CVSS 7.8). Этот компонент не входит по умолчанию в поставку ОС, поэтому данным уязвимостям подвержены только те системы, в которых пользователь или администратор загрузили и установили данное расширение из магазина Microsoft. Причем приложения из магазина Microsoft обновляются автоматически. Подробнее об этом можно узнать из&nbsp;<a href="https://support.microsoft.com/en-us/account-billing/get-updates-for-apps-and-games-in-microsoft-store-a1fe19c0-532d-ec47-7035-d1c5a1dd464f"><u>этой</u></a>&nbsp;статьи.</p>
 <p>Замыкает команду лидеров мартовского выпуска критическая уязвимость нулевого дня, уже использующаяся в атаках – это критическая уязвимость повреждения памяти&nbsp;<a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26411"><u>CVE-2021-26411</u></a>&nbsp;в браузере Internet Explorer (CVSS 8.8). Данная уязвимость затрагивает версию браузера IE 11. Подробнее об атаках в этой&nbsp;<a href="https://www.bleepingcomputer.com/news/security/hacking-group-also-used-an-ie-zero-day-against-security-researchers/"><u>статье</u></a>.</p>
 <p>Остальные уязвимости были исправлены в компонентах Microsoft Edge (на движке EdgeHTML), Microsoft Office (приложениях и веб-сервисах), SharePoint Server, Visual Studio, VS Code, Azure Kubernetes Service, Azure Container Instance, Azure Spring Cloud, Azure Service Fabric, Azure Sphere и Power BI Report Server.</p>
 <p>Полный список статей базы знаний для соответствующих пакетов обновлений, с которыми связаны потенциальные проблемы при установке, приведен в&nbsp;<a href="https://msrc.microsoft.com/update-guide/releaseNote"><u>заметках к выпуску</u></a>.</p>
 <p>Обновления Servicing Stack Updates (SSU) были&nbsp;<a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV990001"><u>выпущены</u></a>&nbsp;для следующих версий ОС: Windows 10 версии 1809, 1909, 2004, 20H2 и Windows Server версии 2019, 1909, 2004, 20H2.</p>
 <p>О важных изменениях в жизненном цикле обновлений SSU и объединении в единый накопительный пакет обновлений вы можете прочитать в нашем&nbsp;<a href="https://techcommunity.microsoft.com/t5/windows-it-pro-blog/simplifying-on-premises-deployment-of-servicing-stack-updates/ba-p/1646039"><u>блоге</u></a>. О том, как установить сразу и SSU, и обновления безопасности ОС в одном накопительном пакете, автоматически, соблюдая правильную последовательность, читайте в нашем&nbsp;<a href="https://techcommunity.microsoft.com/t5/windows-it-pro-blog/deploy-windows-ssus-and-lcus-together-with-one-cumulative-update/ba-p/1967887"><u>блоге</u></a>.</p>
 <p>Также хочу напомнить, что в марте заканчивается поддержка браузера Microsoft Edge Legacy (на движке EdgeHTML). Все подробности – на нашем&nbsp;<a href="https://aka.ms/lifecycle"><u>портале</u></a>.</p>
 <p>Как всегда самую полную и актуальную информацию об уязвимостях и обновлениях безопасности вы можете найти на нашем портале&nbsp;<a href="https://portal.msrc.microsoft.com/en-us/security-guidance/summary"><u>Security Update Guide</u></a>. Нам очень интересно узнать ваше мнение о новом портале Security Update Guide, поэтому мы призываем вас поделиться обратной связью о работе портала через эту&nbsp;<a href="https://aka.ms/msrc-feedback-sug"><u>форму</u></a>.</p>
 <p>Вы также можете&nbsp;<a href="https://aka.ms/PatchTuesdayCast"><u>посмотреть</u></a>&nbsp;запись нашего ежемесячного вебинара «<strong>Брифинг по безопасности»</strong>&nbsp;с более подробным разбором этого выпуска обновлений безопасности Microsoft.</p>
 <p>А для того чтобы быть в курсе самых актуальных новостей информационной безопасности Microsoft, подписывайтесь на <a href="https://aka.ms/artsin">канал</a>.</p>
 <p><em>Помните, почти 90% всех уязвимостей уже имели патчи от производителей на момент обнародования*, и своевременно обновляйте ваши системы.</em></p>
 <p>Артём Синицын CISSP, CCSP, MCSE, MC: Azure Security Engineer<br>старший руководитель программ информационной безопасности в странах Центральной и Восточной Европы<br>Microsoft<br><a href="https://aka.ms/artsin">Twitter</a> ⬝ <a href="https://aka.ms/artsinvideo">YouTube</a></p>
</div>', '2021-03-18 10:00:00', 'Мартовские обновления безопасности от Microsoft', 69, null, 9),
        (66, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p><em>Человечество исследует свет как физическое явление уже больше 2000 лет. Может сложиться впечатление, что этот феномен досконально изучен. Но не все так однозначно. На некоторые вопросы до сих пор нет однозначного ответа.</em></p>
 <h3>Как все начиналось</h3>
 <p>Вообще, при изучении света у ученых всегда возникали различные сложности. Для античных ученых проблемой являлось определение самой природы света. Некоторые из них объясняли способность человека видеть лучами, идущими из глаз. А римский писатель Лукреций, наоборот был близок к истине. В своих трудах он писал о том, что свет и тепло состоят из маленьких движущихся частиц, но, к сожалению, его идеи не обрели популярности. В итоге, сформированная в античности точка зрения о бесконечной скорости света была основной до 17 века. </p>
 <p>17 век стал началом активного изучения природы света. Изобретение телескопа, корпускулярная теория света Ньютона и Декарта, волновая теория Гука и Гюйгенса, а также первая оценка скорости света Олафа Рёмера. Изучая затмения спутников Юпитера, он заметил, что время затмений отклоняется от усредненного расписания, в зависимости от расстояние между Землей и Юпитером. Когда оно увеличивается, то затмения отстают от расписания, и наоборот. Рёмер связал этот факт с тем, что свет проходит больший или меньший путь, в зависимости от положения планет. К сожалению, у ученых 17 века, в том числе и Рёмера, не было возможности достаточно точно измерить время и расстояния. Поэтому, пользуясь доступными ему средствами, он рассчитал скорость света и получил 220000 км/с. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/786/498/1db/7864981dbc83bc6ab10404e0d2f1a4ee.png" alt="Рисунок из статьи Рёмера. Рёмер наблюдал затмения в точках E. K. L. H, G, F " title="Рисунок из статьи Рёмера. Рёмер наблюдал затмения в точках E. K. L. H, G, F " width="436" height="825">
  <figcaption>
   Рисунок из статьи Рёмера. Рёмер наблюдал затмения в точках E. K. L. H, G, F 
  </figcaption>
 </figure>
 <h3>Как обстоят дела сегодня</h3>
 <p>Если 17 век можно охарактеризовать отсутствием необходимых технологий, то в наше время с этим проблем нет. Высокочастотные лазеры, невероятно точные часы. Но возникает другая проблема — практическая реализация измерения скорости. Представим измерение скорости света. Возьмём точные часы, источник света, например лазер, и зеркало. Включим лазер и измерим, за какое время луч пройдет от лазера до зеркала и обратно. Поделим два расстояния от лазера до зеркала на время и получим скорость света. В ходе такого эксперимента мы получим двустороннюю скорость света. Двусторонняя, потому что свет во время измерения проходит один и тот же путь два раза(от лазера до зеркала и обратно). В чем может быть проблема? Возможно, скорость света явление анизотропное, то есть имеет различное значение в разных направлениях. Например. в одну сторону луч движется со скоростью c/2, а возвращается мгновенно. Различия могут быть менее существенными, например в несколько процентов. Но для того, чтобы подтвердить или опровергнуть эту теорию необходимо измерить одностороннюю скорость света. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/878/f2a/c09/878f2ac098ef70087e9544558c83bf20.png" alt=" Схема измерения скорости света  " title=" Схема измерения скорости света  " width="495" height="130">
  <figcaption>
    Схема измерения скорости света 
  </figcaption>
 </figure>
 <h3>Одновременность и синхронизация Эйнштейна</h3>
 <p> Для измерения односторонней скорости света мы не обойдемся одними часами как в случае измерения двусторонней скорости (т.е. по замкнутой траектории). Самого понятия «односторонняя скорость» нет, пока мы не определим, что такое «одно и то же время» в двух разных местах. Поэтому понадобится пара часов, чтобы измерить время старта и финиша по одной временной шкале. Для этого нужно синхронизировать часы.&nbsp; Именно от того, каким образом мы сделаем это, зависит измерение величины односторонней скорости. Таким образом, одновременность двух событий в одной системе отсчета, разделенных расстоянием определяется соглашением о том, как синхронизировать часы в этих двух точках. В работе «К электродинамике движущихся тел» Эйнштейн предложил схему, которая названа «синхронизацией Эйнштейна». Согласно ей, односторонняя скорость света равна двусторонней независимо от направления. В той же работе Эйнштейн писал: «…это не предпосылка и не гипотеза о физической природе света, а требование, которое я делаю на основании свободного выбора, чтобы получить понятие одновременности».&nbsp; </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/5aa/d94/d33/5aad94d3372bd7fc3d85c7e98df8daa2.png" alt="Синхронизация Эйнштейна. Время t’ вторых часов определяется таким образом, чтобы оно равнялось половине времени, за которое свет проходит расстояние 2*AB" title="Синхронизация Эйнштейна. Время t’ вторых часов определяется таким образом, чтобы оно равнялось половине времени, за которое свет проходит расстояние 2*AB" width="503" height="139">
  <figcaption>
   Синхронизация Эйнштейна. Время t’ вторых часов определяется таким образом, чтобы оно равнялось половине времени, за которое свет проходит расстояние 2*AB
  </figcaption>
 </figure>
 <h3>База, который час?</h3>
 <p> Как изменится понимание процессов во вселенной, если окажется, что односторонняя скорость света не одинаковая в разных направлениях?&nbsp; Представим себе такую картину: офис NASA на Земле хочет синхронизировать часы с космической станцией. Допустим, что свет от Земли до станции и обратно проходит за 20 минут. Офис отправляет сообщение в 12:00. Если односторонняя скорость света равна c, то сигнал дойдет до станции за 10 минут. Экипаж устанавливает свои часы на 12:10 и шлет ответ Земле, который дойдет в 12:20. Теперь представим, что до станции односторонняя скорость света равна c/2, а обратно свет доходит мгновенно. Офис также отправляет сообщение в 12:00. Сигнал доходит до станции в 12:20, но экипаж думает, что односторонняя скорость света равна c, поэтому устанавливает часы на 12:10 и шлет ответ офису, который доходит мгновенно. Земля получает сообщение, в котором говорится, что время на станции установлено на 12:10, причем сигнал получен Землей в 12:20. Для наблюдателя ничего не изменилось, но часы в обоих случаях синхронизированы по-разному.&nbsp; </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/1e7/28c/cad/1e728ccadd21bd0a92635aaded52f3b1.png" alt="Пространственно-временная диаграмма. Для наблюдателей два случая идентичны, но часы синхронизированы по-разному" title="Пространственно-временная диаграмма. Для наблюдателей два случая идентичны, но часы синхронизированы по-разному" width="1492" height="703">
  <figcaption>
   Пространственно-временная диаграмма. Для наблюдателей два случая идентичны, но часы синхронизированы по-разному
  </figcaption>
 </figure>
 <h3>Современные исследования</h3>
 <p>Периодически, возникают исследования, заявляющие о том, что односторонняя скорость света определена. В 2009 году в октябрьском выпуске «Американского физического журнала» вышла статья о том, как группа ученых нашла способ определить одностороннюю скорость света. Но через определенное время различные ученые опровергли представленный метод и показали, что в ходе исследования&nbsp; была измерена двусторонняя скорость </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/344/e41/7f7/344e417f7c1f9bca90199a108d540acc.png" alt="Текст статьи можно найти на сайте журнала " title="Текст статьи можно найти на сайте журнала " width="1600" height="900">
  <figcaption>
   Текст статьи можно найти на сайте журнала 
  </figcaption>
 </figure>
 <p>На сегодняшний день мы не знаем величину односторонней скорости света. Зачем об этом вообще говорить, если общепринятые физические модели работают. Если нельзя определить одностороннюю скорость света, то имеет ли смысл понятие одновременности для двух объектов, разделенных расстоянием? Возможно, это просто случайная причуда Вселенной, а может быть ключ к следующей смене парадигм к физике.</p>
 <hr>
 <p>Дата-центр ITSOFT — услуги размещения и аренды серверов и стоек в двух дата-центрах в Москве. За последние годы UPTIME 100%. Размещение GPU-ферм и ASIC-майнеров, аренда GPU-серверов, лицензии связи, SSL-сертификаты, администрирование серверов и поддержка сайтов. </p>
</div>', '2021-03-18 19:22:00', 'Проблематика измерения скорости света', 59, null, 8),
        (67, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/502/691/19f/50269119fbcbf9edbe139d0e5ebd1233.png" width="1333" height="504">
  <figcaption></figcaption>
 </figure>
 <p>Иногда, чтобы сделать что-то сложное, нужно сделать что-то простое сначала. К примеру, если взять какой-то одноплатный компьютер, и захотеть установить arch - можно столкнуться с трудностями. А что если взяться устанавливать не чистый arch, а manjaro?</p>
 <p>На просторах был найден незамысловатый установщик для одноплатных систем, который подготовит вам всю систему за сравнительно короткое время. Называется сие творенье manjaro-arm-installer. Простым языком - это пакет в репозитории manjaro, который готовит разделы, устанавливает базовый набор пакетов и создает пользователей на носителе, который потом нужно просто всунуть в одноплатный ПК. Чтобы это сделать, можно просто скачать live образ manjaro, загрузится с него, затем вписать в консоль</p>
 <pre><code class="bash">sudo pacman -Syu manjaro-arm-installer</code></pre>
 <p>По завершении установки подключить носитель, предназначенный для одноплатного ПК, и запустить </p>
 <pre><code class="bash">sudo bash manjaro-arm-installer</code></pre>
 <p>Дальше заполнить несколько скринов настроек и подождать, пока пройдёт установка. Дальше размонтировать и извлечь накопитель и <s>готовиться к чуду</s> воткнуть в одноплатный пк. Если всё прошло успешно, у вас за ~ 30 минут будет в строю ваша платка, и, что немаловажно, под управлением archlinuxarm.</p>
 <p><a href="https://gitlab.manjaro.org/manjaro-arm/applications/manjaro-arm-installer" rel="noopener noreferrer nofollow">Линк </a>на сам установщик. Там написано какие одноплатные пк поддерживаются (Raspberry Pi 4 точно есть), ровно как и то, каким образом запустить этот установщик на произвольном дистрибутиве linux.</p>
</div>', '2021-03-19 18:10:00', 'Archlinuxarm просто', 20, null, 5),
        (68, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Основным элементом управления дисковым пространством накопителей, обеспечивающим безопасное хранение данных, выступает файловая система. На устройствах компании Apple это HFS+, также известная как Mac OS Extended. Она является следующим улучшением предшествующей версии HFS.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/a4d/ef6/7d7/a4def67d75c35215f607f87078060595.jpg" alt="image">
 <br> <a name="habracut"></a>
 <br> 
 <h2>Файловая система HFS+ (Mac OS Extented)</h2>
 <br> Совокупный ряд обновлений системы привел к повышению надежности файловой структуры. HFS+ использует узловой древовидный формат файловой основы совместно с обязательной записью сведений о произошедших изменениях. В выделенном месте на накопителе система располагает особую часть служебной информации, которая содержит данные обо всех элементах, расположенных на диске. А также важные сведения, необходимые для полноценной загрузки и функционирования HFS+.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/931/415/587/931415587a23fce6461fd26c739c576f.jpg" alt="image"> 
 <br> 
 <br> Новый вариант построения системы осложняет операции восстановления данных, так как информация об объектах мгновенно обновляется при внесении каких-либо изменений (удалении, сбое, поломке и т.д.). И не каждое программное обеспечение, представленное сегодня на рынке, способно вернуть востребованные файлы. Поэтому далее мы рассмотрим несколько программ, которые умеют возвращать файлы с накопителей формата HFS+ и проведем их сравнительный анализ.
 <br> 
 <br> 
 <div class="oembed">
  <iframe allowfullscreen id="605325fb95bc5d2dedbee1c9" src="https://embedd.srv.habr.com/iframe/605325fb95bc5d2dedbee1c9"></iframe>
 </div>
 <br> 
 <h2>Список задействованных приложений</h2>
 <br> Перечень приложений, которые будут участвовать в тесте будет включать все известные марки программ. Основным требованием к приложениям было условие, что участники сравнения должны поддерживать процесс восстановления с дисков HFS+. К ним относятся такие продукты Hetman, R-Studio, Easeus, DiskDrill, UFS Explorer.
 <br> 
 <br> В ОС MacOS мы на носитель записали разные объекты, наиболее часто используемые пользователями, а именно снимки, видеоролики, офисные тексты. Потом некоторые из них мы стерли. Подключили диск к другому компьютеру, на котором уже были все испытуемые программы, и произвели проверку их возможностей. Полученные результаты мы представили далее.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/185/abb/620/185abb620bbfabb82c98102af02fd15d.png" alt="image">
 <br> 
 <br> Примечание. Recuva данную файловую систему не распознает, поэтому в тестах мы ее не задействовали.
 <br> 
 <br> 
 <h2>Вариант простого удаления</h2>
 <br> С данным видом теста с тем или иным успехом успешно справились все перечисленные приложения. Более подробно итоговые результаты имеют следующий вид.
 <br> 
 <br> <b>Приложение <a href="https://hetmanrecovery.com/ru/hard-drive-data-recovery-software">Hetman Partition Recovery</a></b> – в главном окне диск HFS+ определен верно и корректно указано его имя. После простого анализа (на выбор представлено 2 вида сканирования и мы выбрали самый быстрый) удаленные объекты были найдены, внутренний порядок полностью сохранен, названия файлов имеют исходные значения, содержимое отображается. Искомые файлы восстановлены.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/871/e1f/4b7/871e1f4b7d3d8b5e4f9867449e8fdc0b.png" alt="image">
 <br> 
 <br> <b>Утилита RStudio</b> – носитель HFS+ успешно определен, указаны имя диска и тип используемой системы. Выполнив быстрый анализ, программа RStudio нашла стертые файлы, но отсутствовала одна папка (1Movie), часть элементов представлена в нескольких копиях, а некоторые файлы числились удаленными, хотя действий с ними мы не производили. Файлы восстановлены за исключением одного каталога.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/ad1/239/75b/ad123975bdad75a4b78d85b20a18f624.png" alt="image">
 <br> 
 <br> <b>Программа Easeus Data Recovery Wizard </b>– диск найден, верно определены тип системы HFS+ и имя носителя. В утилите присутствует только вариант полной проверки накопителя. По ее завершению все удаленные элементы обнаружены и восстановлены. Однако программа не выделяет какой-либо меткой восстановленные файлы. Часть элементов имеет копии. Придется тратит время и проверять весь массив данных, чтобы найти нужные файлы.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/5cb/73d/9e6/5cb73d9e60ad8367a98d738aa13498cc.png" alt="image">
 <br> 
 <br> <b>Утилита DiskDrill</b> – представляет в выделенном поле программы правильный объем носителя, но отмечает его тип как HFS с неизвестным именем. Выбор быстрого варианта исследования диска результатов не дал. В окне показаны только существующие файлы. После обширного сканирования содержимое носителя распределено по разным каталогам, согласно своему расширению. Восстановленные файлы не выделены, их общее количество неизвестно, внутреннее наполнение файлов не показывается.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/141/7d2/a68/1417d2a686095afba1868172462d41f9.png" alt="image">
 <br> 
 <br> <b>Программа UFSExplorer</b> – имя носителя не указано, но система отмечена верно. Вариант простого сканирования отсутствует. Полный анализ восстановил удаленные файлы, отобразил верно организационное построение и маркировку объектов, обеспечил пред просмотр всего содержимого по выбору, кроме текстовых файлов (вызывает сомнение способность удачно восстановить документы).
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/769/2a3/c6c/7692a3c6c7270a0e43793ffe11c40f5c.png" alt="image">
 <br> 
 <br> Краткие предварительные оценки всех образцов после первого теста – перечисленные образцы смогли возвратить удаленные объекты, продукты от Hetman и Easeus показали лучший результат в сравнении с оставшимися, которые имеют отдельные недочеты.
 <br> 
 <br> 
 <h2>Поврежден, удален или отсутствует заголовок тома</h2>
 <br> Мы намерено усложнили задачу. Сперва стерли заголовок тома, а потом запустили тестовую проверку утилит.
 <br> 
 <br> <b>Приложение Hetman</b> – информация о носителе отображена верно. Быстрый вариант сканирования нашел все удаленные файлы, правильно отобразил организационный порядок элементов на диске, подготовил объекты к восстановлению, при выборе показывает содержание файлов.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/871/e1f/4b7/871e1f4b7d3d8b5e4f9867449e8fdc0b.png" alt="image">
 <br> 
 <br> <b>Утилита RStudio </b>– также все характеристики накопителя указаны верно. Однако, как и в первом тесте, RStudio не вернула папку 1Movie и представила несколько копий отдельных каталогов. Хотя все остальные файлы восстановила.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/4f1/556/d67/4f1556d6754d52353f60486cf0703944.png" alt="image">
 <br> 
 <br> <b>Программа Easeus</b> – корректно представила сведения о диске в полном объеме. Итог сканирования полностью повторяет результаты из прошедшего теста. Все файлы возвращены, однако нет разделения и некоторая доля файлов представлена вместе со своими копиями.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/f25/a43/e1d/f25a43e1d837e55fc8af113a6c1ea2eb.png" alt="image">
 <br> 
 <br> <b>DiskDrill</b> – как и ранее, ограниченные сведения о носителе. А после сканирования, широкий разброс файлов по разным папкам, формат представления нарушен, ознакомиться с содержимым многих документов невозможно. Слабые результаты вынуждают нас отказаться от дальнейшего теста данной утилиты.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/11e/115/fbd/11e115fbd06733efe610f90cb9337069.png" alt="image">
 <br> 
 <br> <b>UFSExplorer </b>– неполный набор данных о диске, отсутствует имя носителя. Также, как и ранее, восстановил все файлы, вернул правильную дисковую структуру, но возникли проблемы с отображением текстов.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/e8c/f19/4be/e8cf194be95efcb185fdfe3fa3a6780d.png" alt="image">
 <br> 
 <br> 
 <h2>Дополнительно стерта копия заголовка в метаданных HFS+</h2>
 <br> С новым вызовом программы справились следующим образом.
 <br> 
 <br> Приложение Hetman – урезана информация о носителе, не определен тип, нет имени. Задействуем полный вариант сканирования. Несмотря на недостаток метаданных, итоговое построение носителя правильно, файлы восстановлены и отображаются при обращении.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/0e6/86b/1d5/0e686b1d5cef5c76c3db5b3ecc793e63.png" alt="image">
 <br> 
 <br> <b>Программа RStudio</b> – частично отображает сведения о диске, нет его названия, не определен тип. После анализа сведения представлены в полном объеме. Но восстановлены, как и прежде, не все файлы. Нет отдельного каталога с видео 1Movie и дополнительно отсутствует директория с файлом doc.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/ad1/239/75b/ad123975bdad75a4b78d85b20a18f624.png" alt="image">
 <br> 
 <br> <b>Утилита Easeus</b> – тоже не полные сведения о диске, неизвестны имя и тип системы. Но после сканирования программе удалось восстановить удаленные файлы, однако, как и в прошлых испытаниях, возникли дополнительные копии некоторого содержимого.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/69e/ad0/e28/69ead0e28090c28a7f0ee8b23ee534c7.png" alt="image">
 <br> 
 <br> <b>UFSExplorer </b>– диск неизвестен, нет никаких сведений. После дискового анализа программа нашла удаленные элементы, хоть и не способна представить содержимое текстовых документов.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/bed/a5e/bd5/beda5ebd5f1274c2b6d24ca4882e54b6.png" alt="image">
 <br> 
 <br> <b>Потеря части метаданных</b>
 <br> В заключительной тестовой проверке приложений для восстановления мы сымитируем критические повреждения файловой системы носителя, а именно сначала удалим древовидные узлы верхнего уровня, а потом вдобавок сотрем еще и узлы второго уровня Index Node. И в первом, и во втором тесте каждая из программ показала схожий результат.
 <br> 
 <br> <b>Программа Hetman</b> – диск показан, но сведения о нем отсутствуют. После полного сканирования накопитель идентифицирован, внутренняя структурная форма представления содержимого восстановлена, все файлы возвращены, отображаются при нажатии и готовы для сохранения.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/0e6/86b/1d5/0e686b1d5cef5c76c3db5b3ecc793e63.png" alt="image">
 <br> 
 <br> <b>RStudio </b>– диск неизвестен, но после сканирования все сведения представлены. Приложение успешно восстановило удаленные элементы кроме, ситуация повторилась, содержимого директорий 1Movie и doc. Остальные файлы просматриваются при обращении, внутренняя форма накопителя возвращена к исходному состоянию.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/ad1/239/75b/ad123975bdad75a4b78d85b20a18f624.png" alt="image">
 <br> 
 <br> <b>Easeus </b>– накопитель найден, но данных о нем нет. Программный анализ также полностью восстановил утраченные элементы, их можно при необходимости просмотреть, но все равно присутствуют дополнительные лишние копии отдельных объектов.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/f25/a43/e1d/f25a43e1d837e55fc8af113a6c1ea2eb.png" alt="image">
 <br> 
 <br> <b>UFSExplorer</b> – вид носителя не определен, параметры его неизвестны. После сканирования структурная композиция содержимого принимает первичный вид, файлы восстановлены, их можно сохранить, только все равно нет отображения содержимого некоторых текстов.
 <br> 
 <br> 
 <h2>Вывод</h2>
 <br> Четыре из пяти программ успешно справились с проверкой возможностей. Каждая, в большей или меньшей степени, смогла восстановить удаленные файлы. Были отдельные моменты при выводе некоторых элементов для ознакомления, но, в целом, тест основной четверкой приложений пройден, за исключением DiskDrill.
 <br> 
 <br> Полную версию статьи со всеми дополнительными видео уроками смотрите в <a href="https://hetmanrecovery.com/ru/recovery_news/top-programs-for-data-recovery-on-a-disk-with-the-hfs-file-system.htm">источнике</a>.
</div>', '2021-03-21 23:19:00', 'Файловая система HFS+: тестируем программы для восстановления данных', 23, null, 8),
        (69, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/j4/xz/5n/j4xz5nnignesblqyjstg0ffom9o.jpeg">
 <br> 
 <br> По <a href="https://roskomsvoboda.org/post/aktivisty-budut-suditsya-za-twitter/" rel="nofollow noopener noreferrer">информации</a> «Роскомсвобода» и проекта "<a href="https://t.me/NetFreedomsProject/134" rel="nofollow noopener noreferrer">Сетевые Свободы</a>", активисты и общественники собираются судиться с Роскомнадзором в случае блокировки Twitter. В их числе политики Евгений Ройзман, Илья Яшин и Михаил Светов, активисты Владислав Здольников и Вадим Коровин, журналисты Дмитрий Низовцев и Евгений Фельдман, правозащитник Сергей Давидис. Активисты, журналисты и политики намерены доказывать вмешательство в свободу слова. 
 <br> <a name="habracut"></a>
 <br> Руководитель проекта «Сетевые Свободы» Дамир Гайнутдинов <a href="https://itsmycity.ru/2021-03-22/evgenij-rojzman-budet-suditsya-sroskomnadzorom-esli-twitter-zablokiruyut-vrossi" rel="nofollow noopener noreferrer">пояснил</a> изданию It’s My City, что «блокировка Twitter будет вмешательством в право на свободу выражения мнения любого пользователя соцсети». Гайнутдинов добавил, что стратегия юристов проекта будет зависеть от действий РКН, но они уже готовы к разному развитию событий.
 <br> 
 <br> Владислав Здольников <a href="https://t.me/itsorm/2095" rel="nofollow noopener noreferrer">написал</a> в своем телеграм-канале «IT и СОРМ», что «борьба с блокировками любого ресурса — прежде всего, борьба за интересы жителей России», а также, что он в случае блокировки Twitter «будет бороться с государственной цензурой и за свободу выражать любое мнение». В конце своего пояснения Здольников объявил, что «готовит кое-что техническое» по этому поводу.
 <br> 
 <br> 10 марта 2021 года в России Роскомнадзор <a href="https://habr.com/ru/news/t/546280/">замедлил</a> Twitter. 16 марта РКН <a href="https://habr.com/ru/news/t/547354/">пригрозил</a> Twitter полной блокировкой, а не просто замедлением, если сервис не выполнит все требования регулятора в течение месяца. Через девять суток после начала замедления Роскомнадзор с сожалением <a href="https://habr.com/ru/news/t/547940/">сообщил</a>, что компания Twitter до сих пор никак официально не отреагировала на ограничения в РФ — ни заявлений, ни обращений по поводу сотрудничества и урегулирования ситуации государственный орган не получал.
 <br> 
 <br> На Хабре <a href="https://habr.com/ru/post/546694/">опубликована</a> полная хроника продолжающегося противостояния Роскомнадзора и Twitter.
</div>', '2021-03-22 21:55:00', 'Активисты и общественники намерены судиться с Роскомнадзором в случае блокировки Twitter', 94, null, 3),
        (70, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Не путать с тёмным режимом!</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/99d/e0c/8f7/99de0c8f7bc5d51e2de4c16a5e1bc1cf.jpeg" width="900" height="550">
  <figcaption></figcaption>
 </figure>
 <p>Шумиха вокруг «Социальной дилеммы» заставила многих осознать силу технологий и их влияние на всех нас. Для UX-дизайнеров использование нечестных уловок на цифровых платформах&nbsp;— не новость: мы называем такие хитрости <strong>тёмными паттернами</strong>.</p>
 <p><a href="https://darkpatterns.org/index.html"><strong><em><u>Тёмные паттерны</u></em></strong><em><u>&nbsp;— это уловки, используемые на веб-сайтах и в приложениях, которые заставляют пользователя делать то, что он не собирался: например покупать что-то или регистрироваться где-то. Цель этого сайта&nbsp;— распространять информацию и стыдить компании, которые используют тёмные паттерны.</u></em></a></p>
 <p>К сожалению, тёмные паттерны в дизайне интерфейса&nbsp;— распространенное явление. Я продемонстрирую это на подборке из сервисов и приложений, которыми мы пользуемся каждый день.</p>
 <h3>Замаскированная реклама в YouTube</h3>
 <p><strong>Замаскированная реклама</strong>&nbsp;— <a href="https://darkpatterns.org/types-of-dark-pattern/disguised-ads.html"><u>реклама, замаскированная под другой контент или элементы навигации таким образом, чтобы вы нажали на нее.</u></a></p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2b9/c9c/d6e/2b9c9cd6eb6da20d2e7366bedc726eaa.gif" alt="Автор (правообладатель): YouTube. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): YouTube. Условия лицензии и защиты авторского права: добросовестное использование." width="400" height="711">
  <figcaption>
   Автор (правообладатель): YouTube. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>Самое первое, что показывает YouTube, когда приложение открыто,&nbsp;— это не видео, а реклама, очень похожая на видео. Листая приложение, пользователь видит множество такой замаскированной под видео рекламы и легко может нажать на нее по ошибке.</p>
 <h3>«Тараканья ловушка» (Spotify)</h3>
 <p><abbr title="Roach Motel">Тараканья ловушка</abbr>&nbsp;— <a href="https://darkpatterns.org/types-of-dark-pattern/roach-motel.html"><u>такой дизайн, который упрощает попадание в определенную ситуацию, но затрудняет выход из нее (например, оформление подписки).</u></a></p>
 <p>Помните, как создается аккаунт Spotify? Вряд ли: вы наверняка использовали OAuth и сразу же вошли через аккаунт Facebook. А если нет&nbsp;— заполнили небольшую форму, указали регистрационные данные&nbsp;— и всё. А как <strong>удалить аккаунт Spotify? Если вы пытались это проделать, наверняка помните, что пришлось постараться.</strong></p>
 <p>На веб-странице Spotify легко понять, как войти или зарегистрироваться. На панели навигации есть понятные кнопки&nbsp;— и еще выделенная кнопка в центре экрана.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/28d/248/560/28d248560b06cfe81e59644e559c2494.png" alt="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." width="1400" height="1113">
  <figcaption>
   Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/0df/ecb/c45/0dfecbc45867ee02696b54b838d21291.png" alt="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." width="400" height="648">
  <figcaption>
   Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>Если нажать кнопку входа, вы обнаружите, что для использования Spotify не нужно создавать аккаунт&nbsp;— можно войти через аккаунт Facebook, Apple или Google. Просто и удобно, правда?</p>
 <p>А вот удалить аккаунт Spotify&nbsp;— то еще испытание. Нужно «всего лишь» выполнить следующее:</p>
 <ol>
  <li><p>Перейти на страницу <a href="https://support.spotify.com/us/contact-spotify-support/"><u>support.spotify.com/us/contact-spotify-support/</u></a>.</p></li>
  <li><p>Нажать «<strong>Войти</strong>» справа вверху и ввести свои учетные данные.</p></li>
  <li><p>Нажать пункт «<strong>Подписка</strong>».</p></li>
  <li><p>Выбрать вариант «<strong>Я хочу удалить аккаунт</strong>».</p></li>
  <li><p>Нажать «<strong>Удалить аккаунт</strong>».</p></li>
 </ol>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/dff/fea/679/dfffea679bd030916c18e855a9999bcd.png" alt="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование." width="1008" height="655">
  <figcaption>
   Автор (правообладатель): Spotify. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>Затем будет несколько экранов с вопросами, после чего вам на электронную почту придет письмо, в котором нужно будет нажать на ссылку и подтвердить удаление аккаунта. То есть, <strong>интерфейс Spotify спроектирован таким образом, чтобы как можно больше усложнить закрытие аккаунта</strong>.</p>
 <h3>«Заманить и подменить» (Reddit)</h3>
 <p><strong>Заманить и подменить</strong>: <a href="https://darkpatterns.org/types-of-dark-pattern.html"><u>вы хотите сделать одно, но вместо этого выполняете другое, нежелательное действие.</u></a></p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/710/510/046/7105100467fe8340a5c14422836219a1.gif" alt="Автор (правообладатель): Reddit. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Reddit. Условия лицензии и защиты авторского права: добросовестное использование." width="400" height="711">
  <figcaption>
   Автор (правообладатель): Reddit. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>Листая ленту Reddit, можно раскрывать изображения, нажимая на них. Однако <strong>в ленте Reddit есть множество «рекламных» записей</strong>, и если пользователь нажимает на картинку такой записи, <strong>вместо стандартного поведения (развертывание изображения) открывается какой-нибудь рекламный веб-сайт</strong>.</p>
 <h3>«Тараканья ловушка» (Instagram)</h3>
 <p>Instagram использует паттерн тараканьей ловушки не так, как Spotify: Instagram&nbsp;— мобильное приложение, но при этом удалить аккаунт из самого приложения невозможно. Пользователю понадобится браузер, что неоправданно усложняет процесс удаления аккаунта.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b9a/01a/c59/b9a01ac595736e7e291e818fd3a11492.png" alt="Выдержка из справочной документации Instagram" title="Выдержка из справочной документации Instagram" width="974" height="446">
  <figcaption>
   Выдержка из справочной документации Instagram
  </figcaption>
 </figure>
 <h3>Принудительное продолжение (Skillshare)</h3>
 <p><strong>Принудительное продолжение</strong>: когда бесплатная пробная версия сервиса заканчивается, с карты начинают списываться деньги&nbsp;— без каких-либо предупреждений. И отменить автоматическое продление будет нелегко.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9b8/1c5/690/9b81c569080b8322d867a64a070795d2.png" alt="Автор (правообладатель): Skillshare. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Skillshare. Условия лицензии и защиты авторского права: добросовестное использование." width="400" height="534">
  <figcaption>
   Автор (правообладатель): Skillshare. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>Skillshare использует один из самых распространенных в подписочных сервисах тёмных паттернов: <strong>чтобы воспользоваться бесплатной пробной версией, пользователь должен указать данные кредитной карты&nbsp;— и в результате становится должен, как только пробный период заканчивается.</strong> Отменить подписку можно в любой момент, даже до начала платного периода, однако многие компании не уведомляют должным образом о том, что будет взиматься плата&nbsp;— пока не станет слишком поздно.</p>
 <h3>Подтверждение с укором (Wish)</h3>
 <p><strong>Подтверждение с укором</strong>: пользователя стыдят за выбор, который он собирается сделать. Вариант отказа сформулирован таким образом, чтобы заставить пользователя отступить.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/07b/44e/478/07b44e478e1c7e0332eb28d7a447ed04.png" alt="Автор (правообладатель): Wish. Условия лицензии и защиты авторского права: добросовестное использование." title="Автор (правообладатель): Wish. Условия лицензии и защиты авторского права: добросовестное использование." width="1368" height="888">
  <figcaption>
   Автор (правообладатель): Wish. Условия лицензии и защиты авторского права: добросовестное использование.
  </figcaption>
 </figure>
 <p>При попытке отписаться от рассылки Wish появляется <strong>диалоговое окно с текстом, который сформулирован так, чтобы заставить пользователя почувствовать себя виноватым за то, что он уходит</strong>. Мало того, что в заголовке написано «Нам грустно, что вы уходите», так еще вместо нейтрального «Отписаться» нужно нажать «Я не люблю скидки».</p>
 <h3>Предотвращение сравнения цен (AliExpress)</h3>
 <p><strong>Предотвращение сравнения цен</strong>: продавец затрудняет сравнение цены одного товара с другим, что не дает принять обоснованное решение.</p>
 <p>AliExpress&nbsp;— это онлайн-сервис розничной торговли с большим ассортиментом товаров. На гифке ниже&nbsp;— результаты поиска набора кистей для макияжа.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/88a/bb1/00e/88abb100ea1994b584d4186d9db8164f.gif" width="360" height="640">
  <figcaption></figcaption>
 </figure>
 <p>На экране результатов поиска можно сравнить различные предложения. В этот момент в результатах отображаются конкретные цены. Но <strong>когда пользователь нажимает на сведения о товаре, вместо цены указывается только ценовой интервал</strong>. Чтобы увидеть окончательную цену товара, нужно выбрать количество, цвет и способ доставки. Такой способ отображения цен затрудняет сравнение различных товаров и принятие обоснованного решения.</p>
 <h3>Скрытые затраты (Broadway.com)</h3>
 <p><strong>Скрытые затраты</strong>: переходя к последнему этапу оформления заказа, вы обнаруживаете непредвиденные затраты&nbsp;— например, плату за доставку, налоги и&nbsp;т.&nbsp;д.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/0e5/07c/94c/0e507c94c59049432bdab92c74c7d2ca.gif" width="400" height="711">
  <figcaption></figcaption>
 </figure>
 <p>На скриншоте выше показано, что при выборе мест отображается цена в 59,50&nbsp;доллара за каждое. Однако <strong>на этапе оформления заказа за каждый билет взимаются дополнительно 14,88&nbsp;доллара за обслуживание и обработку заказа, то есть цена внезапно увеличивается</strong>. Эта уловка часто используется на платформах по продаже билетов, из-за чего покупателям сложно предсказать, сколько придется потратить.</p>
 <h4>Об авторе</h4>
 <p><a href="https://www.instagram.com/marianas_dramas/"><u>Мариана Варгас</u></a>&nbsp;— UX-специалист и певица из Лиссабона (Португалия). С ней можно связаться через <a href="https://www.linkedin.com/in/mariana-vargas/"><u>LinkedIn</u></a>.</p>
 <hr>
 <h4>О переводчике</h4>
 <p>Перевод статьи выполнен в Alconost.</p>
 <p>Alconost занимается <a href="https://alconost.com/ru/localization/games?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=ux-dark-patterns">локализацией игр</a>, <a href="https://alconost.com/ru/localization?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=ux-dark-patterns">приложений и сайтов</a> на 70 языков. Переводчики-носители языка, лингвистическое тестирование, облачная платформа с API, непрерывная локализация, менеджеры проектов 24/7, любые форматы строковых ресурсов.</p>
 <p>Мы также делаем <a href="https://alconost.com/ru/video-production?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=ux-dark-patterns">рекламные и обучающие видеоролики</a> — для сайтов, продающие, имиджевые, рекламные, обучающие, тизеры, эксплейнеры, трейлеры для Google Play и App Store.</p>
</div>', '2021-03-25 15:31:00', 'Тёмные паттерны в знакомых приложениях', 53, null, 5),
        (71, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Роскосмос <a href="https://tass.ru/kosmos/10990715" rel="noopener noreferrer nofollow">сообщил</a>, что все 36 британских спутников OneWeb, которые <a href="https://habr.com/ru/news/t/548844/" rel="noopener noreferrer nofollow">запустили</a> с космодрома Восточный на ракете «Союз-2.1б», успешно выведены на расчетные орбиты при помощи разгонного блока «Фрегат». </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c1f/d98/c1a/c1fd98c1ae8818be67e27dc24554acc5.jpg" width="800" height="533">
  <figcaption></figcaption>
 </figure>
 <p>Как подтвердили в госкорпорации, все параметры работы «Фрегата» были в норме. «Союз-2.1б» стартовал с Восточного сегодня в 05:47 мск. Выведение аппаратов на орбиты длилось около четырех часов. Спутники отделялись в несколько этапов. </p><iframe id="605c9fa095bc5d2dedbee1e4" src="https://embedd.srv.habr.com/iframe/605c9fa095bc5d2dedbee1e4" class="embed_video embed__content" allowfullscreen="true"></iframe>
 <p>Это второй по счету запуск аппаратов OneWeb с Восточного. Кроме того, это второй полностью коммерческий запуск с этого космодрома. </p>
 <p>Первые шесть спутников OneWeb вывели на орбиту с космодрома Куру на ракете «Союз-СТ» 28 февраля 2019 года. Запуск <a href="https://habr.com/ru/news/t/438378/" rel="noopener noreferrer nofollow">пришлось переносить</a> из-за проблем у верхней ступени «Фрегата». Вторую партию из 34 аппаратов <a href="https://habr.com/ru/news/t/487484/" rel="noopener noreferrer nofollow">запустили</a> с Байконура 7 февраля 2020 года. 21 марта прошлого года состоялся запуск еще 34 спутников. С Восточного партию из 36 спутников OneWeb впервые <a href="https://habr.com/ru/news/t/533886/" rel="noopener noreferrer nofollow">запустили</a> в декабре 2020 года. </p>
 <p>Всего компания собирается развернуть на околоземной орбите около 600 спутников. OneWeb уже <a href="https://habr.com/ru/news/t/538006/" rel="noopener noreferrer nofollow">получила</a> $400 млн от SoftBank и Hughes Network Systems на развертывание своей системы спутников. По договору с Arianespace <a href="https://habr.com/ru/news/t/520102/" rel="noopener noreferrer nofollow">предполагается</a> запуск 16 ракет «Союз» с космодромов Куру, Восточного и Байконура в 2020-2022 годах. </p>
</div>', '2021-03-25 17:36:00', 'Все запущенные на «Союзе» спутники OneWeb успешно вывели на расчетные орбиты', 0, null, 6),
        (72, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Нет, велосипед у меня конечно же был, да и сейчас никуда не делся, тот самый, что ни на есть ретро — отечественный ровесник корпорации Apple и одноименного ПК. Неубиваемая классика которая ежедневно возит меня в офис и обратно. Но речь, разумеется, пойдет не об этом железе, а о более позднем, но не менее именитом представителе компьютерной техники. Так вот, если вспомнить начальный период жизни(что уже дается с большим трудом), то за компьютер я сел раньше, чем пошел в ближайшую школу. Современным детям это наверняка покажется банальным, но в те времена даже простейший, спаянный на коленке отцом-инженером <a href="https://ru.wikipedia.org/wiki/%D0%98%D1%80%D0%B8%D1%88%D0%B0_(%D0%BA%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80)" rel="nofollow noopener noreferrer">клон Ириши</a> казался необъяснимым чудом техники. Шло время, постепенно компьютеры в доме становились более продвинутыми, но в основном такими же самопальными. Это конечно позволяло прокачивать навыки и экономить средства, но вот вкусить все прелести брендового десктопа «белой сборки» мне, к сожалению, тогда не довелось. Поэтому, когда намедни предоставился случай наверстать упущенное, я естественно не преминул этим воспользоваться.
 <br> <a name="habracut"></a>
 <br> Итак, попал он ко мне в, на первый взгляд, хорошем состоянии и относительно полной комплектации, в составе системника Dell Optiplex GXa, «народного» моника Samsung SyncMaster 3Ne и мышки с клавиатурой, корпоративный стикер на обороте которой недвусмысленно намекал на успешную карьеру данного экземпляра.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/mz/k1/2b/mzk12bdzjre0zwokxg-7pocby3s.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/hc/qc/5u/hcqc5uuzwwlvuyubvbwkpujwamm.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/u1/by/2c/u1by2cxbglqvbysr0c6x-dglmus.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/r6/tx/nx/r6txnxawdzslues4p4ymxw8v6ia.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/rp/lu/ck/rpluckjjfjvxsups3ic225nbqwa.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/3e/a8/am/3ea8amdkem5rtuur4_ap9miwdve.jpeg">
 <br> 
 <br> Понадеявшись на не оставлявшее желать лучшего качество изготовления нажал на кнопку включения и компьютер загудев и заморгав индикаторами явил на экране картинку POST screen c приглашением зайти в BIOS.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/l1/ix/cl/l1ixcl2rmhf5llr52lu2empum7g.jpeg">
 <br> 
 <br> Попав туда, начал изучать скромные настройки, обратив внимание на не очень свежую версию прошивки и только два мегабайта памяти интегрированной видеокарты. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ns/hv/pf/nshvpf7rnvqierl9bbojxwjhgaa.jpeg">
 <br> 
 <br> Уже даже был морально готов экспроприировать дополнительную у имеющейся AGP версии, но этого, к счастью, не понадобилось.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/4u/ub/ze/4uubze9xusurrbqttxzyv8kdaq0.jpeg">
 <br> 
 <br> А еще привлекли внимание странно себя ведущие часы, отчего этот гость из прошлого напомнил пошедшую вразнос Time machine из какого-нибудь научно-фантастического фильма. 
 <br> 
 <br> 
 <div class="oembed">
  <iframe allowfullscreen id="605df73e95bc5d2dedbee1e7" src="https://embedd.srv.habr.com/iframe/605df73e95bc5d2dedbee1e7"></iframe>
 </div>
 <br> Впрочем, замена севшей в ноль батарейки вернула девайс в текущий временной континуум, для чего понадобилось забраться внутрь, благо корпус традиционно открывается одним легким движением. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/fo/ee/se/foeese1wsnrzebu-vi8jkpvpvkq.jpeg">
 <br> 
 <br> Под крышкой представилось малоприятное зрелище наводящее на мысль, что последний раз компьютер вскрывался еще на заводе.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ed/wm/ty/edwmtyan2o4uodjkiqa9shfhomi.jpeg">
 <br> 
 <br> Зато комплектующие превзошли ожидания. Под слоем пыли обнаружились процессор Intel Pentium II на ядре Klamath с вычурным радиатором, две линейки оперативки, и даже планка SGRAM не работавшая ранее по причине плохого контакта в разъеме.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/co/sh/u5/coshu5elsbi4reixisytryrj730.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/un/h4/k2/unh4k2y3-v-wshw2onqqvxlzxoq.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/or/h6/iz/orh6izcv-4fgjjfnnv1nepgi5fk.jpeg">
 <br> 
 <br> Ну и остальные стандартные для того времени компоненты ЭВМ.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ks/ef/bm/ksefbmcpkivgkt9r0o4zeu4rsxu.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/6c/j7/zw/6cj7zwpy41dtvlbnd0twxnfqiw8.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/d3/50/5g/d3505gnoyvwmzppdagjicltj4mc.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/qz/u1/z4/qzu1z4rbdlwm34wusgdoaw0a3e0.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/w9/30/ry/w930rylouklyjwzzih37hqoorai.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/jf/zs/9a/jfzs9a80l6cq8ltvnkat9x3f-lw.jpeg">
 <br> 
 <br> Для установки дополнительных компонентов присутствует угловой комборайзер на четыре слота, увы ничем не занятый.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ko/hg/ov/kohgovz2ascz-xticxtbouscyyk.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wi/jp/z7/wijpz7lezp9w3rviiuin2jajpwk.jpeg">
 <br> 
 <br> Что особо порадовало, оба кулера и в БП и на CPU c температурной регулировкой оборотов, поэтому без нагрузки самый громкий компонент системы это HDD на 3.2Гб, с которого я и попытался загрузиться.
 <br> Однако удалось это не в полной мере, немного пошуршав винтом система вышла в широко известный файловый менеджер.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/mw/kk/td/mwkktdxa4yjq9y2qyodh7g7mgok.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/op/pq/lc/oppqlcrtxitpqqpcfchye6s7b6g.jpeg">
 <br> 
 <br> А дальнейший процесс застопорился при старте графической оболочки 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ls/hm/lt/lshmlttiooqkwdycp0y_3byrjvk.jpeg">
 <br> 
 <br> из чего стало ясно, что диск устал больше, чем сотоварищи и надо его лечить, а то и менять.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/qy/99/me/qy99me6_l41sshvw6simllftesk.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/br/ld/wk/brldwkg3dp1q9cwddkx_if21wko.jpeg">
 <br> 
 <br> Сидюк в отличии от, оказался вполне работоспособным и влет стартовал мне загрузочный CD c которого через PLOP запустил необходимый софт с реанимационной флэшки.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ab/vn/zp/abvnzp6wej5iodx7m9owmcuduni.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/9h/hq/k6/9hhqk67zdvyktf7-rmfgkvavmqm.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wg/yx/re/wgyxre4sjbrobgdmpyice1cbdk0.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/8k/gp/5i/8kgp5iu_sycqfp1deg2g_rcmkz0.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/oy/7r/ur/oy7rurcuodikquxbfol6s7tvrmi.jpeg">
 <br> 
 <br> Но так как тесты показали, что еще не все потеряно, единственный дефект был успешно заремаплен с помощью MHDD.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ce/qs/af/ceqsafzu727_fl0pmatynmz0q-0.jpeg">
 <br> 
 <br> После чего Windows предстала во всей красе, которая правда не вполне соответствовала эталону.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/6k/dw/ak/6kdwakqjsbtwedpfs11ncd0ovhe.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/iy/du/bi/iydubiycchor1ucwo8zwlotdzh8.jpeg">
 <br> 
 <br> Дело оказалось в неправильном драйвере видеокарты, переустановив который лицезрел рабочий стол с красивыми обоями, чему способствовал более чем приличный запас яркости электронно-лучевой трубки дисплея.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/mj/6s/ol/mj6soltimzqo-nugzcj4vo3-x3c.jpeg">
 <br> 
 <br> А в системе обнаружился типичный набор софта и контента той эпохи.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/w7/sn/dn/w7sndn6swzttgq3o-0pd1aab1pk.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/3t/sb/s8/3tsbs8wsgsiujhcfll30qd_k1ts.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/kx/dn/xj/kxdnxjmmlhsg9ryaklo9uoozw0m.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/lm/ma/ds/lmmadsksjngsnq7ukd-xfjvfgaq.jpeg">
 <br> 
 <br> Что ж, с чувством глубокого удовлетворения выключаю системник. Впереди еще достаточно работы по доведению его до идеала: отбеливания, тестирования, тонкой настройки. Ведь, к чести производителя, поддержка данной модели до сих пор <a href="https://www.dell.com/support/home/ru-ua/product-support/product/optiplex-gxa/drivers" rel="nofollow noopener noreferrer">присутствует на сайте</a>.
 <br> 
 <br> И пускай этот «велосипед» изобрели давным-давно, но сделали это настолько хорошо, что удовольствие от использования он дарит даже сейчас.
</div>', '2021-03-26 18:23:00', 'Если у вас в детстве не было велосипеда…', 9, null, 2),
        (73, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Одни из самых интересных задач в работе администратора приложений, на мой взгляд, это осуществление миграции данных при переходе на новую систему. Сегодня я хочу поделится собственным опытом переноса данных с не очень известной helpdesk системы VisionFlow в более известную систему ServiceNow.</p>
 <h4>Что хотел заказчик</h4>
 <ul>
  <li><p>Перенести все данные из VisionFlow в ServiceNow с сохранением даты регистрации / закрытия тикетов</p></li>
  <li><p>Перенести всю историю переписки по каждому тикету (достаточно было объединить все комментарии в один тред, но мы пошли чуть дальше)</p></li>
  <li><p>Перенести все прикреплённые к тикетам файлы</p></li>
 </ul>
 <h4>Что мы имели</h4>
 <ul>
  <li><p>Серверную версию Helpdesk системы VisionFlow развёрнутую на виртуальной линукс машине с БД MySQL для хранения данных.</p></li>
  <li><p>ServiceNow инстанс, с подготовленной заранее таблицей для заказчика.</p><p>На данном этапе были обговорены все нюансы, такие как:</p></li>
  <li><p>Статусная модель</p></li>
  <li><p>Требуемые поля</p></li>
  <li><p>Логика автоматического назначения тикетов на исполнителя</p></li>
  <li><p>Данные требующие переноса</p></li>
 </ul>
 <h4>Перенос данных</h4>
 <p>ServiceNow позволяет использовать excel файлы в качестве ресурса для импорта данных. Не буду подробно расписывать процесс импорта данных в систему (процесс неплохо описан в документации к продукту), но в общих чертах он выглядит так:</p>
 <details class="spoiler">
  <summary>Импорт данных</summary>
  <div class="spoiler__content">
   <p>Transform map позволяет нам задать ключевое поле, по которому система будет понимать, что запись с данными параметрами уже присутствует в таблице и требуется только обновление полей</p>
  </div>
 </details>
 <p>Так как было решено использовать xlsx файл в качестве источника данных, файл требовалось подготовить. Требуемые данные VisionFlow хранит в разных таблицах своей базы данных. Для получения данных был написан запрос к БД:</p>
 <details class="spoiler">
  <summary>Запрос данных по тикетам в VisionFlow</summary>
  <div class="spoiler__content">
   <pre><code class="sql">SELECT
	projectissue.projectIssueId,
	projectissue.ticketId as ''Number'',
    reporter.email as ''Reporter'',
    projectissue.name as ''Short Description'',
    projectissue.Description as ''Description'',
    projectissue.companycustomfield15 as ''Product'',
    projectissue.companycustomfield13 as ''Document'',
    issuestatus.name as ''Status'',
    assignee.name as ''Assignee'',
    ADDTIME(projectissue.CreateDate, ''-01:00'') as ''Created'',
    ADDTIME(projectissue.completionDate, ''-01:00'') as ''Closed'',
    issuehistory.EventText as ''Comment'',
    author.name as ''commentAuthor''
FROM
	projectissue
INNER JOIN issuestatus
    ON projectissue.IssueStatusId = issuestatus.IssueStatusId
INNER JOIN systemuser assignee
	ON projectissue.ResponsibleSystemUserId = assignee.SystemUserId
INNER JOIN systemuser reporter
	ON projectissue.CreatedBySystemUserId = reporter.SystemUserId
INNER JOIN issuehistory ON
	issuehistory.ProjectIssueId = projectissue.ProjectIssueId
INNER JOIN systemuser author 
	ON issuehistory.SystemUserId = author.SystemUserId
WHERE
	projectissue.ProjectId = 54 AND (issuehistory.IssueEventTypeId = 5 OR issuehistory.IssueEventTypeId = 10 OR issuehistory.IssueEventTypeId = 2)
    #projectissue.ProjectId = 54
ORDER BY projectissue.TicketId ASC, issuehistory.EventDate ASC</code></pre>
  </div>
 </details>
 <p>Выполнение запроса позволило нам получить данные по всем тикетам из определённого проекта, включая историю комментариев по каждому отдельному элементу, с сохранением авторства и даты добавления. Вторым шагом данные были выгружены в JSON и залиты в Excel документ. После загрузки документа в ServiceNow в качестве Data Source была проведена обработка записей и создание / обновление тикетов в системе. </p>
 <p><strong><em>Результат:</em> </strong>В системе ServiceNow зарегистрированы все записи из VisionFlow, включая дату открытия и закрытия тикетов, комментариев (и их авторов) с соблюдением исходного порядка и всех ключевых полей. Т.к. таблица на момент переноса была пуста, проблем с подменой даты создания тикетов не возникло (ничего такого, чтобы могло повлиять на нумерацию).</p>
 <h4>Перенос вложений</h4>
 <p>Если первая часть миграции (требующая переноса исключительно текстовой информации) не потребовала больших усилий, то над переносом вложений пришлось попотеть. Сначала требовалось выяснить, а как VisionFlow, собственно, эти аттачи хранит.</p>
 <p>Выполняем запрос к БД для получения всех данных по вложениям переносимого проекта:</p>
 <details class="spoiler">
  <summary>Запрос к БД VisionFlow</summary>
  <div class="spoiler__content">
   <pre><code class="sql">SELECT 
	document.documentId,
	document.name,
    document.FullPath,
	SUBSTRING_INDEX(SUBSTRING_INDEX(document.FullPath, ''/'', -2), ''/'', 1) as ''projectIssueId'',
    projectissue.ticketId as ''Number''
 FROM 
	visionflow.document
 INNER JOIN projectissue
 ON projectissue.ProjectIssueId = SUBSTRING_INDEX(SUBSTRING_INDEX(document.FullPath, ''/'', -2), ''/'', 1)
 WHERE 
	document.FullPath like ''%/54/issuedocuments/%''
ORDER BY projectissueid</code></pre>
  </div>
 </details>
 <p>Данный запрос позволил нам получить информацию о том, как и где VisionFlow хранит вложения. К нашему счастью, оказалось, что VF создаёт отдельную папку для каждого проекта, в которой создаёт набор папок для тикетов, в которых вложения присутствуют. Папки имеют в качестве названия issueId, позволяющее однозначно идентифицировать принадлежность к тикету. Собственно, запрос выше позволят нам получить наименование папки, в которой лежит вложение и TicketId (его мы использовали для переноса данных в ServiceNow).</p>
 <p>Выгрузив архив с вложениями, встал вопрос о сопоставлении файлов с тикетами в ServiceNow и их проливке в систему. Т.к. я недавно начал изучать Python, я подумал, что решение данной задачи будет неплохой практикой в языке. </p>
 <p>Для добавления вложений в ServiceNow было решено использовать API attachments. Для этого на стороне SN был создан endpoint для получения временного токена с доступами к нужной таблице. </p>
 <p>ServiceNow предоставляет code samples для их API. По документации мы видим, что нам потребуются следующие параметры для нашего запроса: </p>
 <blockquote>
  <p>file_name (Required) - имя добавляемого файла</p>
  <p>table_name (Required) - имя таблицы, в которой запись хранится </p>
  <p>table_sys_id (Required) - ID записи, в которую требуется добавить вложение </p>
  <p>Content-Type (Header) - mime type передаваемого контента</p>
 </blockquote>
 <p>Как мы видим, вложение имеет связку с sys_id записи, к которой он принадлежит ( как и в VisionFlow). Следовательно, нам достаточно переименовать папки, которые мы загрузили из VisionFlow в sys_id записей, к которым мы будем их крепить. Для этого был выгружен список sys_id + ticketId из ServiceNow + список issueId + ticketId из VisionFlow. С помощью VLOOKUP функции Excel списки были сопоставлены и создан новый список с полями:</p>
 <ul>
  <li><p>old_folder_name</p></li>
  <li><p>ticket_id</p></li>
  <li><p>new_folder_name</p></li>
 </ul>
 <p>На Python был написан скрипт для переименования папок и удаления тех, в которых не было найдено файлов (прогрессбар в данном случае был добавлен только для тренировки): </p>
 <details class="spoiler">
  <summary>Переименование папок</summary>
  <div class="spoiler__content">
   <pre><code class="python">import pandas as pd, os 
from tqdm import tqdm

def renameFolders():
    df = pd.read_csv(''/Downloads/folder_rename.csv'')
    pbar = tqdm(total=len(df))

    for _ , row in df.iterrows():
        old_name = row[''old_folder_name'']
        new_name = row[''new_folder_name'']
        try:
            os.rename(f''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/{old_name}'', f''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/{new_name}'')
            pbar.update(1)
        except:
            pbar.update(1)

def removeEmptyFolders():
    folder_list = os.listdir(''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/'')
    for folder in folder_list:
        path = f''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/{folder}''
        try:
            os.rmdir(path)
        except:
            if len(os.path.basename(path)) &lt; 6 and os.path.basename(path) != ''nan'':
                print(f''ServiceNow SysId not found for item: {os.path.basename(path)}'')

renameFolders()
removeEmptyFolders()</code></pre>
  </div>
 </details>
 <p>Не буду расписывать скрипт для заливки вложений, опишу лишь несколько моментов:</p>
 <ul>
  <li><p>В скрипт добавлена проверка размера вложений, для того, чтобы отсеять всё то, что имеет вес менее 3000 kb (различные иконки, картинки из подписей и другой мусор) <em>def getSize()</em></p></li>
  <li><p>Добавлен метод для удаления дубликатов аттачей. В VisionFlow каждое повторно пересылаемое вложение создавало новый файл документа <em>def removeDuplicates()</em></p></li>
  <li><p>Добавлена обработка файлов с mime типом None. По какой-то причине mimetypes не возвращает типы для формата *msg, *txt, *eml</p></li>
  <li><p>Реализован финальный лог по операциями на основе ответов от сервера</p></li>
  <li><p>Ну и последнее (но мне, как любителю всё смотреть визуально, не менее важное) - прогрессбар для отслеживания процесса загрузки</p></li>
 </ul>
 <details class="spoiler">
  <summary>Финальный скрипт</summary>
  <div class="spoiler__content">
   <pre><code class="python">import os, glob, filetype, requests, mimetypes
from tqdm import tqdm
import pandas as pd

def number_of_files():
    files_number = 0

    folder_list = os.listdir(''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/'')
    for folder in folder_list:
       files_number += len(os.listdir(f''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/{folder}/''))
    return files_number

#Progress Bar
pbar = tqdm(total=1297)
log_messages_status = []
log_messages_filepath = []
log_messages_filename = []
log_messages_target = []

def uploadAllFiles(folder_name):
    #Variables
    entire_list = glob.glob(f''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/{folder_name}/*'')
    my_list_updated = []

    #Get Files Size
    def getSize(fileobject):
        fileobject.seek(0,2)
        size = fileobject.tell()
        return size

    #Upload Files
    def uploadFunc(filename, sys_id, path_to_file, content_type):

        url = f''https://instance.service-now.com/api/now/attachment/file?file_name={filename}&amp;table_name=table_name&amp;table_sys_id={sys_id}''
        payload=open(path_to_file, ''rb'').read()
        headers = {
            ''Accept'': ''application/json'',
            ''Authorization'': ''Bearer '',
            ''Content-Type'': content_type,
            }
            
        response = requests.request("POST", url, headers=headers, data=payload)
        if response.status_code == 201:
            #print(f''Success: {filename} was uploaded to the incident with sys_id {sys_id}'')
            pbar.update(1)
            log_messages_status.append(''Success'')
            log_messages_filename.append(filename)
            log_messages_filepath.append(path_to_file)
            log_messages_target.append(sys_id)
        else:
            pbar.update(1)
            #print(f''Error: {filename} was not uploaded to the incident with sys_id {sys_id}'')
            log_messages_status.append(''Error'')
            log_messages_filename.append(filename)
            log_messages_filepath.append(path_to_file)
            log_messages_target.append(sys_id)

    #Remove Duplicates
    def removeDuplicatesByName(list_of_elements):
        list_of_elements.sort()
        if len(list_of_elements) &gt; 1:
            for item in list_of_elements:
                item_to_compare = item.split(''.'')[0]
                for element in list_of_elements:
                    if item_to_compare in element:
                        entire_list.remove(element)
                    else:
                        pass
            return list_of_elements
        else:
            return list_of_elements

    my_list = removeDuplicatesByName(entire_list)

    for item in my_list:
        file_size = open(item, ''rb'')
        if getSize(file_size) &gt; 3000:
            my_list_updated.append(item)
        else:
            pass

    for attach in my_list_updated:
        kind = filetype.guess_mime(attach)

        if kind != None:
            uploadFunc(os.path.basename(attach), os.path.dirname(attach).split(''/'')[-1], attach, kind)
        elif kind == None and attach.split(''.'')[-1] == ''txt'':
            uploadFunc(os.path.basename(attach), os.path.dirname(attach).split(''/'')[-1], attach, ''text/plain'')
        else:
            uploadFunc(os.path.basename(attach), os.path.dirname(attach).split(''/'')[-1], attach, ''application/octet-stream'')
        

def getFolders():
    folder_list = os.listdir(''/Downloads/home/tomcat/vflowdocs/54/issuedocuments/'')
    for folder in folder_list:
        if folder != ''.DS_Store'':
            uploadAllFiles(folder)
            

getFolders()
data_to_write = pd.DataFrame({
    ''status'': log_messages_status,
    ''file_name'' : log_messages_filename,
    ''file_path'' : log_messages_filepath,
    ''target'' : log_messages_target
})
data_to_write.to_csv(''/Downloads/results_log.csv'')
</code></pre>
  </div>
 </details>
 <h4>Заключение</h4>
 <p>У нас было 2 пакетика….©. У нас было 6000 тысяч записей к переносу (не так много, старая система работала не долго), 2000 вложений и немного времени. Процесс подготовки занял у меня около 14 часов (изучение, попытки и т.д.) неспешной работы, а процесс переноса занимает около 30 минут суммарно. </p>
 <p>Конечно, можно было бы многое улучшить, полностью автоматизировать процесс (начиная с выгрузки данных, заканчивая их проливкой), но, к сожалению, данная задача одноразовая. Было интересно попробовать Python для реализации проекта, и могу сказать, что с такой задачей он помог справится на ура.</p>
 <p>В конечном счёте, основная задача переезда - сделать это максимально незаметно для заказчика, что и было сделано с моей стороны. </p>
</div>', '2021-03-28 22:42:00', 'Перенос данных из VisionFlow в ServiceNow', 40, null, 7),
        (74, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/jm/cz/ml/jmczmlsnbjcov6_fo7kqzozsj30.jpeg">
 <br> 
 <br> 29 марта 2021 года «Тинькофф банк» подал в Арбитражный суд Москвы иск к МТС на 1,1 млрд рублей. Исковое заявление <a href="https://kad.arbitr.ru/Card/8c4c9ca3-b884-4bc6-bb4b-58f07d7b9ab5" rel="nofollow noopener noreferrer">заведено</a> в картотеке арбитражных дел. Третьим лицом в судебном споре между «Тинькофф банк» и МТС выступает Федеральная антимонопольная служба (ФАС).
 <br> <a name="habracut"></a>
 <br> Согласно тексту искового заявления, «Тинькофф банк» обвинил МТС в злоупотреблении «доминирующим положением путём установления и поддержания монопольно высокой цены на услуги SMS-рассылки, а также создания дискриминационных условий».
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/9k/r7/zk/9kr7zkmjrqhhgi2mcxlqojvbvti.jpeg"> <i>Первый лист <a href="https://t.me/ruarbitr/3854" rel="nofollow noopener noreferrer">искового заявления</a>.</i>
 <br> 
 <br> По <a href="https://www.forbes.ru/newsroom/finansy-i-investicii/424811-tinkoff-bank-podal-isk-k-mts-na-11-mlrd-rubley" rel="nofollow noopener noreferrer">информации</a> Forbes, МТС не согласна с исковыми требованиями банка и намерена отстаивать свою позицию.
 <br> 
 <br> В мае 2019 года ФАС <a href="https://fas.gov.ru/publications/20453" rel="nofollow noopener noreferrer">признала</a>, что сотовые операторы МТС, «Т2 Мобайл» (Tele2) и «Вымпелком» («Билайн») нарушили закон о защите конкуренции. Фактически стоимость их услуг для организаций была в 10 раз выше, чем стоимость аналогичных услуг для организаций с госучастием в капитале. Это создавало дискриминационные условия и противоречило антимонопольному законодательству. Кроме того, ФАС определила, что операторы установили монопольно высокие цены на услугу СМС-рассылки. Ведомство выдало операторам связи предписания, в связи с которыми они должны были снизить тарифы. 
 <br> 
 <br> Представитель «Тинькофф Банка» <a href="https://t.me/ruarbitr/3854" rel="nofollow noopener noreferrer">уточнил</a>, что МТС «длительное время не исполняло предписание ФАС о прекращении нарушений антимонопольного законодательства», а по некоторым тарифам СМС-рассылок стоимость услуг оператора даже увеличивалась.
 <br> 
 <br> По тексту иска, банк оценил в один миллиард рублей свои убытки от установления и поддержания монопольно высоких тарифов на СМС-рассылки. Еще около ста миллионов рублей в заявление банка составляют требования о взыскании процентов за пользование чужими денежными средствами.
 <br> 
 <br> «Тинькофф банк» <a href="https://www.interfax.ru/business/758458" rel="nofollow noopener noreferrer">пояснил</a> «Интерфакс», что в ближайшее время кредитная организация подаст аналогичные иски против остальных операторов из «большой четверки». Сумму по этим искам он не озвучил.
</div>', '2021-03-29 21:55:00', '«Тинькофф банк» подал иск к МТС на 1,1 млрд рублей', 38, null, 4),
        (75, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Привет, Хабр! Меня зовут Алексей Новиков, уже 5 лет я занимаюсь информационным моделированием систем электроснабжения в компании STEP LOGIC. &nbsp;</p>
 <p>Раньше основной ценностью работы проектировщика был комплект чертежей, сейчас – это информационная модель, которая является продуктом не конкретного сотрудника, а целой команды. Мы неоднократно сталкивались с ситуациями, когда из-за разного подхода к проектированию информационная модель превращалась в простой набор геометрических форм, параметры и связи в котором были понятны лишь одному проектировщику. Всё это усложняло командную работу. Мы раз за разом задавались вопросом: как сделать процесс проектирования прозрачным для всей команды, а результат более прогнозируемым? Так родилась идея создания системы проектирования электроснабжения, которая должна автоматизировать рутинные процессы и упростить внесение изменений в проект, а значит и нашу жизнь. Выигрывает от этого и заказчик: время подготовки проекта сокращается, а на выходе получается более качественный продукт.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/596/b23/66e/596b2366e610698791ac2d580502a53f.png" width="1364" height="729">
  <figcaption></figcaption>
 </figure>
 <p>Изначально для проектирования зданий использовались бумага и кульман. Переход от плоских чертежей к трехмерным стал возможен с появлением и развитием AutoCAD и подобных программ. А с ростом популярности Building Information Modeling (BIM) на рынке появился целый ряд технологий для создания информационных моделей зданий. &nbsp;</p>
 <p>Для работы я использую Autodesk Revit, который занимает большую нишу. Проектирование в Revit сильно отличается от того же AutoCAD, в котором можно за несколько дней научиться рисовать линии и ставить размер. С Revit это не работает. Здесь нужен другой подход, моделирование осуществляется элементами – экземплярами семейств, которые изначально надо создать. </p>
 <p>Помимо геометрии, их наделяют набором физических параметров: масса, мощность, сопротивление и т.д. Затем созданные элементы размещаются в пространстве, объединяются в системы и после выполнения соответствующих расчетов можно получить чертежи однолинейных схем, длины и сечения кабелей, значения освещенности помещений, зоны молниезащиты, токи короткого замыкания и другую информацию. </p>
 <p>В результате мы имеем максимально наполненную информационную модель – базу данных с элементами, их параметрами и зависимостями, правильно используя которую можно сформировать всю необходимую документацию: начиная от планов и однолинейных схем и заканчивая спецификациями и заданиями для смежных отделов. Можно сказать, что мы создаем прототип цифрового двойника объекта.&nbsp;Следующий шаг после создания модели – оптимизация ее систем и элементов для принятия наиболее правильных проектных и эксплуатационных решений. </p>
 <p>Но, как и другие аналогичные программы в первую очередь Revit заточен под архитектурную и строительную часть проектов, <s>так как они занимают львиную долю всех бюджетов</s>. Функционал же проектирования инженерных систем (которыми я и занимаюсь) здесь во многом ограничен. Конечно, определенный набор инструментов в программе все же заложен, но для создания моделей слаботочных систем, электроснабжения, кондиционирования и вентиляции в полном объеме его явно недостаточно. Поэтому возникла идея создать дополнительный функционал для Revit.</p>
 <p>Чего не хватает:</p>
 <ol>
  <li><p>Расчетная часть программы минимальна и соответствует западным нормативам и стандартам. Более того, результаты расчетов зачастую неверны. Тестовые расчеты показали, что значения средней освещенности могут различаться на 20-30%. Для примера результаты расчетов для одного и того же помещения в Revit составили 653 лк, а в специализированном софте Dialux Evo - 496 лк.</p></li>
  <li><p>Возможности создания выходных документов сильно ограничены. Например, применять отображение однолинейных электрических схем из Revit можно исключительно от безысходности, так как создать его можно только в виде таблицы. Добавление дополнительных аппаратов или контактов здесь невозможно.</p></li>
  <li><p>Отсутствует возможность создания уникальной топологии схем инженерных систем. Например, нельзя создать и рассчитать схемы с АВР или кольцевые схемы. Но ведь именно с такими решениями приходится сталкиваться при проектировании сложных комплексных объектов. </p></li>
 </ol>
 <h3>С чего мы начинали работы по созданию плагинов для Revit</h3>
 <p>После тщательного анализа и выявления главных трудностей при проектировании инженерных систем в Revit, наша команда обратилась к уже разработанным плагинам. Их можно разделить на две большие группы. </p>
 <p><strong>Коммерческие плагины</strong>, например, достаточно популярный пакет MagiCAD для Revit или RChain. На начальных этапах работ мы рассматривали возможность применения коммерческих плагинов, но отказались от этой идеи, потому что: </p>
 <ul>
  <li><p>Плагины решают конкретный ограниченный набор задач. Поэтому их функционал необходимо было вписывать в общую концепцию системы проектирования. И получалось, что проще написать свой модуль, чем интегрировать сторонний. Все алгоритмы и процессы будут понятны в отличие от сторонних плагинов.</p></li>
  <li><p>Качество расчетов при тестировании вызывало ряд вопросов, не всегда хватало глубины проработки расчетной части.</p></li>
  <li><p>Отсутствовала возможность кастомизации. Например, после генерации однолинейной схемы невозможно добавить в цепь независимый расцепитель, контактор или другое дополнительное оборудование.</p></li>
  <li><p>Недостаточная интеграция с информационной моделью. </p></li>
 </ul>
 <p><strong>Плагины от вендоров</strong> (Schneider-Electric, Siemens, ДКС), функционал которых заточен под применение конкретного оборудования. Некоторые из них довольно удобны в применении, но, к сожалению, все они идут в привязке к вендору. То есть, грубо говоря, возможности перейти в проекте на оборудование другого производителя без внешних доработок там нет. </p>
 <figure class="bordered full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f73/f2d/369/f73f2d3694d8db6368d367124cab6da5.png" alt="Рис.1. Плагин Bim Electrical Design от Schneider Electric обладает отличным модулем по расчету токов нагрузки. Но здесь мы можем производить расчеты только для оборудования SE." title="Рис.1. Плагин Bim Electrical Design от Schneider Electric обладает отличным модулем по расчету токов нагрузки. Но здесь мы можем производить расчеты только для оборудования SE." width="866" height="650">
  <figcaption>
   Рис.1. Плагин Bim Electrical Design от Schneider Electric обладает отличным модулем по расчету токов нагрузки. Но здесь мы можем производить расчеты только для оборудования SE.
  </figcaption>
 </figure>
 <p>После анализа стало ясно, что под наши задачи необходимо создать собственную систему проектирования электроснабжения, включающую функционал Revit, плагины сторонних производителей (вендоров) и наши собственные разработки. Чтобы при совершении определенного набора действий мы могли получить понятный, предсказуемый и быстрый результат.</p>
 <h3>Проектирование первых плагинов </h3>
 <p>Подробный процесс создания плагинов опишу на примере разработки функционала связи Revit с Dialux Evo.</p>
 <p>Как я уже говорил выше, встроенный функционал Revit позволяет рассчитывать освещенность пространств, но проведённое тестирование показала крайне низкую точность этих расчетов. А вот Dialux Evo считается одним из самых передовых софтов в этой сфере. Для повышения точности в наших проектах мы решили провести взаимную интеграцию между Revit и Dialux Evo. В идеале хотелось получить полноценную двустороннюю связь между этими программными продуктами с минимальным набором промежуточных действий.</p>
 <p>В первую очередь мы поставили перед собой задачу автоматизировать передачу информации о модели из Revit в Dialux Evo. В Dialux Evo можно импортировать трехмерные модели в форматах .ifc и .stf. Несмотря на то, что в Revit &nbsp;есть собственный функционал по созданию файла .ifc, мы остановились на генерировании файла .stf. Это было обусловлено следующими причинами:</p>
 <ol>
  <li><p> .stf в отличии от ifc передает данные не только о геометрии (пространствах), но и о светильниках. Таким образом мы можем передать в Dialux Evo координаты, углы поворота и типы светильников.</p></li>
  <li><p>На больших моделях (высотные здания) .stf гораздо удобнее, так как мы создаем только отметку уровня и не перегружаем расчетную модель избыточной информацией.</p></li>
 </ol>
 <p>Из минусов стоит отметить, что нам необходимо предварительно создать (или скопировать из внешнего файла АР) пространства, так как именно они в итоге будут передаваться в Dialux Evo.</p>
 <p>В результате было разработано два плагина по созданию файла .stf на основе выбранного уровня. &nbsp;</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e96/5cc/8f0/e965cc8f0d58802341c16aaf1adac70f.png" alt="Рис.2. В зависимости от этапа работ проектировщику предлагается сгенерировать файл .stf на основе только пространств или пространства плюс светильники." title="Рис.2. В зависимости от этапа работ проектировщику предлагается сгенерировать файл .stf на основе только пространств или пространства плюс светильники." width="451" height="256">
  <figcaption>
   Рис.2. В зависимости от этапа работ проектировщику предлагается сгенерировать файл .stf на основе только пространств или пространства плюс светильники.
  </figcaption>
 </figure>
 <p>Через генерирование файла .stf и импорт этого файла в Dialux Evo мы осуществили передачу информации о пространствах (геометрии) и светильниках (координаты, угол поворота, тип). </p>
 <p>Одной из основных сложностей при создании плагинов стала корректность передачи углов светильников. Мы разработали собственные алгоритмы конвертации углов при переходе из Revit в Dialux Evo и обратно, которые производят обработку более 60 различных вариантов размещения светильников в пространстве. Сейчас в нашей системе реализована возможность создания светильников на потолке, стенах, полу или же произвольно в пространстве под любым углом. </p>
 <p>Следующей задачей стала передача информации из Dialux Evo в Revit. Экспортировать из Dialux Evo можно файл формата .dwg. Он содержит блоки светильников и таблицы с данными об их типах и расчетных значениях освещенностей пространств. В блоках светильников находится информация о координатах и углах светильников, а принадлежность блока к слою указывает на тип светильника. Таким образом, сгенерированный в Dialux Evo файл .dwg, содержит всю необходимую нам информацию.</p>
 <p>В результате получаем плагин, который на основе .dwg файла создает светильники в модели Revit. Расставляет их на свои места с нужными углами и прописывает в пространства результаты расчетов из Dialux Evo.</p>
 <p>То есть двусторонняя интеграция Revit и Dialux Evo &nbsp;выглядит следующим образом: Revit - файл.stf – Dialux Evo - файл.dwg – Revit.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/041/1ff/df0/0411ffdf00542c275f1b96cbb31cb526.png" alt="Рис.3. Так модель выглядит в Revit" title="Рис.3. Так модель выглядит в Revit" width="1364" height="728">
  <figcaption>
   Рис.3. Так модель выглядит в Revit
  </figcaption>
 </figure>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/92f/1d7/32a/92f1d732af3c4849f01c3f78d6b96988.png" alt="Рис.4. Эта же модель в Dialux Evo" title="Рис.4. Эта же модель в Dialux Evo" width="1364" height="729">
  <figcaption>
   Рис.4. Эта же модель в Dialux Evo
  </figcaption>
 </figure>
 <p>В результате работы мы создали более 100 плагинов. Их основной функционал включает в себя:</p>
 <ol>
  <li><p> Анализ кабельных конструкций и раскладку кабелей</p></li>
  <li><p>Электротехнические расчеты и расчеты токов короткого замыкания</p></li>
  <li><p> Конфигурирование электрических щитов и построение однолинейных схем</p></li>
  <li><p>Построение структурной схемы системы электроснабжения всего объекта</p></li>
  <li><p>Интеграция между Revit и Dialux Evo</p></li>
  <li><p>Аналитика по заполнению кабельных лотков. Происходит построение разрезов лотка и расчет горючей массы кабелей в лотке.</p></li>
  <li><p> Создание таблиц и интеграция с Excel. В частности, происходит выгрузка полной спецификации ЭМ. И приведение спецификации к гостированному виду.</p></li>
  <li><p>Создание планов оборудования, распределительной и групповой сети, кабельных трасс и планов освещения</p></li>
  <li><p>Мониторинг параметров оборудования смежных разделов</p></li>
  <li><p> Расчет и построение зоны молниезащиты</p></li>
  <li><p>Расчет сопротивления заземляющего устройства</p></li>
  <li><p>Создание кабельных проходок</p></li>
 </ol>
 <h3>Как выглядит система проектирования электроснабжения </h3>
 <p>Для того, чтобы создать внешний вид системы электроснабжения, я представил свое понимание этого процесса в виде блок-схем. Через несколько итераций и упрощений родилось такое отображение.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/678/ade/77c/678ade77c7b049bee68e9e7d64647105.png" alt="Рис.5. Интерфейс системы проектирования электроснабжения" title="Рис.5. Интерфейс системы проектирования электроснабжения" width="1086" height="368">
  <figcaption>
   Рис.5. Интерфейс системы проектирования электроснабжения
  </figcaption>
 </figure>
 <p>По сути в этом интерфейсе расписан весь процесс, который проходят инженеры при проектировании объекта, разбитый на наиболее характерные этапы работ. </p>
 <p>В соответствующей вкладке можно получить наиболее полную информацию о выполняемых работах и инструментах. Здесь же размещается панель навигации и ссылки на все используемые на данном этапе работ плагины, где содержится информация об их функционале и соответствующий видеообзор. &nbsp;</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/002/b1e/960/002b1e960bbef47bdf699fb78ea6ea7a.png" alt="Рис.6. Так выглядит вкладка «Проведение электротехнических расчетов»" title="Рис.6. Так выглядит вкладка «Проведение электротехнических расчетов»" width="736" height="543">
  <figcaption>
   Рис.6. Так выглядит вкладка «Проведение электротехнических расчетов»
  </figcaption>
 </figure>
 <p>На основе разработанной системы проектирования электроснабжения инженер-электрик понимает всю процедуру, инструменты и шаги по созданию информационной модели, а инженеры-оформители получают информацию о том, как и с помощью какого функционала создавать выходные документы. То есть разработанный инструментарий позволяет нам на постоянной основе поддерживать высокое качество информационной модели.</p>
 <p>Переход от бумажных чертежей к проектированию в 2D, далее 3D и BIM требует смены инструментария. При наличии системы, пройдя соответствующее обучение на тестовых моделях в системе, проектировщик в короткий срок сможет понять всю процедуру проектирования и создания информационной модели.</p>
 <p>Из-за меняющихся нормативных документов и требований заказчиков систему проектирования необходимо постоянно развивать. Описание этого процесса можно проиллюстрировать с помощью цикла Деминга-Шухарта (PDCA – plan, do, check, act). С определенной периодичностью мы планируем и проводим изменения, а затем проверяем и актуализируем их. </p>
 <p>С помощью системы мы можем максимально грамотно внедрять лучшие практики, повышая уровень проектировщиков и проектирования в целом. Проектировщику больше не нужно заниматься рутинными процессами, высвобождается время для принятия наиболее обоснованных схемных или компоновочных решений. </p>
 <p>Если заглянуть на 5-10 лет вперед, то я вижу некоторое переформатирование роли проектировщика. Человек со стопкой ГОСТов и калькулятором превратится в своего рода «архитектора решений», задача которого – заполнение модели оборудованием, задание параметров и организация связи между этими элементами. А выбор кабелей, подбор коммутационных аппаратов, создание чертежей и многое другое будет выполняться автоматически.</p>
 <p>В заключение – минутный ролик, в котором мы собрали основной функционал нашей системы и показали, как его можно использовать при проектировании.</p><iframe id="606488afaa2e6ed27439fa59" src="https://embedd.srv.habr.com/iframe/606488afaa2e6ed27439fa59" class="embed_video embed__content" allowfullscreen="true"></iframe>
 <p>Остались вопросы – обязательно задавайте их в комментариях. </p>
</div>', '2021-04-01 11:18:00', '100 плагинов для Revit или как мы оптимизировали проектирование систем электроснабжения', 56, null, 9),
        (76, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 В наши дни чат-боты используются в самых разных сценариях взаимодействия с пользователями. Например, в службах поддержки клиентов различных компаний, о чём я уже <a href="https://dzone.com/articles/chatbot-for-customer-support">писала</a>. В этом материале я хочу рассказать о механизмах, которые используются в чат-ботах при поиске того, что нужно пользователю.
 <br> 
 <br> <a href="https://habr.com/ru/company/ruvds/blog/550200/"><img src="https://habrastorage.org/webt/ao/5w/qb/ao5wqboqdflsmi4by-i1w5glods.jpeg"></a>
 <br> 
 <br> Например, посетитель сайта что-то ищет и пользуется для этого чат-ботом, работающим на сайте или в мобильном приложении. Бот разбирает сообщение и, основываясь на имеющихся в нём ключевых словах, отвечает пользователю, выдавая ссылку на страницу с результатами поиска, среди которых пользователь может найти то, что ему нужно.
 <br> 
 <br> Бот, о котором пойдёт речь в этом материале, создан с использованием Java и Apache OpenNLP. Здесь мы поговорим о том, как боты разбирают сообщения пользователей, удаляя из них всё ненужное.
 <br> <a name="habracut"></a>
 <br> 
 <h2><font color="#3AC1EF">Удаление из сообщений ненужных символов</font></h2>
 <br> Когда пользователь общается с ботом, в сообщениях пользователя могут присутствовать ненужные символы. Поэтому, прежде чем бот сможет адекватно ответить, всё ненужное из сообщений пользователя нужно удалить.
 <br> 
 <br> Вот пример сообщения, которое пользователь отправил боту. В верхней части находится исходный текст, а в нижней — он же, но очищенный от ненужных символов.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/269/384/d75/269384d75dc0651fa7f89f515535c2cc.png">
 </div>
 <br> <i><font color="#999999">Исходное и обработанное сообщение</font></i>
 <br> 
 <br> В Java для удаления ненужных символов можно воспользоваться следующим регулярным выражением:
 <br> 
 <br> 
 <pre><code class="java">"[^\\\\w.,;:''\\"\\\\s]+"
</code></pre>
 <br> 
 <h2><font color="#3AC1EF">Токенизация текста в OpenNLP</font></h2>
 <br> После очистки текста от ненужных символов его нужно токенизировать с использованием соответствующих инструментов OpenNLP. В результате исходное предложение будет разбито на мелкие фрагменты (токены). Этот процесс и называют токенизацией. В целом можно сказать, что исходный необработанный текст токенизируется с опорой на набор символов-разделителей (это, в основном, пробелы). Токенизация используется при решении, например, следующих задач:
 <br> 
 <br> 
 <ul> 
  <li>Проверка правописания.</li> 
  <li>Выполнение поиска.</li> 
  <li>Идентификация частей речи.</li> 
  <li>Обнаружение предложений.</li> 
  <li>Классификация документов.</li> 
 </ul>
 <br> В следующем примере сначала выполняется обучение токенизатора с использованием классов <code>TokenizerMe</code> и <code>TokenizerModel</code>:
 <br> 
 <br> 
 <pre><code class="java">try (InputStream modelIn = new ByteArrayInputStream(Files.readAllBytes(tokeniserTrainingFile.get()))) {
&nbsp;&nbsp;this.tokenizer = new TokenizerME(new TokenizerModel(modelIn));
}
</code></pre>
 <br> Класс <code>TokenizerMe</code> преобразует исходный текст в набор токенов. Он, принимая решение о разделении текста на токены, пользуется показателем энтропии.
 <br> 
 <br> В машинном обучении энтропия — это мера неопределённости некоей системы (1 — полная определённость, 0 — полная неопределённость).
 <br> 
 <br> Затем выполняется токенизация текста:
 <br> 
 <br> 
 <pre><code class="java">private tokenizerMe;
final String[] tokenizedMessage = this.tokenizerMe.tokenize(RobotUtil.getOnlyValidCharacters(inputMessage));
</code></pre>
 <br> На следующем изображении показан результат токенизации сообщения.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/16b/ec9/a8b/16bec9a8b4c717c892a4bf8df6766d13.png">
 </div>
 <br> <i><font color="#999999">Результат токенизации сообщения</font></i>
 <br> 
 <br> После токенизации сообщения нужно определить тип токенов, понять, к каким частям речи они относятся, и убрать те из них, которые нам не нужны.
 <br> 
 <br> 
 <h2><font color="#3AC1EF">Выявление частей речи с использованием OpenNLP</font></h2>
 <br> Теперь нам нужно выяснить то, к какой части речи относится каждый из токенов. Узнать о том, что это: имя существительное, глагол, наречие, имя прилагательное. В OpenNLP для обозначения частей речи используются сокращения, приведённые в следующей таблице.
 <br> 
 <br> 
 <div class="scrollable-table">
  <table> 
   <tbody>
    <tr> 
     <td><strong>Сокращение</strong></td> 
     <td><strong>Часть речи</strong></td> 
    </tr> 
    <tr> 
     <td>NN</td> 
     <td>Имя существительное в единственном числе или неисчисляемое существительное</td> 
    </tr> 
    <tr> 
     <td>DT</td> 
     <td>Определяющее слово</td> 
    </tr> 
    <tr> 
     <td>VB</td> 
     <td>Глагол в базовой форме</td> 
    </tr> 
    <tr> 
     <td>VBD</td> 
     <td>Глагол в прошедшем времени</td> 
    </tr> 
    <tr> 
     <td>VBZ</td> 
     <td>Глагол в третьем лице единственного числа настоящего времени</td> 
    </tr> 
    <tr> 
     <td>IN</td> 
     <td>Предлог или подчинительный союз</td> 
    </tr> 
    <tr> 
     <td>NNP</td> 
     <td>Имя собственное в единственном числе</td> 
    </tr> 
    <tr> 
     <td>TO</td> 
     <td>to</td> 
    </tr> 
    <tr> 
     <td>JJ</td> 
     <td>Имя прилагательное</td> 
    </tr> 
   </tbody>
  </table>
 </div>
 <br> Вот код, в котором для выявления частей речи в тексте используется класс <code>POSTaggerME</code>:
 <br> 
 <br> 
 <pre><code class="java">private POSTaggerME ptagger;
try (InputStream modelIn = new ByteArrayInputStream(Files.readAllBytes(trainingFile.get()))) {
&nbsp;&nbsp;this.ptagger = new POSTaggerME(new POSModel(modelIn));
}
</code></pre>
 <br> Класс <code>POSTaggerME</code> используется для определения частей речи в исходном тексте. Он, при обработке текста, использует показатель энтропии.
 <br> 
 <br> 
 <pre><code class="java">final String[] tags = this.ptagger.tag(tokenizedMessage);
</code></pre>
 <br> После того, как выяснено то, к какой части речи относится каждый из токенов, мы убираем из текста всё ненужное.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/e47/e84/f4c/e47e84f4cca53f4dbd9dcc8848a7e3fc.png">
 </div>
 <br> <i><font color="#999999">Удаление ненужных токенов</font></i>
 <br> 
 <br> Нас в данном случае интересует имя прилагательное (JJ) и имя существительное (NN).
 <br> 
 <br> Теперь в нашем распоряжении оказываются ключевые слова. Бот, воспользовавшись ими, может выдать ссылку, позволяющую пользователю найти то, что ему нужно.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/getpro/habr/post_images/bc5/9f5/dae/bc59f5dae3734f5395c92bb4fcb338dd.png">
 </div>
 <br> <i><font color="#999999">Бот отвечает пользователю</font></i>
 <br> 
 <br> Применяются ли в ваших проектах чат-боты?
 <br> 
 <br> <a href="http://ruvds.com/ru-rub?utm_source=habr&amp;utm_medium=article&amp;utm_campaign=perevod&amp;utm_content=chat-bot#order"><img src="https://habrastorage.org/webt/ou/g5/kh/oug5kh6sjydt9llengsiebnp40w.png"></a>
</div>', '2021-04-04 13:10:00', 'Чат-бот для электронной коммерции', 53, null, 6),
        (77, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <h3>Аккумуляторные ячейки заряжаются при помощи расположенных на крыше солнечных панелей, и формируют сеть, обеспечивающую всё здание резервным энергопитанием, к которому можно подключаться в часы пиковой нагрузки</h3>
 <br> 
 <img src="https://habrastorage.org/webt/qn/yd/o1/qnydo1gpqlfkaivqmnu8ngfscxe.jpeg">
 <br> <i>Аккумулятор ecoLinx в апаратаментах Soleil Lofts в пригороде Солт-Лейк-Сити. Разрабатываемые аккумуляторные ячейки совместно формируют т.н. «виртуальную электростанцию»</i>
 <br> 
 <br> Строительная фирма Soleil Lofts, возводящая апартаменты в пригороде Солт-Лейк-Сити, заманивает в них потенциальных покупателей разными удобствами: там есть бассейны, три спа-салона, баскетбольная площадка, бытовая техника, место для выгула собак.
 <br> 
 <br> Однако более всего Майка Канненберга, менеджера по продажам из местной технологической компании, привлекло другое – тихая аккумуляторная батарея в красивом корпусе.
 <br> 
 <br> В апартаментах Канненберга, как и во всех остальных 600 жилых помещениях этого комплекса стоимостью в $156 млн, установлена новая аккумуляторная батарея ecoLinx производства немецкой компании Sonnen. Эти аккумуляторы размером примерно с водонагреватель заряжаются от солнечных батарей, установленных на крыше, и совместно формируют т.н. «виртуальную электростанцию». Эта система не только обеспечивает 12,6 МВт*ч резервной энергии всему зданию, но и облегчает использование возобновляемой энергии, получаемой прямо на месте.
 <br> <a name="habracut"></a>
 <br> Как сказал 38-летний Канненберг, «если я могу внести свой небольшой вклад в улучшение мира и очищение Юты, я сделаю это с удовольствием».
 <br> 
 <br> Развитие технологий производства аккумуляторов и солнечных панелей вместе со стремлением компаний расширять использование возобновляемой энергии привело к тому, что виртуальные электростанции становятся ценным дополнением для коммерческих и жилых помещений. Также этому способствует повышение спроса на более надёжные системы энергообеспечения, возникшее благодаря недавнему <a href="https://www.nytimes.com/2021/02/16/climate/texas-power-grid-failures.html" rel="nofollow noopener noreferrer">отказу энергосети в Техасе</a> и <a href="https://www.nytimes.com/2020/10/06/business/energy-environment/california-blackout-cause-report.html" rel="nofollow noopener noreferrer">постоянным отключениям электроэнергии в Калифорнии</a>, при помощи которых пытаются уменьшить ущерб от периодических пожаров.
 <br> 
 <br> Аккумуляторы пригодятся в зданиях всякого рода, включая университетские и корпоративные кампусы, сказал К.Р. Герро, вице-президент по инновациям национальной строительной компании Meritage Homes.
 <br> 
 <br> «В 80-х люди ставили себе солнечные панели, потому что хотели сделать что-то хорошее, — сказал он. – Сегодня установка таких систем из солнечных панелей и аккумуляторных батарей, как у Soleil, равнозначна размещению у себя на кухне банкомата, выдающего по $20 в месяц».
 <br> 
 <br> Всё больше водителей пересаживаются на электромобили, а владельцы недвижимости всё чаще понимают ценность генерации и хранения энергии на месте – особенно в таком месте, где может потребоваться заряжать десятки электромобилей одновременно.
 <br> 
 <br> Многие компании, особенно из энергетического сектора, видят потенциал виртуальных электростанций. Калифорнийский стартап OhmConnect планирует построить крупномасштабную систему подобного рода, <a href="https://www.fastcompany.com/90582902/a-100-million-investment-will-fund-the-largest-virtual-powerplant-in-the-u-s" rel="nofollow noopener noreferrer">получив</a> $100 млн от Sidewalk Infrastructure Partners (среди которых есть и Alphabet, родительская компания для Google). Лос-анджелесская Swell Energy <a href="https://www.greentechmedia.com/articles/read/swell-readies-up-to-450m-in-financing-for-solar-battery-virtual-power-plants" rel="nofollow noopener noreferrer">получила</a> $450 млн на создание домашней виртуальной электростанции, помогающей работе энергосети.
 <br> 
 <br> В Юте Soleil Lofts подписала первое подобное соглашение с энергокомпанией Rocky Mountain Power, по которому та может подключаться к этой сети аккумуляторов как к источнику питания. Соглашение позволяет системе сэкономить на стоимости генерации энергии, а девелоперам – на стоимости её внедрения. Так утверждает управляющая компания апартаментов Wasatch Group.
 <br> 
 <br> Директора Wasatch считают виртуальные электростанции доказательством того, что аккумуляторы – это умное вложение денег для владельцев недвижимости.
 <br> 
 <br> «Виртуальная электростанция обеспечивает постоянный доход и повышает привлекательность апартаментов для арендаторов», — сказал Райан Питерсон, президент Wasatch Guaranty Capital, занимающейся недвижимостью и инвестициями. «Одна из причин, по которым мы обращаемся к возобновляемой и солнечной энергии – она уменьшает операционные расходы и улучшает денежный поток, что очень важно для владельцев недвижимости».
 <br> 
 <br> Проект Soleil находится на сосредоточении нескольких тенденций: перехода к более чистой и возобновляемой энергии, быстро падающей стоимости аккумуляторов и хранения энергии, и старания девелоперов уменьшить влияние на окружающую среду. Согласно Boston Consulting Group, стоимость хранения энергии за последние 10 лет <a href="https://www.wsj.com/articles/the-battery-is-ready-to-power-the-world-11612551578" rel="nofollow noopener noreferrer">упала на 80%</a>.
 <br> 
 <br> За прошлый год хранилища энергии в США значительно выросли. По <a href="https://www.woodmac.com/research/products/power-and-renewables/us-energy-storage-monitor/?utm_campaign=pandr&amp;utm_medium=article&amp;utm_source=gtm&amp;utm_content=q4esm2020" rel="nofollow noopener noreferrer">данным</a> U.S. Energy Storage Monitor, в третьем квартале добавилось 476 МВт*ч, что на 240% больше по сравнению с предыдущим.
 <br> 
 <br> Однако ситуация ещё далека от энергосистемы, полностью работающей на возобновляемой энергии. В отчёте Калифорнийского университета в Беркли, изучающем переход на возобновляемую энергию, предполагается, что к 2035 году США потребуется хранилище в 150 ГВт*ч, чтобы содержание чистой энергии в энергосети достигло 90%.
 <br> 
 <br> «Мы достигли поворотного момента», — сказал Марк Дайсон, эксперт по чистой энергии из RMI, организации из Колорадо, занимающейся возобновляемыми источниками энергии. «Поскольку цены так сильно упали, особенно на аккумуляторы, ожидаю, что всё больший процент новых домов будет использовать эти технологии. Виртуальные электростанции – это самая дешёвое и ценное обновление из тех, что нужно сделать для энергосистемы США».
 <br> 
 <br> Потребление электричества зданиями в течение дня постоянно колеблется. Источники возобновляемой энергии и аккумуляторные батареи могут сгладить эти циклы, сохраняя энергию при минимальных нагрузках, и подключаясь к хранилищу в периоды больших нагрузок. Это должно снизить стоимость электроэнергии.
 <br> 
 <br> «В зданиях, где эффективно используется энергия, производится возобновляемая энергия и хранится энергия, готовая к использованию в нужный момент, заключена большая ценность», — сказал Герро.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/e73/40d/d64/e7340dd640f0da6cba8447a56f66d7b7.jpg">
 <br> <i>Солнечная энергия, накапливаемая в апартаментах Soleil Lofts, хранится в аккумуляторах, к которым может подключаться местный поставщик энергии, Rocky Mountain Power.</i>
 <br> 
 <br> У Meritage есть семь демонстрационных проектов по стране, в частности, в Аризоне, Калифорнии, Северной Каролине и Техасе. Компания пытается понять, как лучше оптимизировать энергосеть и уменьшить стоимость энергии. Герро считает, что в скором времени больше управляющих компаний воспользуются этой системой «сдвига нагрузки»,
 <br> 
 <br> Для компании Wasatch апартаменты Soleil Lofts обеспечивают как финансовые, так и маркетинговые преимущества. Потенциальных арендаторов привлечёт «зелёная» энергетика комплекса, а в перспективе стоимость энергии в нём будет ниже. По словам Питерсона, аккумуляторные батареи выигрывают по стоимости энергии у обычных зданий.
 <br> 
 <br> Wasatch начала исследовать возобновляемую энергию уже много лет назад, пытаясь снизить цены во всех своих жилых комплексах, насчитывающих порядка 20 000 апартаментов, а также в офисах, отелях и промышленных производствах. Экономии от одних только солнечных панелей не получалось, поэтому четыре года назад компания начала изучать работу комбинации из панелей и аккумуляторов. Wasatch сделала Soleil испытательным проектом, и наладила сотрудничество с Rocky Mountain Power и Sonnen, начав решать проблемы, связанные с устройством виртуальных электростанций.
 <br> 
 <br> Прошлой осенью апартаменты частично заработали, и с тех пор, по словам Питерсона, проект хранения энергии оправдал все ожидания. Система аккумуляторных батарей, обошедшаяся в $34 млн, из которых $3,3 покрыли гранты от Rocky Mountain Power, продаёт энергию обратно энергокомпании, чтобы покрыть периоды пиковой нагрузки. Питерсон говорит, что жители за счёт этого экономят 30-40% на стоимости электричества.
 <br> 
 <br> Подобные проекты становятся источниками энергии реального времени, говорит Уильям Комю, вице-президент по пользовательскому восприятию и инновациям в PacifiCorp, родительской компании для Rocky Mountain Power. Чтобы достичь к 2030 показателя в 60% возобновляемой энергии, Rocky Mountain Power нужно активно инвестировать в системы хранения, а также небольшие распределительные центры вроде Soleil. Он сказал, что падение цен на аккумуляторы будет открывать больше возможностей для расширения.
 <br> 
 <br> Другие девелоперы тоже организовывают хранилища энергии на аккумуляторных батареях совместно с энергокомпаниями. Related Companies установила в Гейтвей-центре в Бруклине аккумуляторы на 4,8 МВт*ч на площадях, которые всё равно никто бы не использовал. Теперь это хранилище энергии, управляемое энергетической компанией Enel X.
 <br> 
 <br> Компании отказались раскрывать детали лизинга, но вице-президент Related, Люк Фолк, сказал, что подобная аккумуляторная система хранения может помочь его компании и другим подобным ей зарабатывать деньги и достигать целей «зелёной» энергетики.
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/6f2/4bd/a5b/6f24bda5b2e43ef2c12cc5f5a80a6d08.jpg">
 <br> <i>Бассейн с подогревом от солнечной энергии в апартаментах Soleil Lofts.</i>
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/b70/2ec/cba/b702eccbaabf7172e8875b224038fdbe.jpg">
 <br> <i>Среди других удобств – зарядки для электромобилей.</i>
 <br> 
 <br> Новаторский подход Soleil показал, что подобные проекты могут работать, но воспроизводить их не так-то легко. Комю сказал, что с этим связаны технические проблемы, и для достижения успеха часто необходимо, чтобы у владельцев уже был подобный опыт. Он предсказывает, что по мере того, как другие энергетические компании будут повышать процент возобновляемой энергии, таких партнёрств будет становиться всё больше.
 <br> 
 <br> «А новым клиентам уже не нужно будет проходить все этапы, которые Wasatch прошла с нуля», — сказал Комю.
 <br> 
 <br> Wasatch планирует расширять модель Soleil. Готовится уже шесть пилотных программ, которые будут реализованы в уже существующих объектах недвижимости в Калифорнии. Их цель – узнать, смогут ли другие здания достичь той же эффективности и снижения стоимости. Питерсон хочет, чтобы в итоге появилось некое решение «под ключ», которое позволит оснащать недвижимость других владельцев виртуальных электростанций.
 <br> 
 <br> «Мы считаем, что это возможно, и как только мы сможем это доказать, этой модели откроются куда как более широкие перспективы», — сказал он.
</div>', '2021-04-02 15:48:00', 'Новая коммунальная услуга: электростанция из аккумуляторов', 58, null, 7),
        (78, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bfa/673/c60/bfa673c6040d0291833004d3b54678b5.png" width="1920" height="1080">
  <figcaption></figcaption>
 </figure>
 <p>Видео-версия: </p><iframe id="60698f45d990706d645cc08b" src="https://embedd.srv.habr.com/iframe/60698f45d990706d645cc08b" class="embed_video embed__content" allowfullscreen="true"></iframe>
 <p>Всем привет. В прошлый раз я рассказывал про маржин-колл, что является неоспоримым фейлом в торговле на бирже, и с тех пор ситуация более-менее выровнялась. Как вы могли догадаться, внизу рынка меня разгрузили далеко не на весь депозит, и что важно, брокер не выкупил резко подорожавшие из-за взлета волатильности короткие опционы. Сейчас некоторые из них серьезно подешевели, и я начинаю выкупать их сам, фиксируя кое-какую прибыль, и одну из таких сделок сегодня хотелось бы рассмотреть, в контексте использования торговых роботов. Хотелось бы пояснить, под роботом я никогда не воспринимал высокочастотную торговлю, потому что соревноваться в этом с техникой и линиями игроков с миллиардными капиталами бесполезно. Робот в моем понимании - это автоматизация элементов своей торговой системы, для которой не хватило встроенного функционала терминала брокера, а необходимо это потому, что у вас никогда не будет времени на постоянный анализ изменяющейся обстановки. Тем более, как я уже говорил, трейдинг не является моей основной профессией, а сейчас, с переходом США на летнее время, начало биржевой сессии уже не на полчаса, а на полтора накладывается на рабочее время по Москве, а есть еще премаркет, который открывается в 10:30 утра. В связи с этим, даже при желании я бы не смог контролировать глазами торговлю на всем протяжении, потому что в моем портфеле довольно много тикеров, и все невозможно отсматривать глазами, даже расположив графики мозаикой - пробовал, все это ерунда. Поэтому я использую, особенно на опционах, так называемые GTC (Good-Till-Cancelled) ордера, на то время как в период неопределенности отключена вся автоматизация. И вот как раз сегодня на открытии рынка сработал такой ордер, который вы видите на экране - опционная позиция была выкуплена за половину от входа в сделку, принеся прибыль около 1,5 тысяч долларов. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/294/24b/6e5/29424b6e50c8e5c520299258b6b653a7.jpg" width="657" height="28">
  <figcaption></figcaption>
 </figure>
 <p> Услышав это, многие скажут, так и чего тебе не нравится, ты же сволочь на чистой спекуляции, не произведя добавленной стоимости, обогатился? Некоторые, уточнив город проживания Москву, еще и добавят что мол москвичи зажрались, полторы штуки баксов для них уже не деньги. Тем не менее, в ходе сегодняшнего сеанса разоблачения, я покажу, что на самом деле это отвратительная сделка, совершать ее в таком виде не следовало - а нормально отработать эту ситуацию помог бы примитивный алгоритм, который легко реализуется с помощью торгового робота. </p>
 <p>Как я говорил ранее, определение точки входа в позицию, это самая ответственная задача, и если вы пока не нашли свой Грааль, да еще такой, чтобы он укладывался в формально описываемые алгоритмы, вы можете заниматься ресерчем, фундаментальным анализом, чтением новостей и сплетен, рисовать фигуры технического анализа, и допустим, в какой-то момент научитесь плюс-минус удачно входить в позицию. </p>
 <p>Алгоритмы же выхода из позиции формализуются гораздо веселее. Два из них, наверное, становятся известны начинающему трейдеру в первый день его упражнений в терминале - это стоп-лосс и тейк профит. Со стоп лосом, все совсем просто, это линия, за которой заканчивается размер максимального риска, который вы отмерили на сделку. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b5d/f0a/fff/b5df0afff01b40c613d39ef1514a7263.jpg" width="1280" height="385">
  <figcaption></figcaption>
 </figure>
 <p>Например, вы купили по бумагу за 10 долларов, и больше доллара терять не намерены - тогда стоп будет стоять на 9. Цена, конечно, может проскользнуть на низколиквидном инструменте за уровень стопа, но это не очень страшно. Что же с фиксацией прибыли - с тейк профитами? Ставить тейки по такому принципу тоже можно, но у вас немедленно включится жадность, и задаст вам вопрос - если бумага прет по тренду в вашем направлении, зачем вам фиксировать прибыль на определенном заранее уровне, если можно досмотреть это кино, до куда она все-таки дойдет? На эту тему недвусмысленно высказался Джесси Ливермор - режь убытки сразу, дай прибыли течь.</p>
 <p>Посмотрим, что случилось с курсом выкупленного опциона дальше, в течении дня?</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/abe/c3d/55d/abec3d55d153bf36ab5f75a7f1939f49.jpg" width="614" height="466">
  <figcaption></figcaption>
 </figure>
 <p>Уже сейчас видно, что с “дать прибыли течь” вообще не срослось. На самом деле в IB существует встроенный инструмент для подобных ситуаций - trail stop, однако есть проблема. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/779/d85/9c5/779d859c51329302efc533bbfe9e8037.jpg" width="1280" height="720">
  <figcaption></figcaption>
 </figure>
 <p>Дело в том, что вы должны определить размер максимальных колебаний отката, который начнет действовать сразу по активации ордера, в результате чего понемногу планка подтянется к цене, и при откате назад, позиция будет закрыта очень быстро, либо вы потеряете на крупном откате. Я пытался настроить активацию ордера на некие условия, но похоже, в IB для инструментов типа опционов это заблокировано, поэтому сделать это может только ваш самописный робот. При шортовой позиции на опцион, время работает на меня, поэтому я могу ждать до самой экспирации, а если опцион вошел в деньги, я могу перекатить его на будущий период, иногда даже диагонально, улучшив страйк - заплатив за него временной стоимостью. Когда время работает на меня, врубать такой trailing коробки - это глупость. </p>
 <p>Кроме того, на графике вы можете видеть, что перед закрытием прошлого дня практически не было сделок, и к тому же был просто конский спред в доллар и более между бидом и аском - сработка рыночного, а не лимитного ордера в такой ситуации - это просто подарок для маркетмейкера. На открытии, как водится, спреды вообще огромные, но при этом было уже было гораздо больше сделок. На третьей секунде после открытия рынка, спред конечно, не сильно сузился, но так как курс валился вниз, мой ордер на откуп сработал и зафиксировал прибыль в полторы тысячи долларов. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/947/5ba/269/9475ba269139556aa8c7de7886bb0211.jpg" width="616" height="465">
  <figcaption></figcaption>
 </figure>
 <p>Но нетрудно заметить, что это было по цене 2.50, а цена немедленно бахнулась на 0.50, то есть с 5 опционов я недополучил 2*100*5, еще целую тысячу долларов. Отвратительная сделка. Стоит заметить, что обычно такого не происходит, и цена опускается медленно и нежно, и GTC ордера вполне хватает. И кто-то скажет, что всех денег не заработать, мол, ты не мог знать, куда пойдет курс опциона, поэтому можно не переживать. Некоторая вероятность того, что гэп премаркета закроется мгновенно, имеет место, но обычно это занимает до получаса, за которые можно было выкупить опцион по более выгодной цене.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bac/251/569/bac251569bb45bd9c3eb31be192797b8.png" width="664" height="393">
  <figcaption></figcaption>
 </figure>
 <p>Но в том-то и дело, за ночь и утро, на постмаркете и премаркете (где кстати вы тоже можете торговать, если отмечать в настройках графика и ордеров нужные галочки), на базовом активе образовался огромный гэп, то есть разрыв в курсах. Разумеется, я поленился, и вручную не проверил все курсы базовых активов по моим опционным позициям перед открытием рынка - я работаю и занят, да и вообще нет у меня такой привычки. А я бы увидел, что цена акции HGEN резко шмальнула вверх на премаркете и пересекла отметку страйка. Что означает ровно одно - внутренняя стоимость опциона превратилась в тыкву, и стала ноль долларов ноль центов. И у опциона осталась только временная стоимость на будущие три недели. Здесь можно было бы снова грузануть вас формулой Блэка-Шоулза:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/68e/638/925/68e638925f6196a559d8ea908e0411ce.jpg" width="1024" height="767">
  <figcaption></figcaption>
 </figure>
 <p>Но черт с ней, давайте просто посмотрим, сколько стоял БА на закрытии - 14.05, и сколько стоял этот опцион в 15 страйке - 5.50, а внутри него сидело, вы не поверите, 95 центов внутренней стоимости. Стало быть, 4.55 доллара - это его временная стоимость на конец пятницы, когда он был примерно около 50 дельты (дельта - вероятность экспирации в деньгах). Обратите внимание, примерно столько же 5.50 маркет мейкер просит сейчас за опцион немного в деньгах. А за опцион в 10й дельте, в которую с пятницы на понедельник превратился страйк 15, просят 0.75 (на практике, цена падала и до 0.50, то есть дельта была еще меньше). </p>
 <p>Таким образом повторюсь, единственное, что от меня требовалось, так как я мог посмотреть результаты торгов БА на премаркете, это рассчитать с помощью робота цену опциона, и понять, что моя лимитка стоит сильно выше (в 5, черт возьми, раз выше) справедливой цены, и на открытии рынка произойдет очень невыгодная сделка. Я не посмотрел, а вот маркетмейкер - да, у него работа такая, и обнаружив шикарную точку арбитража, он реализовал ее на 3 секунде работы биржи. </p>
 <p>И вы таки спросите, если при торговле опираться на дельту, как я мог рассчитать дельту без опционной доски IB, и даже без его веб-калькулятора? </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/62c/9a0/89a/62c9a089a98f403203503c9eff0dfad1.jpg" width="776" height="970">
  <figcaption></figcaption>
 </figure>
 <p>А вот по этой незамысловатой формуле опционного грека Дельта: </p>
 <p>δ=N(d1) −1 where d1= (ln(S/K)+(r-q+σ^2/2)t)/σ√ t </p>
 <p>K - Option strike price N - Standard normal cumulative distribution function r - Risk free interest rate q - Dividend Yield σ - Volatility of the underlying S - Price of the underlying t - Time to option''s expiry </p>
 <p>Ну, формула-то незамысловатая, но в ней участвует волатильность, которую (имея в виду implied - Подразумеваемую), потребуется рассчитать. На скале функция выделит так: </p>
 <pre><code class="scala">def delta(tp :String,S:Double,K:Double,vol:Double,tt:Int,q:Double=0.0,r:Double=0.0) = {       

val t = tt/366.0       

val d1 = (scala.math.log(S/K)+(r-q+vol*vol/2)*t)/(vol*sqrt(t))       

new NormalDistribution(0.0, 1.0).cumulativeProbability(d1) - (if (tp=="P") 1 else 0)     }  

Сравниваем:

[info] Done compiling.  

-0.12389190331572086 </code></pre>
 <p>При этом, на четвертом знаке после запятой она перестает биться с калькулятором на сайте IB; мало этого, Dividend Yield по идее должна отниматься от Risk free interest rate, а в калькуляторе, если эти числа устанавливать одинаковыми, греки немного различаются - стало быть, там считают как-то иначе. Но как я говорил, для меня это хобби, и я не обязан разбираться в тонкостях. К тому же, я могу использовать встроенный функционал API IB для расчета волатильности, а также и для расчета справедливой цены опциона перед открытием.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/961/89b/9e3/96189b9e30c5a0f7aade8016ba9fbc32.png" width="1435" height="868">
  <figcaption></figcaption>
 </figure>
 <p>Прогнав свой портфель через эти функции API, мы можем не терять деньги столь бездарно, как в приведенном примере. Соответственно, вместо примитивных GTC ордеров, можно ставить на мониторинг рынка и новостного фона условия произвольной сложности, при сработке которых включается трейлинг. </p>
 <p>Желаю вам удачи, до новых встреч! </p>
</div>', '2021-04-04 13:09:00', 'Недополученная прибыль на бирже из-за отключенного робота и лени', 2, null, 3),
        (79, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <p>LinkedIn <a href="https://www.cnbctv18.com/business/companies/linkedin-springs-a-surprise-on-employees-globally-gives-them-paid-week-off-8806091.htm" rel="noopener noreferrer nofollow">отправляет</a> своих сотрудников в оплачиваемый отпуск на неделю с 5 апреля. Мера затронет большинство из 15 900 работающих в штате компании по всему миру. Такое решение приняли в рамках борьбы с выгоранием работников. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/29e/451/d83/29e451d8398128f2c3c61f8f3cf7725f.png" width="800" height="443">
  <figcaption></figcaption>
 </figure>
 <p>HR-директор LinkedIn Теуила Хэнсон пояснила, что работники в этот период смогут уйти в офлайн и подзарядиться. При этом ключевая группа работников останется на местах. Позже этим сотрудникам тоже дадут отпуска. </p>
 <p>«Мы хотели убедиться, что можем дать им что-то действительно ценное, и сейчас мы считаем наиболее ценной возможность сделать перерыв», — говорит Хэнсон. </p>
 <p>В компании пояснили, что, поскольку почти весь штат ушел в отпуск, по его завершению у сотрудников не накопится слишком много работы. </p>
 <p>Сотрудники LinkedIn работают удаленно с 2020 года из-за пандемии. Раз в три месяца компания проводит опросы, чтобы выяснить самочувствие работников. Как утверждают в соцсети, только за последний год работники по-настоящему начали осознавать, что такое выгорание. </p>
 <p>В итоге LinkedIn запустила инициативу LiftUp!, в рамках которой проходят «дни без рабочих встреч» и тренинги для менеджеров по проблеме эмоционального выгорания. </p>
 <p>Компания уже объявила, что сохранит гибридную систему работы после пандемии.</p>
 <p>Ранее Microsoft <a href="https://habr.com/ru/news/t/544702/" rel="noopener noreferrer nofollow">запустила</a> для сотрудников корпоративную мотивационную программу Perks Plus. Все 166 тысяч работников компании получат в течение года $1200 на оплату занятий спортом, покупок в рамках своих хобби и оплату образовательных курсов. Microsoft также пытается бороться с выгоранием своих сотрудников на удаленной работе.</p>
 <p>Поставщик услуг виртуальной частной NordVPN Teams <a href="https://habr.com/ru/news/t/540782/" rel="noopener noreferrer nofollow">решил выяснить</a>, как изменилась продолжительность рабочего дня за год удаленной работы. Выяснилось, что в некоторых странах мира сотрудники начали работать, в среднем, на 2,5 часа дольше.</p>
 <p>А опрос сервиса Blind прошлой осенью <a href="https://habr.com/ru/news/t/523958/" rel="noopener noreferrer nofollow">показал</a>, что сотрудники Кремниевой долины измотаны удаленным режимом работы и стали больше уставать. У некоторых появились признаки стресса и выгорания.</p>
</div>', '2021-04-05 14:32:00', 'LinkedIn отправила сотрудников в отпуск против выгорания', 39, null, 2),
        (80, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <h2>Введение</h2>
 <p>В конце прошлого года мы завершили один из самых интересных и необычных проектов, которыми нам приходилось заниматься.&nbsp;</p>
 <p>Наш клиент - klara.com - коммуникационная телемедицинская платформа, упрощающая взаимодействие пациентов с врачами в США, столкнулась со стремительным ростом на волне пандемии 2020 года. Одним из вызовов на которые пришлось отвечать инженерам klara.com в это непростое время стало автоматизированное нагрузочное тестирование, способное обнаружить проблемы с производительностью до того как они проявят себя в production среде.</p>
 <p>Задача построения пайплайна нагрузочного тестирования выглядела достаточно изолированной для того, чтобы ее можно было выделить в отдельный проект и отдать на реализацию нашей команде.</p>
 <p>Постановка задачи выглядела так: спроектировать и реализовать пайплайн нагрузочного тестирования таким образом, чтобы его можно было легко поддерживать силами QA-инженеров, использовать как часть CI/CD процессов компании, расширять по необходимости и иметь возможность реализовать различные сценарии нагрузочного тестирования. Критерием успешности проекта стала точная реализация одного из кейса по производительности из production в среде нагрузочного тестирования с помощью инструментов, которые мы разработали.</p>
 <h2>Технологическая платформа</h2>
 <p>Основные языки программирования в команде - Ruby, JS. В качестве основного хранилища klara.com использует Postgres. Безопасность персональных данных пациентов (PHI - Protected Health Information) является ключевым аспектом бизнеса klara.com. Для обеспечения надежного хранения и обработки данных платформа использует HIPPA совместимую SaaS платформу - Aptible. Aptible покупает ресурсы у AWS, поэтому для дальнейшего описания будет достаточно считать Aptible сильно урезанной и зарегулированной версией AWS.&nbsp;</p>
 <p>Для максимально корректной реализации нагрузочного тестирования нам нужна среда максимально похожая на production среду. Идеально, если идентичными будут: серверный парк, структура и объем данных, версии кода, структура и объем трафика. Очевидно также, что сделать все перечисленное абсолютно идентичным за разумное время и бюджет не реально и всегда приходится принимать некие допущения.</p>
 <p>В этой статье я расскажу как мы готовили данные для нагрузочного тестирования.</p>
 <p>Чтобы воспроизвести похожее поведение приложения во время тестов нам нужно иметь максимально похожую на production базу данных с точки зрения объема данных и их распределения. Из-за того, что klara хранит в том числе персональные данные, нам понадобится обфускация базы. Дополнительное условие - скорость работы обфускатора, хотелось бы быстро.</p>
 <h2>Обзор решений</h2>
 <p>Сейчас существует несколько инструментов для решения этой задачи в postgres, мы провели краткий сравнительный анализ, который приведен ниже:</p>
 <p><a href="https://gitlab.com/dalibo/postgresql_anonymizer" rel="noopener noreferrer nofollow"><strong><u>postgresql_anonymizer</u></strong></a></p>
 <p>+ Самое популярное по количеству звезд на github решение из имеющихся&nbsp;</p>
 <p>+ Очень много функций для разных типов данных с разными стратегиями, которые можно применять точечно для выбранных полей (https://postgresql-anonymizer.readthedocs.io/en/latest/masking_functions/)</p>
 <p>+ Можно выгружать сразу в *.sql дамп</p>
 <p>- Нужно устанавливать как расширение рядом с бд</p>
 <p>- Для каждого поля нужно прописывать security labels с масками</p>
 <p>- Маски работают только с одной схемой</p>
 <p>- Нет данных по производительности</p>
 <p>Это решение мы не рассматривали из-за того, что оно должно устанавливаться как расширение, запихивать, что-то в production - так себе идея.</p>
 <p><a href="https://github.com/josacar/triki" rel="noopener noreferrer nofollow"><strong>triki</strong></a></p>
 <p>+ Заявлена высокая скорость работы (1.4гб mysql dump 17sec)</p>
 <p>+ Много типов данных + можно определить свои (форк + правки т.к. кристал руби-френдли язык)</p>
 <p>+ Можно выгрузить конфигурацию всей схемы для дальнейшей настройки обфускатора (таблицы-поля)</p>
 <p>+ Не требуется никаких правок в исходной бд, только настроить коннект</p>
 <p>+ Выгружает в *.sql дамп</p>
 <p>Выглядело неплохим вариантом, удобный деплой, понятный нам и заказчику язык, очевидный недостаток - не понятно как сохраняется распределение данных.</p>
 <p><a href="https://github.com/suquant/pgdump-obfuscator" rel="noopener noreferrer nofollow"><strong>pgdump-obfuscator</strong></a> (форк)</p>
 <p>+ есть возможность задавать параметры полей через cli (только в форке)</p>
 <p>- нет информации о производительности</p>
 <p>- обновлялся 8 лет назад</p>
 <p><a href="https://github.com/ClickHouse/ClickHouse/tree/master/programs/obfuscator" rel="noopener noreferrer nofollow"><strong>clickhouse-obfuscator</strong></a></p>
 <p>+ Заявлена высокая скорость работы (в докладе говорилось, что 1тб данных обфусцирован за 1.5 дня)</p>
 <p>- Написан на C++ (нашей команде сложно вносить изменения)</p>
 <p>- Принимает только csv-формат</p>
 <p>- Нет внятной документации (<a href="https://habr.com/ru/company/yandex/blog/457354/" rel="noopener noreferrer nofollow">только статья на Хабре</a>)</p>
 <p>Высокая скорость, сохранение распределения данных после обфускации, поддержка большой компанией и комьюнити - по этим причинам мы выбрали обфускатор от clickhouse.</p>
 <h2>pg_obfuscator</h2>
 <p>К сожалению для нашей задачи, clickhouse obfuscator не поддерживал прямое подключение к postgresql. Поэтому нам пришлось написать утилиту, которая решает задачу обфускации postgresql с учетом всей специфики работы именно с этой базой. <a href="https://github.com/foobar-engineering/pg_obfuscator" rel="noopener noreferrer nofollow"><strong>Исходный код доступен по адресу</strong></a>.</p>
 <p>Утилита представляет собой wrapper над psql client и clickhouse obfuscator и реализует следующую функциональность</p>
 <ul>
  <li><p>выгрузка схемы базы с сохранением внешних ключей и проверок ссылочной целостности&nbsp;</p></li>
  <li><p>исключение из обфускации таблиц, полей таблиц</p></li>
  <li><p>использование предопределенных шаблонов для генерации фейковых значений для полей</p></li>
  <li><p>маппинг типов данных postgres на типы данных clickhouse</p></li>
  <li><p>генерацию конфигурации со значениями по умолчанию</p></li>
 </ul>
 <p>Из-за специфики работы clickhouse-obfuscator утилита требует дискового пространства для работы равного двойному размеру базы данных. Поставляется в виде docker image и <a href="https://hub.docker.com/r/foobarengineering/pg_obfuscator" rel="noopener noreferrer nofollow">доступна по адресу</a>.</p>
 <p>В настоящий момент есть ограничения, которые следует иметь в виду:&nbsp;</p>
 <ul>
  <li><p>утилита поддерживает только базовые типы postgres и не поддерживает вложенные: hstore, json, jsonb</p></li>
  <li><p>несмотря на автоматическую генерацию конфига, для первого запуска он нуждается в правках</p></li>
  <li><p>объем docker image составляет почти 700Mb</p></li>
 </ul>
 <p>В рамках поставленной задачи мы наблюдали следующие скоростные характеристики: тестовая база 10Гб обфусцировалась за 40 минут, продуктовая в 50 Гб - 6..8 часов. Чем обусловлена нелинейность работы мы не выясняли.</p>
 <p>Ниже я продемонстрирую работу c <strong>pg_obfuscator</strong> на примере работы с <a href="https://github.com/devrimgunduz/pagila" rel="noopener noreferrer nofollow"><u>devrimgunduz/pagila: PostgreSQL Sample Database</u></a>.</p>
 <h2>Демо</h2>
 <p>Развернем контейнер с postgres и создадим в нем 2 базы для демонстрации:</p>
 <pre><code class="bash">docker run --rm --name=db -e POSTGRES_PASSWORD=password -p5432:5432 postgres
docker exec -i db psql -U postgres postgres -c ''create database pagila;''
docker exec -i db psql -U postgres postgres -c ''create database pagila_o;''</code></pre>
 <p>Посмотрим IP-адрес базы - он понадобится для работы обфускатора:</p>
 <p><code>docker inspect db | grep IPAdd</code></p>
 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"SecondaryIPAddresses": null,</p>
 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"IPAddress": "172.17.0.2"</p>
 <p>И зальем в контейнер скрипты из проекта pagila:</p>
 <pre><code class="bash">cd /tmp
git clone git@github.com:devrimgunduz/pagila.git
docker exec -i db psql -U postgres pagila &lt; /tmp/pagila/pagila-schema.sql
docker exec -i db psql -U postgres pagila &lt; /tmp/pagila/pagila-data.sql</code></pre>
 <p>Убедимся, что там появились данные:</p>
 <p><code>docker exec -i db psql -U postgres pagila -c ''select &nbsp; &nbsp; a.first_name, a.last_name, f.film_id, f.title, f.description from film f join film_actor fa on f.film_id = fa.film_id join actor a on a.actor_id=fa.actor_id where f.film_id = 7;''</code></p>
 <pre><code>first_name | last_name | film_id |&nbsp; &nbsp; &nbsp; title&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; description

------------+-----------+---------+-----------------+-----------------------------------------------------------------------------------

&nbsp;JIM&nbsp; &nbsp; &nbsp; &nbsp; | MOSTEL&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | AIRPLANE SIERRA | A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat

&nbsp;RICHARD&nbsp; &nbsp; | PENN&nbsp; &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | AIRPLANE SIERRA | A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat

&nbsp;OPRAH&nbsp; &nbsp; &nbsp; | KILMER&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | AIRPLANE SIERRA | A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat

&nbsp;MENA &nbsp; &nbsp; &nbsp; | HOPPER&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | AIRPLANE SIERRA | A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat

&nbsp;MICHAEL&nbsp; &nbsp; | BOLGER&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | AIRPLANE SIERRA | A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat

(5 rows)</code></pre>
 <p>&nbsp;База для экспериментов готова. Теперь расчехлим pg_obfuscator, принципиальным моментом является монтирования тома для конфига, чтобы иметь возможность его потом поправить.</p>
 <pre><code class="bash">mkdir /tmp/config
docker run -it --rm -v /tmp/config:/opt/pg_obfuscator/config pg_obfuscator sh</code></pre>
 <p>Дальше<strong> команды выполняются в шелле обфускатора</strong>, если не сказано другого:</p>
 <pre><code class="bash">bundle exec ruby pg_obfuscator.rb&nbsp; --configure --source-db-host 172.17.0.2 --source-db-port 5432 --source-db-name pagila --source-db-user postgres --source-db-password password

.......
I, [2021-04-02T08:47:54.682868 #9]&nbsp; INFO -- : Processed 20 tables

I, [2021-04-02T08:47:54.683243 #9]&nbsp; INFO -- : Check config before run export tables and obfuscation!

I, [2021-04-02T08:47:54.696328 #9]&nbsp; INFO -- : Config saved to: config/config.yml</code></pre>
 <p>Обфускатор говорит, что нужно проверить конфиг и внести необходимые изменения. Конфиг для 20 таблиц получился около 400 строк, секции, которые нуждаются в правках отмечены - <strong>need_fix: true</strong>. Для того, чтобы вам было легче повторить я <a href="https://gist.github.com/afefelov/4495f03df1e1922e2829e97093e9dcd5" rel="noopener noreferrer nofollow">выложил исправленный конфиг сюда</a>.</p>
 <p>Для демонстрации генерации фейковых данных посмотрим <a href="https://gist.github.com/afefelov/4495f03df1e1922e2829e97093e9dcd5#file-config-yml-L29" rel="noopener noreferrer nofollow">на секцию в таблице actor</a>:</p>
 <pre><code class="go">last_name:
	db_data_type: text
&nbsp;&nbsp;not_null: true
&nbsp;&nbsp;obfuscator_data_type: String
&nbsp;&nbsp;fake_data:
&nbsp;&nbsp;	type: pattern
		value: "%{first_name}SON"</code></pre>
 <p>В качестве фамилии мы используем имя и постфикс SON.</p>
 <p>Выполним последовательно экспорт схемы, данных, обфускацию и заливку полученных данных в базу <strong>pagila_o</strong></p>
 <pre><code>ruby pg_obfuscator.rb --export-schema --source-db-host 172.17.0.2 --source-db-port 5432 --source-db-name pagila --source-db-user postgres --source-db-password password
ruby pg_obfuscator.rb --export-tables --source-db-host 172.17.0.2 --source-db-port 5432 --source-db-name pagila --source-db-user postgres --source-db-password password
bundle exec ruby pg_obfuscator.rb --obfuscate
ruby pg_obfuscator.rb --import --target-db-host 172.17.0.2 --target-db-port 5432 --target-db-name pagila_o --target-db-user postgres --target-db-password password</code></pre>
 <p>и выйдя из контейнера с обфускатором посмотрим на результат</p>
 <pre><code>docker exec -i db psql -U postgres pagila_o -c ''select &nbsp; a.first_name, a.last_name, f.film_id, f.title, f.description from film f join film_actor fa on f.film_id = fa.film_id join actor a on a.actor_id=fa.actor_id where f.film_id = 7;''</code></pre>
 <pre><code>&nbsp;first_name | last_name | film_id | &nbsp; title &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; description

------------+-----------+---------+-----------+------------------------------------------------------------------------------------------------------------------------

&nbsp;SA &nbsp; &nbsp; &nbsp; &nbsp; | SASON &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | ROON SUIT | A Amazing Display of a Database Administ And a Dog And a Database a Pastry Chef And a Car And a Manned Mine Shark Tank

&nbsp;RURA &nbsp; &nbsp; &nbsp; | RURASON &nbsp; | &nbsp; &nbsp; &nbsp; 7 | ROON SUIT | A Amazing Display of a Database Administ And a Dog And a Database a Pastry Chef And a Car And a Manned Mine Shark Tank

&nbsp;BER&nbsp; &nbsp; &nbsp; &nbsp; | BERSON&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | ROON SUIT | A Amazing Display of a Database Administ And a Dog And a Database a Pastry Chef And a Car And a Manned Mine Shark Tank

&nbsp;CA &nbsp; &nbsp; &nbsp; &nbsp; | CASON &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | ROON SUIT | A Amazing Display of a Database Administ And a Dog And a Database a Pastry Chef And a Car And a Manned Mine Shark Tank

&nbsp;MER&nbsp; &nbsp; &nbsp; &nbsp; | MERSON&nbsp; &nbsp; | &nbsp; &nbsp; &nbsp; 7 | ROON SUIT | A Amazing Display of a Database Administ And a Dog And a Database a Pastry Chef And a Car And a Manned Mine Shark Tank

(5 rows)</code></pre>
 <p>Видим, что last_name сформирован фейкером, описание обфусцировано, ссылочная целостность сохранена.</p>
 <p>На этом все, мы надеемся, что утилита будет полезна сообществу, будем рады видеть пулреквесты.</p>
 <p>Благодарим команду clickhouse obfuscator за отличный продукт!</p>
</div>', '2021-04-07 12:05:00', 'pg_obfuscator — обфускатор для postgres с сохранением распределения данных (на основе clickhouse obfuscator)', 49, null, 6),
        (81, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Привет, меня зовут Сергей Раков, я руководитель B2G-направления в ИТ-кластере «Ростелекома». 23 марта 2021 года мы отметили год, как полностью работаем в удаленном режиме. За этот год мы в значительной степени пересмотрели наши процессы и решили ряд нетипичных проблем. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e4a/e35/8f8/e4ae358f820d43744f73edb32aaecfb7.png" alt="by Radik Z" title="by Radik Z" width="964" height="640">
  <figcaption>
   by Radik Z
  </figcaption>
 </figure>
 <p>Я впервые столкнулся с удаленкой в таком масштабе. До этого всегда предпочитал работу в офисе, и команду тоже мы набирали к нам в офис. Отдельных удаленных сотрудников не рассматривали — с ними сложно поддерживать коммуникации, и у них пониженная вовлеченность в проект, т.к. они не видят того, что происходит внутри команды, работающей в офисе. И живут только от таска до таска.</p>
 <p>Я знал, что удаленные команды могут успешно решать задачи, но придерживался мнения, что эта команда должна быть расположена в одной локации и так же работать в офисе. Но прошлый 2020 год в корне изменил мое мнение о таком подходе. В начале пандемии я очень переживал, что команда будет испытывать стресс в новых вынужденных условиях, и пострадает продуктивность из-за удлинения коммуникаций. Поэтому я сразу начал предлагать различные решения, которые вернули бы ту атмосферу офиса, в которой мы так долго работали. Решение об использовании того или иного инструмента принималось совместно с командой. А бОльшую часть изменений в наши процессы внесла сама команда.</p>
 <h2>Как искали место для общения</h2>
 <p>Основной минус удаленной работы — это отсутствие чувства плеча. Первое время было сложно без разговоров с коллегами у кофепоинта и без совместных походов на обед. А ещё ты не можешь подойти к коллеге и быстро обсудить все рабочие вопросы вживую — обязательно нужно сначала написать, договориться о встрече, скинуть ссылку на видеоконференцию. Я считал это основным минусом и предложил использовать WebEX как виртуальный офис, где будет сидеть команда, куда можно будет зайти и поговорить. Но это решение быстро отмерло, потому что ваш разговор слышали все члены команды и приходилось кому-нибудь, да покинуть наш виртуальный офис — мы просто мешали друг другу.</p>
 <p>Решением для нас стал <strong>Discord </strong>— попробовать его предложил мне один из членов команды. Сначала я относился скептически к этому сервису, т.к. до этого у меня не было опыта работы с ним — свою игровую «карьеру» я закончил до появления вышеуказанного приложения :)</p>
 <p>В итоге я сделал сервер, в котором нагенерил несколько комнат, где постоянно находились ребята по командам — отдельно для питонистов, отдельно для рубистов и т.д. В итоге можно было зайти к ним и обсудить какой-нибудь срочный вопрос — почти как в офисе. Бонусом у нас появилось одно место для голосовых коммуникаций внутри команды. Никакой генерации ссылок на каждый созвон не требуется. Если писать долго, то мы просто переходим в Discord в свободный канал и решаем все вопросы. У нас даже есть специальный голосовой канал «Курилка» в котором можно просто поболтать.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/ecb/a7a/1d6/ecba7a1d6e944288ef8a50bc54bc9a95.jpg" width="3360" height="2040">
  <figcaption></figcaption>
 </figure>
 <h2>Work(&amp;/or)life balance</h2>
 <p>Нам понадобилось около двух месяцев на то, чтобы отвыкнуть от ежедневной работы в офисе и настроится на работу из дома. Кому-то пришлось создавать комфортные рабочие условия с нуля, кто-то был более к этому готов, а кто-то так и не смог найти их и до сих пор мечтает выйти в офис. Примерно с июня мы начали привыкать, хотя сначала нам было особенно сложно контролировать рабочее время — день начинался рано, заканчивался поздно, мы всегда были на связи. На удаленке нельзя сказать: «Извини, я уже ушел из офиса — отвечу завтра». Границы между работой и домом полностью размылись, и нам предстояло построить их заново.</p>
 <p>Для сохранения баланса между работой и личной жизнью кто-то начал жестко следить за временными рамками рабочего дня, а кто-то начал более гибко планировать свой рабочий день. Среди этих ребят был и я. Мы начали применять методику из книги <strong>Getting Things Done</strong> («Как привести дела в порядок») Дэвида Аллена. Она помогла нам все задачи держать в фокусе, ничего не забывать и меньше тратить время на переключение между ними. Удаленка нам показала, что изменения — это хорошо. И я понял, что развития без изменений не бывает. В целом, команда научилась более гибко планировать рабочий день и сейчас бОльшая часть команды не хочет выходить обратно в офис.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/02d/717/4ed/02d7174ed350f69e7ed4384662deab68.png" alt="Схема Getting Things Done, Skillbox" title="Схема Getting Things Done, Skillbox" width="970" height="600">
  <figcaption>
   Схема Getting Things Done, Skillbox
  </figcaption>
 </figure>
 <p>Приятным бонусом для меня стало то, что у нас повысилась производительность. Это моя субъективная оценка как руководителя команды, на самом деле точно оценить увеличение производительности в этом случае невозможно. Я увидел, что мы стали меньше распыляться на большое количество задач и стали быстрее доводить фичи до прода. Это тоже произошло только благодаря готовности команды к изменениям. Мы совместно тюнинговали и тюнингуем процесс до сих пор используя практики и инструменты Agile. Мы не используем какой-либо подход в чистом виде. Мы экспериментируем и находим, то что действительно удобно нам. Возможно, через эти эксперименты мы и придем в итоге к каноническому SCRUM или Kanban, но мы должны пройти этот путь сами, эволюционировать. Мы должны созреть для этого. </p>
 <h2>Промежуточные итоги</h2>
 <p>Я считаю, что новый формат работы несет выгоду как для бизнеса, так и для сотрудников. У организации снижаются затраты на расходы, связанные с обеспечением трудовой деятельности, и расширяется география для найма новых сотрудников. Например, сотрудникам, которые работают на удаленке, не нужно персональное рабочее место в офисе. Достаточно иметь зону с общими рабочими столами, где при необходимости появления в офисе сотрудник сможет поработать.&nbsp;</p>
 <p>Существенным плюсом я считаю снижение усилий сотрудников на дорогу до офиса. Теперь эти силы могут быть потрачены на решение рабочих задач или на более качественный отдых, который также позитивно сказывается на производительности труда. т.к. мы перестали тратить время и силы на дорогу, лично у меня появилось домашнее рабочее место и дополнительные 2 часа в день, которые посвящаю обучению или написанию вот таких статей :)</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/922/997/790/922997790f0bc805e6253d8b5f9a5612.jpg" width="4032" height="3024">
  <figcaption></figcaption>
 </figure>
 <p>Наконец, удалёнка сближает. Хотя мы не общались в нерабочее время, на работе я старался заводить и поддерживать те разговоры, которые были у нас во время перерывов. Я хотел уйти от той модели, когда совещание — это только совещание и сейчас если у нас остается время, то после решения рабочих вопросов мы остаемся и болтаем на свободные темы. </p>
 <p>Конечно, во время удаленной работы возникали различные организационные сложности. И в первую очередь с подписанием документов. Мы не стали оснащать всех сотрудников МФУ, т.к. они нужны нам крайне редко —&nbsp; в основном, в случае подписания каких-либо документов. Мы же программисты, и у нас бумажный документооборот сведен к минимуму. В общем, все попытались максимально перенести в электронную форму, а для решения остальных вопросов мы просто приезжали в офис, подписывали необходимые бумаги и снова возвращались в удаленный режим работы. Но на удаленке не обошлось без дополнительных затрат. Например, у нас есть отдел тестирования, который занимается проверкой качества ПО для IP-камер. Вот таким тестировщикам пришлось выслать дополнительные комплекты тестового оборудования, а иногда даже установить более продвинутые сетевые маршрутизаторы, которые позволяют настроить доступ в нашу закрытую сеть.</p>
 <p>Сейчас ИТ-кластер постепенно переходит на гибридный формат работы, и командам разрешили выбрать наиболее удобный формат работы: <br>- 3 дня в офисе / 2 дня – дома; <br>- 2 дня в офисе / 3 дня – дома; <br>- 1 день в офисе / 4 дня – дома <br>- полностью на удаленке. <br><br>Ответственность за это решение несет руководитель команды — главное, чтобы команда работала эффективно, а также была рабочая атмосфера, команда чувствовала себя хорошо, и все это вело к увеличению производительности. Некоторые ребята в нашей команде уже иногда выходят в офис. Кто-то – только планирует это сделать. Значительная часть сотрудников планирует остаться на удаленке (последний пульс-опрос показал больше 50%), а в офис приезжать только при необходимости, используя специальные гостевые рабочие места.</p>
</div>', '2021-04-08 12:17:00', 'Год на удаленке глазами одной команды. Как это было, итоги и планы', 69, null, 4),
        (82, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/webt/_x/ac/nh/_xacnh_jtbxeoxzw7fl8qhlct3w.png" width="780" height="440">
  <figcaption></figcaption>
 </figure>
 <p> Всем доброго времени суток. Начнем. Во время своего обучения этой технологии я столкнулся с проблемой, что на весь интернет есть только один нормальный источник информации по этой теме (<a href="https://www.vogella.com/" rel="noopener noreferrer nofollow">Lars Vogel</a>).&nbsp;А в нем все написано профи для профи. Поверхностно, без деталей. Есть и с деталями, но платно. Я хочу добавить подробностей в довольной простой процесс создания своего первого приложения RCP, поэтому буду делать подробные пояснения к каждому шагу. Это статья подойдет новичкам, не имеющим представления о RCP и Eclipse и желающим сделать первые шаги в освоении этой технологии, но знающим, что такое Java, JDK, JRE. </p>
 <p>План:</p>
 <ol>
  <li><p>Скачивание и установка Eclipse</p></li>
  <li><p>Создание rcp-plugin проекта</p></li>
  <li><p>Файловая структура RCP проекта</p></li>
  <li><p>Заключение</p></li>
 </ol>
 <h2>1. Скачивание и установка Eclipse</h2>
 <p> Для работы в Eclipse нужна JDK, поэтому если у вас ее нет, нужно установить. Я использую Java SE Oracle JDK 8, вот <a href="https://www.oracle.com/ru/java/technologies/javase/javase-jdk8-downloads.html" rel="noopener noreferrer nofollow">ссылка</a>. Работу приложения проверял до 15 версии JDK включительно. Скачиваем файл установки Eclipse версии 2021-03 <a href="https://www.eclipse.org/downloads/" rel="noopener noreferrer nofollow">отсюда</a>. Дальше запускаем скачанный файл и выбираем пункт «Eclipse IDE for RCP and RAP Developers».&nbsp; </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/webt/rk/ue/wd/rkuewd8xy0vgsrwir9plss07dym.png" width="628" height="640">
  <figcaption></figcaption>
 </figure>
 <p>Ждем, пока Eclipse установится, и запускаем его.&nbsp; </p>
 <p>Меняем настройки окружения самого Eclipse:&nbsp;</p>
 <ul>
  <li><p>Верхний правый угол: <em>Open Perspective -&gt; Java</em>. По умолчанию Eclipse открывается в Plug-in Perspective, но в нашем случае нет необходимости использовать вкладки(в терминах Eclipse вкладки называются part) из этой перспективы, поэтому переключаемся на более удобную в данном случае перспективу «Java».&nbsp;</p></li>
  <li><p><em>Window -&gt; Show View -&gt; Project Explorer</em>&nbsp; — задаём отображение проектов в виде иерархии (дерева) вместо списка.&nbsp;</p></li>
 </ul>
 <h2>2. Создание rcp-plugin проекта</h2>
 <p> &nbsp; Мы создадим plugin и дополнительными настройками в wizard добавим папки и файлы, нужные для полноценной работы RCP приложения. </p>
 <p>&nbsp;<em>File -&gt; New -&gt; Other -&gt; Plug-in Development -&gt; Plug-in Project.&nbsp;</em></p>
 <figure class="">
  <img src="https://habrastorage.org/webt/ez/ai/gt/ezaigtkaczafjyxhxuqt8mewtug.png" width="514" height="606">
  <figcaption></figcaption>
 </figure>
 <p>Установите настройки как показано на скриншоте.&nbsp;&nbsp; </p>
 <p>Более подробно о них:</p>
 <ul>
  <li><p><em>Project name</em> — наименование проекта.</p></li>
  <li><p><em>Use default location</em> - имеет смысл менять с дефолтного значения, если у вас есть большой проект и вы создаете плагин внутри этого проекта, или вы просто хотите поместить только что созданный плагин в конкретную директорию.</p>
   <ul>
    <li><p><em>checkbox установлен</em> — создаст проект в текущем workspace. Workspace — каталог на диске, в котором платформа Eclipse и все установленные надстройки хранят настройки, конфигурации и временную информацию. Последующие вызовы Eclipse будут использовать это хранилище для восстановления предыдущего состояния. Как следует из названия, это ваше «рабочее место».</p></li>
    <li><p><em>checkbox снят — </em>создаст проект в выбранной папке (поле Location).</p></li>
   </ul></li>
  <li><p><em>Create a Java project</em> &nbsp;- создавать ли Java project.</p>
   <ul>
    <li><p><em>checkbox установлен — </em>создается Java проект, т.е. создаются 3 папки: для jre (JRE System &nbsp; Library), для зависимостей самого приложения (Plug-in Dependencies) и папка для исходников. Выберите этот пункт, если вы будете писать код в вашем плагине.</p></li>
    <li><p><em>checkbox снят- </em>проект Java не будет создан. Подходит, если, например, вы создаёте плагин для документации.</p></li>
   </ul></li>
  <li><p><em>Source folder — </em>&nbsp;наименование папки для исходников. Общепринятое название -&nbsp; src, но вы спокойно можете сменить название без потери функциональности,</p></li>
  <li><p><em>Output folder — </em>наименование папки для скомпилированных классов. Общепринятое название — bin, но вы спокойно можете сменить название без потери функциональности.</p></li>
  <li><p><em>Target Platform</em> — выбор платформы – Eclipse или OSGi – контролирует параметры генерации кода, а также список доступных шаблонов</p>
   <ul>
    <li><p><em>OSGi </em>(Open Services Gateway Initiative) представляет собой спецификацию динамической модульной системы и сервисной платформы для Java-приложений, разрабатываемую консорциумом <a href="https://www.osgi.org/developer/specifications/?section=2#Release4" rel="noopener noreferrer nofollow">OSGi Alliance</a>. Данная спецификация определяет модель построения приложения из компонентов, состав которых может изменяться во время выполнения приложения. Подробнее можно найти <a href="https://www.vogella.com/tutorials/OSGi/article.html" rel="noopener noreferrer nofollow">тут</a>, <a href="http://java-online.ru/osgi.xhtml" rel="noopener noreferrer nofollow">тут</a> и <a href="https://ru.wikipedia.org/wiki/OSGi#:~:text=OSGi%20(Open%20Services%20Gateway%20Initiative,%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%BD%D0%B5%D0%BD%D1%82%D0%BE%D0%B2%2C%20%D1%81%D0%B2%D1%8F%D0%B7%D0%B0%D0%BD%D0%BD%D1%8B%D1%85%20%D0%B2%D0%BC%D0%B5%D1%81%D1%82%D0%B5%20%D0%BF%D0%BE%D1%81%D1%80%D0%B5%D0%B4%D1%81%D1%82%D0%B2%D0%BE%D0%BC%20%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BE%D0%B2." rel="noopener noreferrer nofollow">здесь</a>. Шаблон RCP будет недоступен, поэтому в данной статье этот пункт мы не будем выбирать.</p></li>
    <li><p><em>Eclipse</em> -&nbsp; реализация базовой спецификации OSGi. Это также среда выполнения, на которой основаны приложения Eclipse. Будет доступен шаблон для RCP плагина.&nbsp;</p></li>
   </ul></li>
  <li><p><em>Working sets</em> — оставляем как есть. У нас один проект в окружении, working sets не нужны.</p></li>
 </ul>
 <p> Жмем «<em>Next»</em></p>
 <figure class="">
  <img src="https://habrastorage.org/webt/fc/g2/od/fcg2odd50pfdx_rlbbi29rgwtmm.png" width="510" height="602">
  <figcaption></figcaption>
 </figure>
 <p>Установите настройки как показано на скриншоте.&nbsp;&nbsp; </p>
 <p>Более подробно о них:</p>
 <p><em>Properties</em> — набор основных свойств plugin.&nbsp;</p>
 <ul>
  <li><p><em>ID</em> -&nbsp; является обязательным. Рекомендуется, но не обязательно, чтобы идентификатор плагина совпадал с именем проекта плагина.</p></li>
  <li><p><em>Version</em> — версия plugin, по дефолту стоит 1.0.0.qualifier. Слово qualifier – это как SNAPSHOT в maven. При сборке сборщик подставит вместо него метку времени сборки. XYZ.qualifier -&gt; XYZ.YYYYmmddhhmm&nbsp;</p></li>
  <li><p><em>Name</em> — наименование плагина, является обязательным. По умолчанию wizard подставляет название проекта в поля ID (все строчными символами) и Name (с заглавного символа) плагина. Смена названия не влияет на функциональность.</p></li>
  <li><p><em>Vendor</em> — разработчик, название компании, опционально.</p></li>
  <li><p><em>Execution Environment</em> — на какой версии java будете запускать приложение.&nbsp;</p></li>
  <li><p><em>Generate an Activator...:</em> если checkbox установлен, то создается Java-класс, который управляет жизненным циклом плагина. Это необходимо только в том случае, если вам необходимо выполнить какие-либо действия при запуске или завершении работы плагина.&nbsp;</p></li>
  <li><p><em>This plug-in will make contributions to the UI</em>&nbsp; — дословно переводится «Этот плагин будет вносить вклад в пользовательский интерфейс». Будут сгенерированы специальные файлы и папки для работы с UI. В зависимости от выбора в разделе Rich Client Application:</p>
   <ul>
    <li><p><em>yes — </em>&nbsp;на следующей странице на выбор будут даны несколько шаблонов генерации кода, где создается окружение для корректной работы RCP приложения. А именно: будут созданы файлы Application.e4xmi, *.product и папки для хранения css файлов с одним дефолтным файлом и папка для иконок с 3 иконками. Свойства этих папок сразу будут прописаны в файл build.properties (свойство bin.includes). Обратите на это внимание, так как если в дальнейшем захотите добавить папку для каких-то ресурсов – не забудьте прописать их в файл build.properties, а то в билде все упадет из-за недоступности ресурсов.&nbsp;&nbsp;</p></li>
    <li><p><em>no — </em>на выбор будут даны шаблоны различной сложности, без шаблона для RCP плагина.&nbsp;</p></li>
   </ul></li>
  <li><p><em>Enable API analysis</em> — свойство добавляет статический анализ API вашего плагина. Пример использования:</p>
   <ul>
    <li><p>Вы создаете свой плагин, аннотируете его API и публикуете версию 1.</p></li>
    <li><p>Миллионы людей будут использовать ваш плагин и создавать свой собственный код, который зависит от API вашего плагина.</p></li>
    <li><p>&nbsp;При создании 2 версии вашего плагина вы объявляете версию 1 как API-Baseline, с которым автоматически сравниваются изменения вашего кода. Любое изменение в API между версией 1 и 2 показывается вам <em>до</em> того, <em>как</em> вы запустите плагин или тесты. Вы выпускаете версию 2 без каких-либо изменений API.</p></li>
    <li><p>Миллионы людей могут обновить ваш плагин в своем приложении, потому что новый выпуск плагина совместим с предыдущим.</p></li>
   </ul></li>
  <li><p><em>Rich Client Application:</em></p>
   <ul>
    <li><p>&nbsp;<em>yes -</em> wizard предложит нам на выбор несколько полноценных примеров приложения 3 и 4 версий.</p></li>
    <li><p><em>no — </em>&nbsp;wizard предложит нам множество примеров дополнений (contributions) для 3 и 4 версий.&nbsp; Contribution — это дополнение или расширение уже существующего приложения, которое легко подключить и так же легко отключить. Это могут быть отдельные команды, пункты панели инструментов или меню, отдельные парты или даже перспективы.&nbsp;&nbsp;</p></li>
   </ul></li>
 </ul>
 <p> Тема и цель данной статьи – создать простой пример RCP приложения, поэтому из всех возможных вариантов мы будем рассматривать только шаблон который создает RCP приложение — Eclipse 4 RCP application.&nbsp; </p>
 <p>Выбираем пункт «Yes» и жмем «<em>Next»</em></p>
 <figure class="">
  <img src="https://habrastorage.org/webt/br/gt/fw/brgtfwqzzrjut1yyn6eagyqrcji.png" width="511" height="606">
  <figcaption></figcaption>
 </figure>
 <p>Окно выбора templates для генерации приложения. Выбираем Eclipse 4 RCP application. </p>
 <p>Жмем «<em>Next»</em></p>
 <figure class="">
  <img src="https://habrastorage.org/webt/cs/w2/66/csw266v-gvofco3umno14pnkbcc.jpeg" width="512" height="613">
  <figcaption></figcaption>
 </figure>
 <p>Установите настройки как показано на скриншоте.&nbsp;&nbsp; </p>
 <p>Более подробно о них:</p>
 <ul>
  <li><p><em>Application window title</em> — заголовок окна приложения.</p></li>
  <li><p><em>Create sample conten</em>t — сгенерируются несколько вкладок, главное меню и классы, отвечающие за действия при нажатии на кнопки в главном меню.&nbsp;</p></li>
  <li><p><em>Java package name</em> — название пакета, в котором будут лежать исходники.&nbsp; Поскольку есть Naming Conventions для package name, то логично, что при генерации плагина можно было бы заранее указать нужную структуру папок, а не создавать ее потом. В этом поле это можно сделать.</p></li>
  <li><p><em>Add life cycle class</em> — будет сгенерирован класс с набором аннотаций, которые срабатывают в разные моменты жизненного цикла приложения (перед открытием, сразу после полной загрузки, перед закрытием и т.д.). Этот класс будет прописан в расширениях со свойством lifeCycleURI.&nbsp;</p></li>
 </ul>
 <p> Нажимаем «<em>Finish»</em></p>
 <p>Eclipse предложит нам перейти на другую perspective для Plug-in development. Нажимаем «<em>No»,</em> так как мы не будем использовать дополнительные вкладки этой перспективы.&nbsp;</p>
 <p>И вот мы создали первое RCP&nbsp; приложение. Чтобы убедиться, что все работает и запускается, зайдите в файл *.product, лежащий в корневой папке приложения, и нажмите в верхнем правом углу зеленый треугольник <em>launch an Eclipse application</em>. Если вы все сделали правильно, то должно открыться вот такое окно:</p>
 <figure class="">
  <img src="https://habrastorage.org/webt/en/kc/yy/enkcyyjyebycllpx21-jog0wa2c.jpeg" width="485" height="395">
  <figcaption></figcaption>
 </figure>
 <h2>3. Файловая структура rcp проекта</h2>
 <figure class="">
  <img src="https://habrastorage.org/webt/xg/kl/kx/xgklkxxgqrxmnqtzc-ckqtjkolu.png" width="474" height="496">
  <figcaption></figcaption>
 </figure>
 <p> Именно такая файловая структура должна получиться, если все сделать как я описывал.&nbsp; </p>
 <ul>
  <li><p><em>Test</em> — &nbsp;созданный нами plugin.&nbsp;</p></li>
  <li><p><em>JRE System Library</em> — системная библиотека JRE, добавляется самим eclipse при создании Java приложения. В ней отображаются .jar файлы той jdk, что вы подключили к приложению в пункте Execution Environment на первой странице настроек.</p></li>
  <li><p><em>Plug-in Dependencies</em> — папка для .jar файлов ваших зависимостей. Посмотреть список зависимостей можно в файле MANIFEST.MF на вкладке Dependencies. В папке список будет больше, чем в файле, так как включает и транзитивные зависимости.</p></li>
  <li><p><em>src</em> — исходники. Как вы видите, структура папок (com.firstarticle.test) между src и сгенерированными классами именно такая, которую мы указали на последнем шаге создания приложения.&nbsp;</p></li>
  <li><p><em>css</em> — &nbsp;папка для конкретных ресурсов (css).</p></li>
  <li><p><em>icons</em> — папка для конкретных ресурсов (icons).</p></li>
  <li><p><em>META-INF -&gt; MANIFEST.MF</em>. Клик правой кнопкой мыши -&gt; Open with -&gt; Plug-in manifest editor. Открылся пользовательский редактор настроек плагина. Он объединяет в себе три файла из файловой структуры приложения (MANIFEST.MF, build.properties, plugin.xml).</p>
   <ul>
    <li><p><em>Overview</em> -&nbsp; страница обзора служит двойной цели:</p>
     <ul>
      <li><p>Он содержит два основных раздела, определяющих важные свойства плагина: «General Information»&nbsp; и «Execution Environments».</p></li>
      <li><p>Он работает как краткий справочник по разработке, тестированию и развертыванию плагинов, предоставляя разделы «Plug-in Content», «Extensions», «Testing» и «Exporting». Эти разделы содержат гиперссылки, при нажатии на которые можно переходить на другие страницы или вызывать команды.</p></li>
     </ul></li>
    <li><p><em>Plug-in Dependencies</em> — показаны зависимости вашего плагина от других плагинов. На этой странице вы должны перечислить все плагины, которые вы используете в своем проекте.&nbsp;</p></li>
    <li><p><em>Runtime</em> — показаны все пакеты, которые ваш плагин делает видимыми для других плагинов, а также библиотеки и папки, составляющие путь к классам среды выполнения подключаемого модуля.</p></li>
    <li><p><em>Extensions</em> — это центральный механизм, влияющий на поведение платформы. Тут есть один пункт, если его раскрыть, то мы увидим lifeCycleURI — то расширение, что создалось при генерации плагина. Оно позволяет нам следить за жизненным циклом плагина.</p></li>
    <li><p><em>Plug-in Extensions points</em> — определяют новые функциональные точки для платформы, к которым могут подключаться другие плагины.</p></li>
    <li><p><em>Build</em> — содержит всю информацию, необходимую для сборки, упаковки и экспорта плагина. Хотя он отображается как страница в редакторе манифеста, изменения, внесенные в него, записываются&nbsp; в файл build.properties. Файл build.properties управляет исключительно процессом сборки.</p></li>
    <li><p><em>MANIFEST.MF, build.properties, plugin.xml — </em>исходники. В них отображаются все те изменения, что мы вносили в предыдущих вкладках, плюс там есть доп.настройки, не вошедшие в пользовательский редактор и на этапе ознакомления с созданием приложения не используемые нами.&nbsp;</p></li>
   </ul></li>
  <li><p><em>test.product</em> — Клик правой кнопкой мыши -&gt; Open with -&gt; Product Configuration editor - именно этот файл – главный в нашем приложении. Из него мы запускаем приложение, в нем указаны все зависимости на приложение, начиная от плагина, что мы создали и его зависимостей (т.е. файл MANIFEST.MF — это настройки плагина, а файл test.product - настройки приложения), и до огромного количества плагинов, которые нужны для запуска платформы RCP.&nbsp;</p>
   <ul>
    <li><p><em>Overview</em> — содержит разделы&nbsp; «General Information», «Product Definition», определяющие основные свойства продукта, и разделы «Testing», «Exporting», в которых содержатся ссылки на тестирование и экспорт.</p></li>
    <li><p><em>Contents</em> -&nbsp; определяет все зависимости продукта.</p></li>
    <li><p><em>Configuration</em> — определяет информацию, которая создает файл конфигурации, необходимый для запуска продукта.</p></li>
    <li><p><em>Launching</em> — настраивается собственная программа запуска вашего продукта и аргументы запуска.</p></li>
    <li><p><em>Splash</em> -&nbsp; предоставляет возможность настроить экран-заставку вашего продукта.</p></li>
    <li><p><em>Branding</em> — придает продукту индивидуальность, настраивая изображения окон, диалоговое окно «О программе» и приветствие.</p></li>
    <li><p><em>Customization</em> — можно добавить свой файл свойств запуска продукта и свой css-файл настроек для внешнего вида приложения.&nbsp;</p></li>
    <li><p><em>Licensing</em> — на странице лицензирования вы можете добавить URL-адрес и текст лицензии для вашего продукта.</p></li>
    <li><p><em>Updates</em> — позволяет настроить обновление приложения из сторонних источников</p></li>
    <li><p><em>Source</em> — &nbsp;исходный вид файла test.product.</p></li>
   </ul></li>
  <li><p><em>Application.e4xmi</em> -&nbsp; описывает структуру приложения, может содержать как визуальные элементы (part, perspective, window), так и не визуальные (handler, command, addon). В сгенерированном примере есть и то и другое, можно посмотреть.</p></li>
 </ul>
 <h2>4. Заключение</h2>
 <p> При изучении технологии и дальнейшем ее использовании, я столкнулся с проблемой малого количества информации, ее фрагментарности и конечно же она была крайне устаревшей. И сформировать какое-то общее понимание того как это все работает, а не тупое использование заученных действий, оказалось крайне сложно. Поэтому в этой статье я постарался дать как можно более подробный контекст при создании приложения, для того чтобы вы могли избежать моих трудностей. Всего доброго.</p>
</div>', '2021-04-09 12:57:00', 'Desktop. Не популярный, но все еще живой. Eclipse Rich Client Platform (RCP e4)', 2, null, 8),
        (83, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <h2>Введение</h2>
 <p><a href="https://habr.com/ru/post/509626/" rel="noopener noreferrer nofollow">В прошлой статье</a> я попытался с генерировать тактирующий сигнал в ПЛИС на разных примитивах. Из всех рассмотренных вариантов генерации сигнала, самым адекватным получился&nbsp; клок с генерированный на&nbsp; блоках LUT. &nbsp;</p>
 <p><strong>Цель.</strong> В этот раз я хочу сгенерировать клок не на одном примитиве, а на цепочке примитивов. Допустим возьмем один инвертирующий LUT и некоторое количество LUT-повторителей для создания задержки сигнала. Так же хочется посмотреть как будет меняться частота сигнала в зависимости от температуры кристалла.</p>
 <p><strong>Исходные данные</strong></p>
 <p>В свое время приобрел с Китая плату EBAZ4205, с ПЛИС ZYNQ7010. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/647/7b2/5f5/6477b25f564c50c1072236980f550167.jpg" width="1200" height="1200">
  <figcaption></figcaption>
 </figure>
 <p>Как оказалось, некоторая часть компонентов была выпаяна(или не впаяна): диод по питанию, тактирующий кварц для ПЛИСовой части, пины подключения программатора и UART, слот под SD-карту.&nbsp; Изначально я планировал использовать встроенный XADC для определения температуры кристалла, но по закону подлости он так же оказался не подключенным. На рисунке я отметил пины которые требуются для работы встроенного XADC. Пины по питанию J9 и J10 замкнуты сами на себя через конденсатор, а пины VREF вовсе не подключены. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/705/5a7/650/7055a76507232efd7ff7dfa6363d964b.PNG" width="1243" height="536">
  <figcaption></figcaption>
 </figure>
 <p>Таким образом температуру померить внутренним XADC не получится. А это значит что набор для эксперимента дополняется мультиметром с термопарой, струбциной и парой проводов).</p>
 <h3> Эксперимент</h3>
 <p> <strong>Первая часть. </strong>С прошлого раза я понял, что замкнуть на себя цепочку лутов просто так не получится, придется писать различные ограничения, поэтому было решено пустить эту цепочку через внешние пины ПЛИС. Для того чтобы оценить влияние внешнего проводника(да и просто ради эксперимента), была набросана такая схема:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/b19/554/aa0/b19554aa02619671c0aadac5792a0e54.png" width="628" height="350">
  <figcaption></figcaption>
 </figure>
 <p>Сигнал CLK выдает 100 МГц и тактирует свой счетчик. Пины in_pin, out_pin снаружи замкнуты сами на себя&nbsp; проводником, а внутри соединены через инверсию. Длину этого проводника буду менять. И так, вот результаты этого этапа:</p>
 <div>
  <div class="table">
   <table>
    <tbody>
     <tr>
      <td><p>&nbsp;73.118 МГц</p></td>
      <td><p align="center">14 см</p></td>
     </tr>
     <tr>
      <td><p>55.914 МГц</p></td>
      <td><p align="center">49 см</p></td>
     </tr>
     <tr>
      <td><p>41.840 МГц (прямой &nbsp;провод)</p></td>
      <td rowspan="3"><p align="center">92 см</p></td>
     </tr>
     <tr>
      <td><p>51.417 МГц (катушка &nbsp;с сердечником)</p></td>
     </tr>
     <tr>
      <td><p>38.710 МГц (катушка &nbsp;без сердечника)</p></td>
     </tr>
     <tr>
      <td><p>37.830 МГц</p></td>
      <td><p align="center">170 см</p></td>
     </tr>
    </tbody>
   </table>
  </div>
 </div>
 <p>Первое что меня удивило в данном этапе, что сердечник увеличил частоту схемы, хотя я ожидал что ситуация будет обратной, все таки индуктивность увеличилась. Вот как это выглядело:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/016/155/4a6/0161554a6fe21a5cfe7fff1ff1f29e09.jpg" alt=" Синий провод и есть проводник длиной 14 сантиметров, его я заменял на другие провода различной длины." title=" Синий провод и есть проводник длиной 14 сантиметров, его я заменял на другие провода различной длины." width="3698" height="2281">
  <figcaption>
    Синий провод и есть проводник длиной 14 сантиметров, его я заменял на другие провода различной длины.
  </figcaption>
 </figure>
 <p><strong>Вторая часть. </strong>Во второй части я хочу посмотреть как меняется частота в зависимости от количество лутов, т.е. в этом эксперименте инверсию заменим на цепочку лутов в которой один из лутов инвертирующий. Структурная схема немного изменилась но не сильно, я добавил в проект клок визард чтобы управлять опорной частотой, для более точного измерения.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/04c/a79/fd7/04ca79fd757dc87f34beda4061dfba45.PNG" width="682" height="451">
  <figcaption></figcaption>
 </figure>
 <p>А вот и результаты, при внешнем проводе 14 см( +1 лут - это тот самый инвертирующий лут):</p>
 <div>
  <div class="table">
   <table>
    <tbody>
     <tr>
      <td data-colwidth="342" width="342"><p>4+1 лут. Базовая частота 100 МГц</p></td>
      <td><p>68.230 МГц</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>100+1 лут. Базовая частота 100 МГц</p></td>
      <td><p>13.881 МГц</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>1000 + 1 лут. Базовая частота 100 МГц</p></td>
      <td><p>1.466 МГц</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>1000 + 1 лут. Базовая частота 10 МГц</p><p>Подключил провод 170 см. результат не сильно изменился</p></td>
      <td><p>1.496 МГц</p><p>1.476 МГц(с проводом 170 см)</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>5000 + 1&nbsp; лут. Базовая частота 10 МГц</p></td>
      <td><p>0.274 МГц</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>11000 + 1лут Базовая частота 5 МГц.</p></td>
      <td><p>Не получилось собрать. Ругался на длинную цепочку лутов.</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>8000 + 1 лут. Базовая частота 5 МГц.</p></td>
      <td><p>Собралось, но чипскоп ни как не загружал данные из ПЛИС.</p></td>
     </tr>
     <tr>
      <td data-colwidth="342" width="342"><p>8000 + 1 лут.Базовая частота 10 МГц.</p></td>
      <td><p>0.166 МГц</p></td>
     </tr>
    </tbody>
   </table>
  </div>
 </div>
 <p><em>*Базовая частота эта та частота относительно которой я считал частоту, она же была частотой для ChipScope</em></p>
 <p><strong>Третья часть. </strong>И так, из проведенных предыдущих экспериментов, можно определиться с оптимальными параметра для третьего эксперимента, чтобы оценить зависимость частоты от температуры. Я возьму 8000 лутов и внешний провод 14 см. Доработав проект, получаю вот такую схему:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/284/42d/7c8/28442d7c86b7934551aed9f4d0a77c8d.PNG" width="966" height="487">
  <figcaption></figcaption>
 </figure>
 <p>Блок gen_trig генерирует сигнал каждую секунду, так же сигнал trig потребуется в чипскопе для сбора статистики. Блок cnt_lut считает такты с генерированные цепочкой лутов, по сигналу rst(непонятно почему он считает его инверсным) сбрасывается счетчик. А вот как заполнен кристалл данным проектом. Желтым отмечены все 8000 лутов, маджентой отмечены блоки чипскопа. Так же отметил где находятся пины на внешний проводник. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d66/d23/a88/d66d23a88f03333af8ab69c151f2ed4b.png" width="661" height="602">
  <figcaption></figcaption>
 </figure>
 <details class="spoiler">
  <summary>А вот как выглядит собраный макет эксперимента:</summary>
  <div class="spoiler__content">
   <figure class="full-width ">
    <img src="https://habrastorage.org/getpro/habr/upload_files/d46/4cc/fc0/d464ccfc0f21b28b58950ac5b754d0a2.jpg" width="4160" height="3120">
    <figcaption></figcaption>
   </figure>
   <figure class="full-width ">
    <img src="https://habrastorage.org/getpro/habr/upload_files/bfb/b5c/28d/bfbb5c28d742c5d3abb24d7f7bc5e167.jpg" width="3320" height="1856">
    <figcaption></figcaption>
   </figure>
  </div>
 </details>
 <p>На ПЛИС положил термопару, капнул термопасты, накрыл пленкой и прижал струбциной через несколько слоев картона. Картон нужен чтобы струбцина не стала радиатором. Кристалл максимум греется до 47 градусов при 17 минутах работы. Поэтому чипскоп настраиваю на захват 1024 окна по два отсчета, на каждый сигнал триггера, который предусмотрен в проекте. И так, результат эксперимента:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/37d/4d7/5d0/37d4d75d01b47d445a84181c4729ac2c.PNG" width="809" height="504">
  <figcaption></figcaption>
 </figure>
 <p>На графике видим изменение частоты каждую секунду. Частота меняется от 165217 Гц до 165589 Гц, при изменении температуры 25-46 градусов. В целом хотелось бы нагреть кристалл до 85 градусов. </p>
 <p>Первое, что меня удивило, так это повышение частоты с повышением температуры. &nbsp;Я ожидал, что частота станет меньше, либо в вообще меняться не будет, но я ни как не ожидал, что частота поднимется вместе с температурой.</p>
 <h3>Заключение</h3>
 <p>В статье продемонстрировал результат трех экспериментов, по которым можно сделать следующие выводы: </p>
 <ol>
  <li><p>Зависимость частоты от длины проводника не линейная. Возможно потому, что задержка внутри плис и задержка на проводнике приблизительно равны. </p></li>
  <li><p>Зависимость частоты от количества лутов&nbsp; так же не линейна. Причем слишком уж сильно не линейна. </p></li>
 </ol>
 <details class="spoiler">
  <summary>Тут пара графиков зависимостей частоты от количества лутов(ось Y - значение частоты).</summary>
  <div class="spoiler__content">
   <figure class="full-width ">
    <img src="https://habrastorage.org/getpro/habr/upload_files/2a5/c2b/b41/2a5c2bb41c1bd1a071da88d3aa1d3f95.PNG" width="562" height="489">
    <figcaption></figcaption>
   </figure>
   <figure class="full-width ">
    <img src="https://habrastorage.org/getpro/habr/upload_files/cc6/5d3/ee3/cc65d3ee3783af21991f2f7693445c82.png" width="1177" height="338">
    <figcaption></figcaption>
   </figure>
   <p>Сырые данные последнего графика если кому надо: </p>
   <div class="table">
    <table>
     <tbody>
      <tr>
       <td><p>5</p></td>
       <td><p>68,23</p></td>
      </tr>
      <tr>
       <td><p>6</p></td>
       <td><p>52,33</p></td>
      </tr>
      <tr>
       <td><p>21</p></td>
       <td><p>32,285</p></td>
      </tr>
      <tr>
       <td><p>41</p></td>
       <td><p>24,326</p></td>
      </tr>
      <tr>
       <td><p>56</p></td>
       <td><p>19,663</p></td>
      </tr>
      <tr>
       <td><p>71</p></td>
       <td><p>15,657</p></td>
      </tr>
      <tr>
       <td><p>86</p></td>
       <td><p>16,056</p></td>
      </tr>
      <tr>
       <td><p>96</p></td>
       <td><p>13,277</p></td>
      </tr>
      <tr>
       <td><p>101</p></td>
       <td><p>13,881</p></td>
      </tr>
      <tr>
       <td><p>121</p></td>
       <td><p>10,499</p></td>
      </tr>
      <tr>
       <td><p>141</p></td>
       <td><p>10,104</p></td>
      </tr>
      <tr>
       <td><p>161</p></td>
       <td><p>6,443</p></td>
      </tr>
      <tr>
       <td><p>181</p></td>
       <td><p>7,268</p></td>
      </tr>
      <tr>
       <td><p>201</p></td>
       <td><p>6,331</p></td>
      </tr>
      <tr>
       <td><p>301</p></td>
       <td><p>4,484</p></td>
      </tr>
      <tr>
       <td><p>401</p></td>
       <td><p>3,315</p></td>
      </tr>
      <tr>
       <td><p>501</p></td>
       <td><p>2,791</p></td>
      </tr>
      <tr>
       <td><p>601</p></td>
       <td><p>2,49</p></td>
      </tr>
      <tr>
       <td><p>701</p></td>
       <td><p>2,042</p></td>
      </tr>
      <tr>
       <td><p>801</p></td>
       <td><p>1,753</p></td>
      </tr>
      <tr>
       <td><p>901</p></td>
       <td><p>1,629</p></td>
      </tr>
      <tr>
       <td><p>1001</p></td>
       <td><p>1,496</p></td>
      </tr>
      <tr>
       <td><p>1401</p></td>
       <td><p>1,029</p></td>
      </tr>
      <tr>
       <td><p>1801</p></td>
       <td><p>0,797</p></td>
      </tr>
      <tr>
       <td><p>2201</p></td>
       <td><p>0,655</p></td>
      </tr>
      <tr>
       <td><p>2601</p></td>
       <td><p>0,537</p></td>
      </tr>
     </tbody>
    </table>
   </div>
  </div>
 </details>
 <p> 3. Зависимость частоты от температуры оценить трудно, так как не получается однозначно сопоставить значение частоты и температуре. Для этого нужен XADC. </p>
</div>', '2021-04-14 10:00:00', 'Генерация клока на примитиве LUT', 21, null, 4),
        (84, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <blockquote>
  <p><em>— Как, и он тоже singleton? А я думала, что он нормальный!</em></p>
  <p><em>— Сколько раз тебе повторять, что слова singleton, mediator, decorator и даже prototype никакого отношения к ориентации кода не имеют?</em></p>
  <p><em>(разговор вызова курильщика и вызова нормального программиста)</em></p>
 </blockquote>
 <p>Всем привет, я <a href="https://www.facebook.com/my.kravets" rel="noopener noreferrer nofollow">Максим Кравец</a>, CEO команды веб-инженеров Holyweb, адептов JavaScript. И сегодня хочу поговорить о паттернах проектирования. </p>
 <p>Давайте взглянем на маленький кусочек кода:</p>
 <pre><code>@Injectable()
export class SomeClass implements SomeInterface {
  private currentData: Data
 
 setData() {
      this.currentData = new Data()
}</code></pre>
 <p>Попробуйте найти разработчика, который прочитает этот фрагмент следующим образом: «Мы воспользуемся структурным паттерном decorator для обеспечения возможности внедрения методов нашего SomeClass в другие классы посредством Dependency Injection, в методе setData нашего класса применим порождающий паттерн Builder посредством new и в приватное поле currentData положим...»</p>
 <p>Паттерны живут в нашем коде. Паттерны бывают порождающие, структурные, поведенческие. Мы ими пользуемся, даже не акцентируя на этом внимание, а строгие формулировки вспоминаем порой лишь при подготовке к собеседованию. Паттернов у программиста — что жен в гареме султана. И как те самые жены — они не очень любят, когда про них забывают и ими пренебрегают. И тогда наш код начинает делать нам нервы.</p>
 <p>Так что сами — вспомним. А тем, кто еще не знает — расскажем. И начнем с паттерна, которому впору присвоить звание «нелюбимой жены султана». Можно даже встретить мнение, что его бездумное использование — безвкусица, дурной тон и вообще антипаттерн. Наш сегодняшний рассказ посвящен синглтону (паттерн Singleton).</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/63a/334/1a1/63a3341a140b28e312e0590ba9c5984b.png" width="1920" height="1080">
  <figcaption></figcaption>
 </figure>
 <h2>Часть первая. Детективная. Ограбление, которого не было </h2>
 <p>Идея паттерна Singleton очень проста — на все приложение создается один-единственный инстанс класса, и при любом обращении возвращается именно этот инстанс. Техническая реализация паттерна также укладывается в одно предложение описания и одну строку кода:&nbsp;</p>
 <p><strong>описание:&nbsp;</strong></p>
 <p>Реализация должна скрыть конструктор класса и предоставить публичный статический метод, контролирующий жизненный цикл инстанса</p>
 <p><strong>код метода, контролирующего жизненный цикл:</strong></p>
 <pre><code>public static getInstance(): SingletonClassName { 
    !instance ? instance = new SingletonClassName : instance
}</code></pre>
 <p>Все это прекрасно, но зачем он нужен вообще? Ведь инстансы придумали не зря! Пусть у каждого компонента нашего приложения будет свой инстанс, которым он волен распоряжаться по своему усмотрению! Окей, давайте представим…</p>
 <p>У вас есть семья (приложение), у семьи есть единый банковский счет (база данных) и несколько карт, привязанных к этому счету (инстансов класса, предоставляющего подключение к базе данных). На счету — 100 рублей (данные).&nbsp;&nbsp;</p>
 <p>Вы и супруга (или супруг и вы) одновременно помещаете свои карточки в банкоматы и просите снять 100 рублей. Счет одномоментно получает два требования на списание, параллельно проводит две проверки на наличие средств, получает два подтверждения что такая сумма есть и параллельно списывает 100 рублей. Вы забираете из банкоматов каждый по сто рублей, забираете карточки…</p>
 <p>Хорошо бы, но нет)) Даже весьма условный пример выше объясняет, почему в один момент времени к базе просто необходимо только одно подключение. Окей, но нас же (компонентов) несколько? Ждать очереди? Давайте еще немного напряжем воображение.</p>
 <p>Теперь мы общаемся с банком (базой данных) по телефону. У нас только одна линия, и если кто-то еще попробует позвонить — услышит короткие гудки. Но нас же двое? Поступаем самым очевидным образом — включаем на своей стороне громкую связь! Как итог, линия связи одна (подключение). Телефон на нашей стороне один (инстанс), но пользоваться им могут все (различные компоненты нашего приложения...), находящиеся в комнате с телефоном (...имеющие доступ к инстансу).</p>
 <p>Мы только что создали синглтон в отдельно взятой ячейке общества, заодно определившись с тем, когда он нужен и как с ним работать. Ну что ж, давайте познакомимся с ним поближе.&nbsp;</p>
 <h2>Часть вторая. Романтическая. Продемонстрируем синглтону заинтересованность в нем </h2>
 <p>Singleton — это порождающий шаблон (паттерн), гарантирующий, что в однопоточном приложении будет только один экземпляр (инстанс) некоего класса, предоставляющий точку доступа к этому экземпляру.&nbsp;</p>
 <pre><code>// создадим класс 
class DataBase {
// объявим статическое поле для хранения объекта Singleton-а
private static instance

// сделаем приватным конструктор, чтобы никто не имел возможности
// самостоятельно создавать инстансы нашего класса через new
private constructor() {
  // здесь мы инициализируем подключение к базе данных
  ….
  // укажем, что инстанса изначально нет
  this.instance = null
}
// создадим доступную извне альтернативу конструктору
// для того, чтобы обеспечить точку доступа к инстансу Singleton-а
public static getInstance() {
if ( this.instance === null ) {
// если инстанса нет, создаем его
 this.instance = new DataBase()
}

// отдадим инстанс тому, кто запрашивал
return this.instance
}
// для примера создадим метод query для формирования
// запросов к базе данных
public getQuery(payload) {
	// здесь реализуем логику запроса
	...
}
}

// создадим обращающийся класс
class AppModule {
	// метод запроса к базе
	Data() {		
		// объявим два подключения
		let foo = DataBase.getInstance()
		let bar = DataBase.getInstance()

		// foo содержит тот же объект,
		// что и bar
		foo.getQuery("SELECT ...")
		bar.getQuery("SELECT ...")
}
}</code></pre>
 <p>Фактически, Singleton предоставляет глобальную точку доступа, но в отличие от простых глобальных переменных, которые также могут использоваться для решения этой задачи, Singleton скрывает от внешнего пользователя методы конструктора и тем самым гарантирует, что никакой сторонний код не сможет подменить данные.</p>
 <p>Лучший друг Singletonа — это TypeScript, потому что он дает возможность обращаться через интерфейсы, существенно расширяя базовую функциональность.</p>
 <p>Кроме того, несомненным плюсом Singleton является то, что он может быть создан «по запросу» — не при инициализации приложения, а при первом обращении. Однако тут следует быть осторожным и не забывать, что если объект нужен уже при инициализации, он может быть затребован раньше, чем будет создан.</p>
 <p>Выбирая Singleton, стоит также помнить, что небрежное использование глобальных объектов может приводить к проблемам масштабируемости, контроля за многопоточностью, написания модульных тестов и в целом следования принципам TTD.</p>
 <p>Так что же делать? Да то же, что и со всеми остальными паттернами! Использовать, помня о его несомненных плюсах, но не забывая о недостатках. Тем более, что проблемы с тестированием решаются с помощью методов внедрения зависимостей (DI), а при необходимости увеличить количество инстансов (отойти от паттерна Singleton) потребуется переписать всего один метод, отвечающий за доступ к инстансу.</p>
 <h2>Часть третья. Жизненная. Если б я был султан, я б имел трех жен? </h2>
 <p>Подведем итоги. Паттерн Singleton — мощный, а порой просто незаменимый инструмент в руках разработчика. Если использовать его по назначению. Микроскопом, как известно, тоже можно гвозди заколачивать, но вряд ли кто оценит. Так и с Singletonом. Ну а чтобы не запутались, вот вам сводная табличка: </p>
 <div>
  <div class="table">
   <table>
    <tbody>
     <tr>
      <td data-colwidth="369" width="369"><p><strong>Преимущества </strong></p></td>
      <td><p><strong>Недостатки</strong></p></td>
     </tr>
     <tr>
      <td data-colwidth="369" width="369"><p>Гарантирует наличие единственного инстанса класса. </p></td>
      <td><p>Маскирует плохую архитектуру. </p></td>
     </tr>
     <tr>
      <td data-colwidth="369" width="369"><p>Реализует отложенную инициализацию.</p></td>
      <td><p>Нарушает принцип единственной ответственности класса.</p></td>
     </tr>
     <tr>
      <td data-colwidth="369" width="369"><p>Предоставляет глобальную точку доступа.</p></td>
      <td><p>Создает проблемы контроля многопоточности.</p></td>
     </tr>
    </tbody>
   </table>
  </div>
 </div>
 <p>Отдельно стоит отметить, что Singleton может быть «включен» в состав других паттернов. Например, фасад нередко выступает в приложении в одиночку и может быть реализован как Singleton. Так же большая часть абстрактных классов при необходимости легко приводятся к виду Singletonа.</p>
 <p>В общем, постарайтесь подружиться с этим полезным одиночкой, а мы тем временем подготовим рассказ о следующем паттерне. Впрочем, если вы уже считаете себя магистром Йодой в разработке или на пути к этому званию, тоже будет здорово познакомиться: пишите в Telegram <a href="https://t.me/maximkravec" rel="noopener noreferrer nofollow"><u>@maximkravec</u></a>.&nbsp;</p>
 <p>Есть что дополнить? Оставляйте комментарии! Самые интересные мы добавим в статью, чтобы сделать ее лучше.</p>
</div>', '2021-04-15 16:33:00', 'Security с характером, или еще несколько слов о паттерне Singleton', 45, null, 9),
        (85, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Всем привет! Сегодня будет знакомство с новым сервисом из линейки сервисов Microsoft 365, под названием Microsoft Viva. А если быть точнее, то с целой линейкой сервисов. Посмотрим, что это такое, а один из них даже попробуем установить. Думаю, что будет интересно.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/sb/sc/gd/sbscgdkfboxnynfe2mzyjrtjbia.jpeg">
 <br> 
 <br> 
 <h4>Что такое Microsoft Viva?</h4>
 <br> Microsoft Viva это набор возможностей сервисов Microsoft 365, объединенных для решения задач коммуникаций, обмена знаниями, сбора информации и ряда других задач. По сути, Microsoft Viva предоставляет возможности взаимодействия с сотрудниками в нескольких ключевых областях и для решения этих задач предлагает продукты:
 <br> <a name="habracut"></a>
 <br> 
 <ul> 
  <li>Viva Connections – сочетание спектра возможностей корпоративного портала SharePoint Online в приложении Teams с множеством дополнительных сервисов. Viva Connections предоставляет единую персонализированную ленту, в которой сотрудники могут изучать новости и участвовать в беседе. При этом можно работать как в интерфейсе Microsoft Teams, так и в отдельном мобильном приложении.</li> 
  <li>Viva Insights – отчеты и советы по персональной и организационной продуктивности, основанные, в первую очередь, на сервисе MyAnalytics, а также на аналитических материалах сторонних платформ.</li> 
  <li>Viva Topics – использование искусственного интеллекта для анализа данных, хранящихся в SharePoint Online, и создания различных информационных страниц по разнообразным темам. </li> 
  <li>Viva Learning – корпоративная обучающая платформа, которая предоставляет сотрудникам в Microsoft Teams собственный и сторонний обучающий контент.</li> 
 </ul>
 <br> В сегодняшней небольшой статье речь у нас с Вами пойдет о Viva Connections. Попробуем развернуть данный сервис и разобраться что он из себя представляет.
 <br> 
 <br> 
 <h4>Как установить Microsoft Viva Connections</h4>
 <br> В первую очередь необходимо установить SharePoint Online Home Site. Для этого необходимо создать новый информационный сайт SharePoint Online в центре администрирования или воспользоваться одним из шаблонов Microsoft LookBook.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/dz/ib/ed/dzibedsluwxjekoi4hf0vzo4vei.png">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/4p/bi/jz/4pbijzkkvcck7wygcw4_5ec2pkq.png">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/7a/s9/ds/7as9dsuroiteihne9iyuj_wr96m.png">
 <br> 
 <br> После того как сайт будет создан, необходимо сделать его домашним сайтом для Вашей организации. Для этого скачиваем и устанавливаем последний SharePoint Online Management Shell, подключаемся к админке SharePoint Online и выполняем привязку домашнего сайта.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/bx/kd/to/bxkdtoyldtqn_-cpazn0je__dlk.png">
 <br> 
 <br> Примеры командлетов:
 <br> 
 <br> 
 <pre><code class="powershell">Install-Module -Name Microsoft.Online.SharePoint.PowerShell -force
Connect-SPOService -Url https://doctrix-admin.sharepoint.com -Credential a.braun@i-sys.ru
Set-SPOHomeSite -HomeSiteUrl https://doctrix.sharepoint.com/sites/sharepoint-home-site </code></pre>
 <br> 
 <br> Далее, скачиваем скрипт для установки Microsoft Viva Connections (<a href="https://www.microsoft.com/en-us/download/confirmation.aspx?id=102888" rel="nofollow noopener noreferrer">ссылка</a>), открываем в PowerShell и запускаем установку. Скрипт после запуска потребует указать адрес сайта, который будет подцеплен к приложению Viva Connections в Microsoft Teams. Указываем наш адрес сайта. Вводим учетные данные администратора, вводим имя будущего приложения, а также указываем все необходимые данные, такие как краткое и полное описание приложения, прикладываем ссылки на иконки и так далее.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/vw/5j/-b/vw5j-bsrybs1uyph4gxeyu7psrq.png">
 <br> 
 <br> После выполнения скрипта создается zip файл приложения Viva. В моем случае, почему то, на рабочем столе. Хватаем этот zip файл и импортируем в приложения Teams.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/mr/bt/ug/mrbtugf7oqp7-j05bbw8fkb8avw.png">
 <br> 
 <br> Результат получается следующим.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/k6/qb/lp/k6qblp0k7pks7xaua344cdlu9lc.png">
 <br> 
 <br> Дополнительно, в центре администрирования Microsoft Teams в разделе Setup Policies можно указать это приложение как автоматически устанавливаемое и закрепленное в левой панели для всех сотрудников организации.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/_i/nx/vp/_inxvpq9tuwq8uu4_jh9-te9die.png">
 <br> 
 <br> Одной из ключевых фишек Viva Connections является управляемая глобальная навигация, доступная уже сейчас, а также мобильное приложение для Android и iOS устройств, которое должно выйти в ближайшее время.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/q9/oo/xp/q9ooxpvw_xiopvwrwcgbd2nlxi0.png">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/yh/vi/fl/yhviflc1ihdavjcfhqgqyqmaseg.png">
 <br> 
 <br> Основная задача Microsoft Viva Connections — создать единую точку входа в корпоративный портал организации, посредством микса доступных возможностей Microsoft 365. И универсальное приложение для Teams и мобильных устройств может обеспечить эту точку входа. Далее, с приложения-портала пользователи могут уже переходить на сайты своих подразделений, общедоступные сервисы компании, недавние документы и различные другие области.
 <br> 
 <br> В итоге Microsoft Viva Connections это набор компонентов Microsoft 365, которые предоставляют пользователям доступ к возможностям порталов SharePoint Online со всеми имеющимися преимуществами. Просмотр новостей, видео, недавних сайтов и документов, переход к страницам баз знаний и многое другое. При этом сайт SharePoint Online можно настроить таким образом, чтобы он покрывал все необходимые требования вашей организации к порталу. PowerShell скрипт позволяет быстро создать такое приложение, импортировать в Teams и закрепить у каждого пользователя в панели действий на клиенте. Viva Connections доступен всем клиентам в рамках существующей лицензии Microsoft 365.
 <br> 
 <br> Viva Connections позволяет:
 <br> 
 <br> 
 <ul> 
  <li>Собирать новости и беседы из SharePoint Online и Yammer.</li> 
  <li>Настраивать панели мониторинга с помощью Power Apps, SPFx и прочих решений.</li> 
  <li>Закреплять файлы и видео из Microsoft OneDrive и Microsoft Stream.</li> 
  <li>Использовать информацию из календарей и погодных сервисов.</li> 
  <li>Отображать документы из библиотек и списков SharePoint Online.</li> 
 </ul>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/rd/tc/gm/rdtcgmlsvef1ntznz37tutd1u0k.png">
 <br> 
 <br> Данный сервис Microsoft Viva Connections представляет собой небольшую часть экосистемы Microsoft Viva, в которую входит множество сервисов по организации коммуникаций и обмена данными между пользователями в компании. И в следующих статьях мы обязательно посмотрим остальные сервисы. Спасибо за внимание!
</div>', '2021-04-16 16:05:00', 'Microsoft Viva Connections. Развертывание платформы для внутренних коммуникаций', 4, null, 8),
        (86, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <blockquote>
  <p>В преддверии старта курса <a href="https://otus.pw/WP2w/"><strong>"IT-Recruiter"</strong></a> подготовили перевод материала, который содержит рекомендации по подготовке к первичному собеседованию.<br><br>Приглашаем также всех желающих на открытое демо-занятие <a href="https://otus.pw/kcxP/"><strong>«Как из человека сделать IT-рекрутера».</strong></a> На вебинаре участники вместе с экспертом обсудят, как апгрейдить обычного рекрутера до IT и поделятся полезными ресурсами для развития:<br>- топ познавательных, обучающих и развлекательных блогов и подкастов про IT и IT-рекрутинг;<br>- конференции, митапы, мастер-классы и просто интересные ивенты для IT-рекрутеров;<br>- интересные книжки про IT и людей в индустрии;<br>- зачем и как IT-рекрутеру читать Habr.</p>
 </blockquote>
 <hr>
 <h2>Знаете ли вы, на чем следует сосредоточиться, или вы изматываете себя подготовкой? </h2>
 <p>Как вы себя ощущаете, когда у вас на носу телефонное собеседование: измотаны переподготовкой или четко знаете, на чем нужно сосредоточиться?</p>
 <p>Я помог многим своим друзьям пройти стадию телефонного собеседования и перейти наконец к заключительному раунду очных собеседований в технологических компаний, просто помогая им понять, к чему нужно готовиться.</p>
 <h3>Вам это кажется знакомым?</h3>
 <p>Ваш отклик на вакансию прошел этап отбора резюме (поздравляю!). Рекрутер отправляет вам электронное письмо с предложением договориться о вашем первом телефонном собеседовании.</p>
 <h3>Вы сразу же с головой ныряете в подготовку. Это неправильно!</h3>
 <p>Я все время замечаю за своими друзьями такое поведение. Как только они получают электронное письмо от рекрутера с просьбой назначить собеседование, они сразу же начинают бурную деятельность:</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9f0/560/954/9f0560954aba314b1320ad7301c857b7.png" width="400" height="300">
  <figcaption></figcaption>
 </figure>
 <p><em>Мне нужно выписать КАЖДЫЙ факт о работе, которой я занимался, и мне нужно ЗАПОМНИТЬ все это!</em></p>
 <p><em>Мне нужно выучить JAVASCRIPT за ОДНУ НЕДЕЛЮ!</em></p>
 <p><em>Мне нужно КУПИТЬ НОВЫЙ ТЕЛЕФОН,</em><strong><em> </em></strong><em>чтобы мой голос звучал лучше!</em></p>
 <h3>Что вам нужно, так это немного расслабиться и начать задавать вопросы</h3>
 <p><strong>Рекрутеры — ваши союзники, которые могут предоставить полезную информацию.</strong></p>
 <p>Команда по подбору персонала с радостью поможет вам сориентироваться в процессе собеседования. Это означает, что вы можете (и должны!) задавать им вопросы о предстоящем интервью.</p>
 <h3>Выясните, что вам нужно подготовить</h3>
 <ul>
  <li><p><strong>Кто будет вас собеседовать по телефону?</strong> Это hr? Это коллега из команды, к которой вы хотите присоединиться?</p></li>
 </ul>
 <ul>
  <li><p><strong>Какого рода собеседование у вас будет?</strong> Это поведенческое интервью? Это кейс-интервью?</p></li>
 </ul>
 <ul>
  <li><p><strong>Какова основная цель этого собеседования? </strong>Оно будет сосредоточено на вашем опыте? Или основное внимание будет уделено вашим аналитическим способностям?</p></li>
 </ul>
 <ul>
  <li><p><strong>К каким дополнительным вещам вам следует подготовиться? </strong>Стоит ли вам сосредоточиться на новых продуктах, выпущенных компанией? Стоит ли вам узнать больше о финансовых показателях компании?</p></li>
 </ul>
 <p>Знание ответов на эти вопросы сэкономит вам время, снимет душевное беспокойство и, что наиболее важно, даст вам больше шансов пройти это телефонное собеседование.</p>
 <p>Вы можете задать рекрутеру следующие вопросы.</p>
 <h3>4 вопроса, которые можно задать рекрутеру перед телефонным собеседованием</h3>
 <h4>1. С кем я буду общаться?</h4>
 <p>Если ваш рекрутер еще не сказал вам это, задайте этот вопрос. Вы узнаете имя интервьюера и, скорее всего, его должность. Это поможет вам поставить себя на место интервьюера.</p>
 <p>Если ваш интервьюер является частью команды продаж, собеседование будет проходить немного под другим углом, нежели если вас будет интервьюировать кто-то из команды аналитиков. <strong>Располагая этой информацией, подумайте, какой опыт вы хотите выделить, чтобы он нашел отклик у вашего интервьюера.</strong></p>
 <p>По имени интервьюера вы можете найти его в LinkedIn, чтобы познакомиться с его опытом и биографией. Телефонные интервью с человеком, которого вы никогда не встречали и не можете видеть лицом к лицу, — это достаточно сложно. Проведите небольшое исследование, чтобы понять, кто этот человек, и это поможет вам уменьшить беспокойство при разговоре по телефону с незнакомцем, который вас оценивает.</p>
 <h4>2. Какого типа собеседование мне следует ожидать?</h4>
 <p>Если ваше собеседование по телефону будет общим поведенческим собеседованием, вы должны подготовиться к ситуационным вопросам, например: «Расскажите мне о случае, когда вам пришлось повлиять на члена команды, чтобы продвинуть вашу идею».</p>
 <p>Если это аналитика или кейс-интервью, вам могут задать такие вопросы, как «как вы оцениваете, сколько бронирований обрабатывает Airbnb за один год?» или «как бы вы улучшили монетизацию Snapchat?»</p>
 <p>Если это собеседование, посвященное продукту, вас могут попросить перечислить ваши любимые продукты, объяснить, почему и как вы могли бы их улучшить.</p>
 <p>Знание типа собеседования поможет вам определить, какой области следует уделить особое внимание при подготовке.</p>
 <h4>3. На чем конкретно будет сосредоточено это собеседование?</h4>
 <p>Этот вопрос связан с предыдущим вопросом, но вы можете использовать его, чтобы конкретизировать для себя, как интервьюер будет вас оценивать. Каждое интервью преследует определенную цель. Здесь может быть что угодно, например: есть ли у вас соответствующий опыт? Хорошая ли у вас интуиция в своей области?</p>
 <p>Опять же, этот вопрос поможет вам сузить круг тем, которые нужно подготовить. Время ограничено, не тратьте время на подготовку к тому, по чему вас не будут оценивать.</p>
 <h4>4. Стоит ли мне подготовить какую-либо конкретику?</h4>
 <p>Это хороший общий вопрос. Рекрутер может дать вам дополнительную информацию или подробности, которые могут оказаться чрезвычайно полезными. Они могут сказать что-то вроде:</p>
 <blockquote>
  <p><em>Мы действительно ищем кого-то с сильным аналитическим опытом. Было бы полезно, если бы у вас были примеры, когда вам приходилось работать со сложными данными, чтобы принять решение.</em></p>
  <p>или</p>
  <p><em>Мы хотим знать, насколько хорошо вы работаете с командой разработки и насколько хорошо вы работаете над техническими проектами.</em></p>
 </blockquote>
 <h3>Рекрутер может помочь вам проявить себя наилучшим образом, это часть его работы!</h3>
 <p>Вот реальной пример из жизни. Мой друг Брэндон использовал эти вопросы, чтобы подготовиться к телефонному собеседованию в довольно известной технологической компании. Он прошел телефонное собеседование и отправился на очное собеседование.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/665/973/c97/665973c978d6b88957f22d7e05ad1785.png" alt="" title="" width="1482" height="734">
  <figcaption></figcaption>
 </figure>
 <p><em>Перевод:</em></p>
 <p>Брэндон:&nbsp;Привет, ###! Меня устраивает! Какого типа собеседование мне следует ожидать? Что конкретно я должен подготовить? Спасибо!</p>
 <p>Рекрутер: Привет, ###! Ожидайте, что это будет похоже на разговор с ###. Внимание будет сосредоточено на прошлом опыте и, в данном случае, могут быть вопросы по стратегии и/или анализу. Дайте мне знать, если у вас возникнут дополнительные вопросы, ###.</p>
 <p>Обратите внимание — рекрутер подсказал Брэндону<strong>, что именно следует подготовить. </strong>Все, что нужно было сделать Брэндону, — это задать два вопроса в коротком письме.</p>
 <h3>Не распыляйтесь, готовясь к собеседованию. Сосредоточьтесь</h3>
 <p>Убедитесь, что вы готовитесь к правильным вещам. Не пытайтесь подготовиться ко всем возможным сценариям телефонного собеседования, изматывая себя. Выясните, на чем будет сосредоточено собеседование, буквально спросив: «На чем будет сосредоточено собеседование?»</p>
 <h4>Просто спросите!</h4>
 <hr>
 <blockquote>
  <p>Узнать подробнее о курсе<strong> </strong><a href="https://otus.pw/WP2w/"><strong>"IT-Recruiter"</strong></a>.</p>
  <p>Смотреть вебинар <a href="https://otus.pw/kcxP/"><strong>«Как из человека сделать IT-рекрутера».</strong></a> </p>
 </blockquote>
</div>', '2021-04-19 16:59:00', 'Вопросы, которые вам следует задать рекрутеру, чтобы успешно пройти телефонное собеседование', 5, null, 6),
        (87, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/er/oo/_a/eroo_a2rmyimid2bnuy1wiv4okc.jpeg">
 <br> <i>Сайт несуществующей компании SecuriElite</i>
 <br> 
 <br> В январе 2021 года специалисты Google Threat Analysis Group (TAG) <a href="https://blog.google/threat-analysis-group/new-campaign-targeting-security-researchers/">рассказали</a> об атаке на исследователей ИТ-безопасности по всему миру. Теперь опубликованы <a href="https://www.hackread.com/hackers-fake-cyber-security-firm-infosec-experts/">некоторые подробности</a> этой необычной операции.
 <br> 
 <br> Злоумышленники использовали новые 0-day, которые срабатывают в последних версиях Windows 10 и Chrome. Кроме того, исследователям предлагали поучаствовать в совместном проекте Visual Studio и по их запросу предоставляли DLL якобы с кодом эксплоита (<a href="https://www.virustotal.com/gui/file/4c3499f3cc4a4fdc7e67417e055891c78540282dccc57e37a01167dfe351b244/detection">хэш DLL на VirusTotal</a>). Такой вектор социальной инженерии встречается впервые в мире.
 <br> <a name="habracut"></a>
 <br> Как показало расследование, хакерская группа контактировала с исследователями безопасности через поддельные аккаунты в социальных сетях Twitter и LinkedIn.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/by/tu/iq/bytuiq9kici_i1wzqy7z4ssa8g0.jpeg">
 <br> 
 <img src="https://habrastorage.org/webt/xg/6z/r8/xg6zr8zda6k5jmrymfv-cm1zxlw.jpeg">
 <br> <i>Фейковые профили пользователей LinkedIn и Twitter</i>
 <br> 
 <br> Более того, они создали поддельную компанию под названием SecuriElite, которая базируется в Турции и якобы приглашает экспертов по безопасности. Как сообщается, компания предлагает услуги offensive security, включая «пентесты, оценку безопасности программного обеспечения и эксплоиты».
 <br> 
 <br> В общей сложности Google идентифицировала восемь аккаунтов Twitter и семь профилей LinkedIn, которые участвовали в операции. Блог с интересной информацией на тему ИБ для привлечения целевой аудитории был запущен в 2020 году.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/4p/vr/by/4pvrbytrnmj1b0hugf0w6-hkzek.png">
 <br> <i>Блог с интересной информацией для привлечения исследователей по безопасности</i>
 <br> 
 <br> Для операции были зарегистрированы профили на ряде платформ, включая Telegram, Keybase и Discord, чтобы общаться с исследователями и завоевать их доверие.
 <br> 
 <br> 14 января 2021 года злоумышленники опубликовали в Twitter и на YouTube видео с демонстрацией эксплоита для недавно закрытой уязвимости в Windows Defender (CVE-2021-1647).
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/jg/vx/gc/jgvxgcarantaaiwtrcqnim0ckt0.png">
 <br> 
 <br> Если кто-то из исследователей по безопасности заглотил наживку, ему предлагали поучаствовать в совместном проекте Visual Studio. Это новый метод социальной инженерии, который ранее ещё не встречался.
 <br> 
 <br> 
 <div class="oembed">
  <iframe allowfullscreen id="6071789329e351865d365454" src="https://embedd.srv.habr.com/iframe/6071789329e351865d365454"></iframe>
 </div>
 <br> Хакеры обещали, что в проекте Visual Studio будет код эксплоита, показанного на видео, и предоставляли DLL, которая исполнялась через Visual Studio Build Events. Сразу после этого она устанавливала соединение с удалённым командным сервером.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/yt/vh/ie/ytvhieke2oo0wk8j_1sa-edl2-a.png">
 <br> 
 <br> Сайт SecuriElite запустили 17 марта 2021 года. До этого атака велась только через блог.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/dg/uu/gs/dguugslu-odh6mndpibtxbbfcxk.png">
 <br> 
 <br> Корейские коллеги уже <a href="https://enki.co.kr/blog/2021/02/04/ie_0day.html">определили уязвимость 0-day, через которую эксплоит срабатывал в Internet Explorer</a>. О других браузерах информации пока нет.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/6a/kq/ta/6akqtai60_bnhe1x2z8qi4ejgyc.png">
 <br> 
 <br> Кроме сайта, атака велась через официальный блог <code>blog.br0vvnn[.]io</code>. Ранее сообщалось, что эксплоит <a href="https://blog.google/threat-analysis-group/new-campaign-targeting-security-researchers/">срабатывает в последних версиях Windows 10 и Chrome со всеми патчами</a>. Сейчас антивирусы уже начали его распознавать.
 <br> 
 <br> Если избранных жертв индивидуально приглашают на заражённый сайт, то это таргетированный фишинг. Если жертва сама нашла «новый интересный сайт», то это немного похоже на <a href="https://en.wikipedia.org/wiki/Watering_hole_attack">атаку типа watering hole</a> (когда взламывается настоящий сайт, которым пользуется целевая группа). Наверное, в данном случае можно говорить о гибридной технике.
 <br> 
 <br> Пока непонятно, с какой целью на компьютеры специалистов устанавливали бэкдоры. Возможно, злоумышленники искали информацию о новых 0-day. Это ценный товар на чёрном рынке. Сведения о багах в популярном ПО продаются за сотни тысяч долларов. Уязвимости эксплуатируются несколько месяцев или лет, пока о них не становится известно широкой публике. Если хакер находит серьёзную уязвимость в Windows или iOS — он может обеспечить себе безбедное существование на годы вперёд и пожизненный авторитет в сообществе.
 <br> 
 <br> Теоретически, жертвой нацеленной атаки может стать каждый, даже эксперт по безопасности, если он не использует для выхода в интернет отдельный компьютер. Антивирусные программы здесь не помогут, скорее наоборот: зачастую они увеличивают поверхность атаки и <a href="https://habr.com/ru/post/401059/">ухудшают безопасность системы</a>.
 <br> 
 <br> Google Threat Analysis Group <a href="https://blog.google/threat-analysis-group/new-campaign-targeting-security-researchers/">опубликовала</a> список аккаунтов в соцсетях, адреса командных серверов (в том числе взломанных чужих серверов, которые использовались как командные), хэши DLL для VS Project и индикаторы компрометации (IOCs).
 <br> 
 <br> 
 <hr>
 <br> <a href="https://www.globalsign.com/ru-ru/lp/digital-signatures-aatl-30-off"><img src="https://habrastorage.org/webt/0n/n4/oc/0nn4ocejooolqqiiu2twxn05wis.png"><br> </a>
</div>', '2021-04-21 15:21:00', 'Хакеры создали подставную фирму SecuriElite, чтобы атаковать исследователей безопасности и других хакеров', 36, null, 5),
        (88, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 Привет, Хабр! Все люди разные, и счастье мы тоже понимаем по-разному. В этой статье предлагаем обсудить то, что делает счастливыми представителей IT-отрасли. И, к слову, зависит ли состояние счастья от профессии и увлечений, или главное — это личность человека и восприимчивость к внешним факторам? Давайте поговорим об этом. А еще предлагаем поучаствовать в хакатоне «Цифровой прорыв», подробности которого — под катом. <a name="habracut"></a>
 <br> 
 <br> 
 <h3>Что там говорит наука?</h3>
 <br> 
 <img src="https://habrastorage.org/webt/c4/hy/gx/c4hygx2n4e0vpljwuybdckwsntg.jpeg" alt="image">
 <br> 
 <br> В общем, тема счастья близка и научному сообществу, поэтому разные группы ученых в разное время пытались ответить на вопрос «Как можно определить, счастлив ли айтишник или нет?». Наиболее актуален проект группы исследователей из известных университетов Италии, Финляндии и Германии.
 <br> 
 <br> Они попытались найти общее в ответах нескольких сотен представителей IT-сферы. Как оказалось, определить счастливого разработчика можно по довольно простому признаку: продуктивность такого специалиста повышается на 58% в среднем, он доволен как собой, так и другими.
 <br> 
 <br> И наоборот, несчастный айтишник вредит другим, вокруг него нарастает целая волна напряжения. Все логично, ведь последствия угнетенного состояния — низкая мотивация плюс ментальная тревога. Кроме этого, могут снижаться когнитивные способности, что, конечно, влияет на продуктивность и эффективность. Кстати, не так давно были <a href="https://habr.com/ru/post/326916/">выделены 10 причин</a>, которые делают разработчика или представителя любой другой IT-профессии несчастным или, по крайней мере, недовольным:
 <br> 
 <br> 
 <ul> 
  <li>Застревание в решении проблемы</li> 
  <li>Нехватка времени для решения проблемы</li> 
  <li>Плохое качество кода и практики программирования</li> 
  <li>Отлынивающий от работы коллега</li> 
  <li>Чувство несоответствия работе</li> 
  <li>Рутина</li> 
  <li>Необъяснимая проблема с кодом</li> 
  <li>Плохой процесс принятия решений</li> 
  <li>Введенные ограничения на разработку</li> 
  <li>Личные проблемы, которые не связаны с работой</li> 
 </ul>
 <br> А вот счастливые разработчики полностью вовлечены в процесс, у них высокий уровень мотивации, плюс положительное влияние на свое окружение. Кстати, многие факторы недовольства, которые указаны выше, можно относительно легко убрать, было бы желание. «В этом исследовании мы показали, что недовольство присутствует, оно вызвано разными факторами, некоторые из которых легко можно предотвратить», — сказал Дэниель Гразиотин (Daniel Graziotin) из Института программных технологий при Штутгартском университете, ведущий автор научной работы.
 <br> 
 <br> Конечно, это исследование нельзя назвать полным или очень глубоким, но представление о том, что такое «счастливый айтишник», оно дает.
 <br> 
 <br> 
 <h3>Что считают сами айтишники?</h3>
 <br> 
 <img src="https://habrastorage.org/webt/hn/j5/68/hnj568ommvetdxa4isivr__wzg0.jpeg" alt="image">
 <br> 
 <br> Для того, чтобы определиться с определением чувства счастья, мы опросили несколько представителей IT-отрасли. Вот самые интересные ответы.
 <br> 
 <br> Даниил Самойлов, itis.team: «Пять девяток, 2 кота, свитер и лучшая в мире команда!».
 <br> 
 <br> Максим Дорофеев, экс-руководитель одного из департаментов «Лаборатории Касперского»: «Счастье — это личная эффективность и осознанная обработка информации».
 <br> 
 <br> Кристина Шу: «Настоящее счастье приходит после закрытия 100 вкладок в Хроме и успешного нахождения решения бага».
 <br> 
 <br> Екатерина Проньшина, ООО «РТП»: «Для счастья нужна чашка с кофе, который не кончается и котика рядом с клавиатурой».
 <br> 
 <br> Олеся Савельева, ГКБ им С.П.Боткина: «Счастье — когда твой код называют достойным, нет багов, когда продукт, над которым ты работал, применяется многими людьми, когда ты можешь позволить себе писать и работать над той задачей, которую ты выбрал сам, ну и, естественно, вера в себя и в команду».
 <br> 
 <br> Кстати, психологи выводят примерно ту же «формулу счастья», что и представители IT-cферы, упомянутые выше. Главное, по мнению специалистов — это оптимизм и увлеченность работой, да и жизнью в целом. Оптимизм и увлеченность позволяют прожить долгую жизнь, сохраняя позитивный настрой многие десятки лет.
 <br> 
 <br> При этом мотивация у всех может быть разной, что вполне логично. Вот несколько основных категорий представителей IT-сферы, которые положительно относятся к работе и жизни:
 <br> 
 <ul> 
  <li>Увлеченные люди, выполняющие рутинную, на первый взгляд, работу, но для них поиск кода, написание скрипта — это ещё одна победа.</li> 
  <li>Мотиваторы — коммуникабельные и быстро находящие общий язык с другими, но неуправляемые в рамках регламента. Они счастливы в креативе. Незаменимы в «аврале».</li> 
  <li>Модники выбрали сферу, которая в тренде. Живут причастностью к профессиональному миру, любят всю атрибутику.</li> 
  <li>Гуру. Здесь все сложно, но не для него. Экстаз — это четыре монитора на столе, новейшая плата, куча языков программирования в анамнезе.</li> 
  <li>И те, кто не попадает в определенную категорию.</li> 
 </ul>
 <br> В целом, счастье — не только в работе, но и в обыденном. Нельзя забывать о близких, какими бы значительными ни были успехи на работе. Друзья и родные способны привнести свою толику счастья, дать заряд бодрости и стимул.
 <br> 
 <br> Еще один важный фактор — разнообразный досуг. Разработка, администрирование и т.п. — это хорошо. Но увлечения тоже никто не отменял. «Зимой — сноуборд, а летом — горы», — распространенное убеждение многих представителей IT-отрасли. Но и сама по себе работа, ощущение нужности и подпитка идеями позволяет человеку быть счастливым.
 <br> 
 <br> Тема очень интересная, здесь каждый может высказать собственное мнение — и оно будет правильным, ведь счастье индивидуально для каждого. Давайте обсудим в комментариях, что ценно для вас, что позволяет быть счастливым и сохранять мотивацию.
 <br> 
 <br> 
 <h3>Немного о хакатоне</h3>
 <br> 
 <img src="https://habrastorage.org/webt/ck/xf/zg/ckxfzgegmmtqresfksbs1xpnyia.jpeg" alt="image">
 <br> 
 <br> Да, выше упоминался и хакатон, и сейчас самое время поговорить о нем немного подробнее. В этом году «Цифровой прорыв», флагманский проект АНО «Россия — страна возможностей», проводит не один хакатон, а сразу 8 тематических мероприятий.
 <br> 
 <br> Суммарный призовой фонд на каждом полуфинале — 4 500 000 рублей.
 <br> 
 <br> Заявку на участие могут подать стартапы, государственные учреждения и представители малого и среднего бизнеса. EdTech-хакатон уже прошёл, но впереди ещё 7 тематических хакатонов:
 <br> 
 <ul> 
  <li>EnergoMach.</li> 
  <li>HealthCare.</li> 
  <li>Creative Industries.</li> 
  <li>Lifetech.</li> 
  <li>Vehicle.</li> 
  <li>AgroTech.</li> 
  <li>FinTech.</li> 
 </ul> 
 <br> Ну, а зарегистрироваться <a href="https://leadersofdigital.ru/#experts">можно здесь</a>.
</div>', '2021-04-26 12:51:00', 'Счастье айтишника, профессиональное удовлетворение и хакатон: перемешать, но не взбалтывать', 68, null, 9),
        (89, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/252/30b/cb6/25230bcb6be6736d570d6876781570cd.jpg" width="1280" height="720">
  <figcaption></figcaption>
 </figure>
 <p>Создание своего приложения Хабра уже вошло в традицию среди хабрюзеров. Я решил не отставать и сделать своё. </p>
 <p>В данной статье я расскажу в первую очередь о том, как создавался клиент для Хабра, архитектурные и технические решения, их предпосылки и анализ, какие трудности были и в последнюю очередь о функционале приложения. </p>
 <h2>Предыстория </h2>
 <p>Все началось с предложения друга попробовать Flutter, а я оказался не против. </p>
 <p>Создавать приложение, но какое? На момент создания репозитория мне показалось, что мобильному клиенту Хабра крайне не хватает офлайн режима, собственно это и стало причиной и на этом строится идея всего приложения - смотреть статьи в офлайне и по возможности продолжить чтение с того момента где остановился и слегка настроить отображение текста под себя (задача минимум которую я постарался выполнить).</p>
 <p>До этого у меня был опыт пет проектов на React+TypeScript и VanilaJs, поэтому было интересно сравнить React и Flutter.</p>
 <p>В момент старта я предполагал, что html это легко и просто, а его отображение — это плевое дело, есть одно “но”: я захотел отображать html нативными виджетами, а не какими-то web-view. Вжух и проект усложнился, но не будем пока об этом. </p>
 <h2>Выделяем слои </h2>
 <p>Изначально я не предполагал чего-то сверх сложного. Да, об изолятах в Dart я слышал, но не думал, что буду их использовать (на что Flutter сказал: ты будешь использовать изоляты, т.к. тяжёлые вычисления, парсинг и сетевые запросы мешают ui потоку). </p>
 <p>На момент старта я выделил три слоя:</p>
 <ul>
  <li><p>ui</p></li>
  <li><p>habr-storage - к нему мы обращаемся за информацией, а он сам решает, идти ли в бд или обратиться к апи хабра.</p></li>
  <li><p>habr-api - обычные запросы по http с обработкой полученных данных.</p></li>
 </ul>
 <p>В принципе, это оказался не такой уж и плохой вариант. Архитектурно похоже на MVVM.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/7c1/427/f49/7c1427f497f3be2b2aabd098a96b38a1.png" alt="Тут я постарался схематично изобразить архитектуру" title="Тут я постарался схематично изобразить архитектуру" width="1139" height="903">
  <figcaption>
   Тут я постарался схематично изобразить архитектуру
  </figcaption>
 </figure>
 <h2>UI</h2>
 <p>По API Хабр высылает html и иногда js для отображения красивых мегапостов. По этой причине перед мной встала задача отображения html и в идеале красиво.&nbsp;</p>
 <p>Для отображения html на Flutter, на сколько мне известно, есть два варианта:&nbsp;</p>
 <ol>
  <li><p>web-view</p></li>
  <li><p>нативные (для Flutter) виджеты</p></li>
 </ol>
 <p>Я решил пренебречь первым вариантом, так как если бы хотел его использовать, писал приложение на React Native, а хотелось ощутить всю мощь нового фреймворка.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/5ac/1c6/bf0/5ac1c6bf05e4101a0e168f49c633a27f.jpg" alt="Основная лента с которой пользователь встречается при включении приложения" title="Основная лента с которой пользователь встречается при включении приложения" width="360" height="640">
  <figcaption>
   Основная лента с которой пользователь встречается при включении приложения
  </figcaption>
 </figure>
 <h3>Рендер HTML </h3>
 <p>Это, на мой взгляд, самая большая проблема. Чтобы отображать некоторые элементы вроде iframe, нужно поизвращаться, либо использовать web-view. На данный момент я не очень доволен, но я просто выдаю пользователю ссылку, и он спокойно может посмотреть, что внутри. Это компромисс, но без этого никуда.</p>
 <p>Рендер я выполняю в три этапа:</p>
 <ol>
  <li><p>Парсинг</p></li>
  <li><p>Препроцессинг</p></li>
  <li><p>Рендер</p></li>
 </ol>
 <p>Первый и второй этап я стараюсь делать единожды, т.к. они достаточно трудоёмкие.</p>
 <p>Парсинг html достаточно тривиальная задача, особенно если парсишь с помощью библиотеки, что я и сделал.&nbsp;</p>
 <p>А вот препроцессинг не самый очевидный этап. После того как библиотека прошлась и выдала распарсенный html, хочется просто взять корневой div, пройтись по всем нодам и отобразить. На мой взгляд, это достаточно проблемно, т.к. придется поддерживать множество элементов как самого html, так и комбинаций с css классами. К тому же некоторые авторы иногда любят добавлять изюминки к оформлению своих статей, из-за чего все это выглядит не очень, если отображать "как есть".</p>
 <p>Пример необычного html который приходится детектировать: </p>
 <pre><code class="xml">&lt;div class="spoiler" role="button" tabindex="0"&gt;
  &lt;b class="spoiler_title"&gt;Заголовок спойлера&lt;/b&gt;
  &lt;div class="spoiler_text"&gt;Контент спойлера&lt;/div&gt;
 &lt;/div&gt;</code></pre>
 <p>Данный кусок часто встречается в статьях, как и тег details - приходится поддерживать обе версии. </p>
 <p>Препроцессинг проходит в 2 этапа:</p>
 <ol>
  <li><p>Конвертация html блоков в дерево смысловых элементов</p></li>
  <li><p>Оптимизация дерева</p></li>
 </ol>
 <p>Идейно дерево смысловых элементов не особо отличается от html5. В нем есть основной набор высокоуровневых элементов, которые привычны для верстальщика:</p>
 <ul>
  <li><p>Изображение (с подписью)</p></li>
  <li><p>Абзац</p></li>
  <li><p>Заголовок&nbsp;</p></li>
  <li><p>Список (с разделением на упорядоченный/неупорядоченный)</p></li>
  <li><p>Таблица</p></li>
  <li><p>Код</p></li>
  <li><p>Iframe</p></li>
  <li><p>Цитата</p></li>
  <li><p>Спойлер</p></li>
 </ul>
 <h3>Комментарии </h3>
 <p>Отображение комментариев - один из самых интересных этапов. Комментариев может быть много и если реализовать их отображение не оптимально, то все будет лагать или рендериться овердофига лет.</p>
 <p>Flutter для таких задач имеет аналог RecyclerView из мира Android, и называется он ListView. Каждый элемент он рендерит только когда он виден и не рендерит (и соответственно не тратит мощности аппарата), когда не виден.</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9bf/f0d/70f/9bff0d70ff666ad188b18c17f0c642a3.jpg" alt="Отображение комментариев" title="Отображение комментариев" width="360" height="640">
  <figcaption>
   Отображение комментариев
  </figcaption>
 </figure>
 <p>Изначально я реализовал просто дерево комментариев, то есть у каждого комментария есть две части: контент и область дочерних элементов. От этой реализации я отказался из-за её нежизнеспособности - скрол лагает, т.к. дочерних элементов почти всегда много. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/6bb/563/b74/6bb563b74e3a9dd31c14ca2a0e4e78ab.jpg" alt="Первая версия с древовидным отображением" title="Первая версия с древовидным отображением" width="360" height="640">
  <figcaption>
   Первая версия с древовидным отображением
  </figcaption>
 </figure>
 <p>Текущая реализация, которой я вполне доволен - также отображаем дерево, но лишь один раз в памяти, трансформируем в массив нод-комментариев с известным уровнем вложенности, после строим по нему "плоское" отображение по вычисленной глубине. Получается, что ui выглядит так же, но теперь ListView не обязан отображать все дочерние элементы разом, да и отобразить N отступов не проблема, особенно, когда N известно. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2a2/537/47c/2a253747c409a2cb2c0f8ba49952071d.jpg" alt="Текущая реализация с «плоским» отображением" title="Текущая реализация с «плоским» отображением" width="360" height="640">
  <figcaption>
   Текущая реализация с «плоским» отображением
  </figcaption>
 </figure>
 <p>Благодаря такому решению приложение способно отображать дерево комментариев популярных статей, 1000 комментариев - не проблема, главное - скорость интернета.</p>
 <h3>Статьи</h3>
 <p>Их отображением я пока не очень доволен. Дело в том, что при некотором количестве очень больших картинок видны лаги. При повседневном чтении обычно это не заметно, но бывают прожорливые статьи. В целом решение есть, и оно такое же, как с комментариями - использовать ListView и разбить статью на "плоские" ноды и отображать только те, которые видны. Работа над этим ведётся, но не спешно. </p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/52b/9c4/a44/52b9c4a447b4354e179e19b024db921d.jpg" alt="" title="" width="360" height="640">
  <figcaption></figcaption>
 </figure>
 <h2>Habr-API</h2>
 <p>Я обращаюсь напрямую по адресу мобильной версии m.habr.com/kek/v2/</p>
 <p>Из того что поддерживает мобильная версия хабра и не поддерживает приложение с точки зрения API:</p>
 <ol>
  <li><p>Авторизация и доступ к информации пользователя</p></li>
  <li><p>Хабы</p></li>
 </ol>
 <p>В целом, тут нет ничего особо интересного, кроме моего небольшого возмущения, например, страницы основной ленты, если их не подгружать все разом, могут устареть, пока ты читаешь какой-то пост, и при подгрузке следующей страницы возникают дубликаты, либо посты теряются. Исправлять это приходится на клиенте, что так себе. Лично мое впечатление – API не самый удобный и построен так чтобы делать больше запросов чем нужно.&nbsp;&nbsp;&nbsp;</p>
 <p>Да, и в целом Хабр любит обновлять API из-за чего приходится обновлять приложение. Я думал о прокси сервере, чтобы он обрабатывал API Хабра и посылал данные в том формате, которое ожидает приложение. От такого решения я отказался из-за его непрозрачности по отношению к пользователям приложения.</p>
 <h2>Habr-Storage </h2>
 <p>На старте я начал использовать <a href="https://moor.simonbinder.eu/" rel="noopener noreferrer nofollow">Moor</a> (Room, но для Dart) совместно с SQLite, но на каком-то из этапов разработки вдруг понял, что в проекте уже две БД. Вторая – Hive, NoSQL Key-Value база данных, и она чертовски удобна. Когда подключал её как зависимость, чтобы хранить пару настроек приложения (темы и опции отображения текста), я и не представлял, как удобно ей будет пользоваться.</p>
 <p>В SQLite я храню html текст статьи, авторов (аватарка, никнейм и прочее) и изображения, остальное лежит в Hive. Отдельно хочу рассказать про изображения.&nbsp;</p>
 <p>Изображения я храню лишь частично в SQLite. Сами изображения я храню на файловой системе. В базе хранится url, по которому запрашивается изображение, и path файловой системы. Path я формирую как хеш-код url`а и конкатенирую с текущим временем вставки в миллисекундах. Примерно вот так:</p>
 <pre><code class="python">path = str(hash(url)) + str(datetime.now().millisecondsSinceEpoch)</code></pre>
 <h3>Isolates</h3>
 <p>По своей природе Dart однопоточный язык, но однопотоком сыт не будешь, поэтому есть возможность работы нескольких потоков, работают они схоже с web-workers и называются Isolate. Обычно их стоит использовать в любой необычной ситуации, вроде HTTP запросов, парсинга JSON, сложные вычисления, так вы уменьшите количество подвисаний вашего приложения на Flutter.&nbsp;</p>
 <p>Для организации вычислений вне основного потока вы можете использовать отдельный изолят с какой-то продуманной логикой общения с другими потоками, либо организовать пул потоков-изолятов.</p>
 <p><strong><em>Примечание:</em></strong> Flutter предоставляет возможность быстро запустить изолят выполнить нужную функцию и закрыть изолят. Метод называется compute.&nbsp;</p>
 <p>Я пришел к компромиссу – выделил основные операции, которые занимают достаточно много времени, и создал для каждой операции отдельные воркеры. Преимущества данного подхода в двух вещах:</p>
 <ol>
  <li><p>Простота. Она как у метода compute, но при этом производительность на уровне пула потоков, иногда чуть ниже, иногда чуть выше, тут зависит от реализации пула потоков.&nbsp;</p></li>
  <li><p>Разные операции не мешают друг другу. Гипотетически есть вероятность, что у двух задач может быть одинаковый приоритет, например, middle, но при этом одна из них достаточно долгая, а вторая короткая, и в случае если нам важно, чтобы короткая не дожидалась долгой задачи, пул потоков придется подстраивать ради баланса. Отдельные воркеры в этом плане на мой взгляд удобнее.&nbsp;</p></li>
 </ol>
 <p>Следующие операции я выделил в отдельные воркеры:</p>
 <ol>
  <li><p>Хеширование</p></li>
  <li><p>Загрузка изображений</p></li>
  <li><p>Подсветка синтаксиса</p></li>
 </ol>
 <p>Для операции парсинг и препроцессинг пока использую метод compute.</p>
 <h2>Заключение</h2>
 <p>На этом в принципе все, что я хотел бы рассказать о внутреннем устройстве приложения.&nbsp;</p>
 <p>Данный пост я не задумывал как рекламу, но желание потыкать приложение и посмотреть код может возникнуть, поэтому ссылку на <a href="https://github.com/avdosev/habr_app" rel="noopener noreferrer nofollow">github</a> прикладываю.</p>
 <p>А дальше пара скриншотов приложения:</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/11e/e11/c14/11ee11c1432749efbff82927909c8d90.jpg" width="360" height="640">
  <figcaption></figcaption>
 </figure>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/ba9/1d4/825/ba91d4825e191b9d839fb093b53f0fe2.jpg" width="360" height="640">
  <figcaption></figcaption>
 </figure>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/850/f24/18f/850f2418f5877e45b458e2cbb4a3bd9e.jpg" width="360" height="640">
  <figcaption></figcaption>
 </figure>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/314/106/8ae/3141068aefa12880957d849d97cd179a.jpg" width="360" height="640">
  <figcaption></figcaption>
 </figure>
</div>', '2021-04-27 11:00:00', 'Моя история реализации офлайн приложения Хабра', 44, null, 4),
        (90, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Dynetics <a href="https://spacenews.com/dynetics-protests-nasa-hls-award/" rel="noopener noreferrer nofollow">поддержала</a> протест Blue Origin против выбора НАСА компании SpaceX для получения гранта в рамках программы <a href="https://habr.com/ru/news/t/449800/" rel="noopener noreferrer nofollow">Human Landing System</a>. Dynetics обратилась в Счетную палату. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d31/c5e/30d/d31c5e30d52b4f4bf01b2890555fbe03.jpg" alt="Лунный посадочный модуль Dynetics" title="Лунный посадочный модуль Dynetics" width="1650" height="920">
  <figcaption>
   Лунный посадочный модуль Dynetics
  </figcaption>
 </figure>
 <p>В компании заявили, что испытывают опасения из-за «некоторых аспектов процесса, а также элементов технической оценки НАСА». Dynetics не вдавалась в подробности тех проблем, с которыми она столкнулась при участии в HLS, но отметила, что, по ее мнению, «первоначальный план НАСА по продолжению конкуренции остается лучшим подходом для обеспечения успеха программы». </p>
 <p>Ранее космическое агентство <a href="https://habr.com/ru/company/selectel/blog/553536/" rel="noopener noreferrer nofollow">выбрало</a> SpaceX для получения денег на финансирование разработки лунного посадочного модуля с экипажем и демонстрационной миссии. Однако при запуске HLS НАСА обещало, что может выбрать две компании. Позднее в агентстве объяснили свое решение тем, что на финансирование деятельности двух участников проекта ему не хватало средств. В итоге НАСА попросило SpaceX, предлагающую самую низкую цену, пересмотреть предлагаемый график платежей, чтобы он соответствовал профилю бюджета программы. </p>
 <p>Из <a href="https://habr.com/ru/post/499964/" rel="noopener noreferrer nofollow">трех претендентов</a> на участие в программе Dynetics оказалась на последнем месте. При этом Blue Origin получила оценку «приемлемо» наравне со SpaceX. Однако менеджмент первой оценили на «очень хорошо», а второй — на «отлично», что и дало SpaceX финальное преимущество. </p>
 <p>В своем протесте Blue Origin <a href="https://habr.com/ru/news/t/554678/" rel="noopener noreferrer nofollow">заявила</a>, что НАСА не предоставило претендентам на заключение контракта возможностей «осмысленно соревноваться» из-за «предполагаемого дефицита финансирования», а также обвинила агентство в неправильной оценке предложения по своему посадочному модулю и назвала оценку предложения SpaceX необоснованной. </p>
 <p>Помощник администратора НАСА Кэти Людерс говорила, что спускаемый аппарат Dynetics «страдает рядом серьезных недостатков», которые увеличивают риски. В частности, посадочный модуль имел избыточный вес, что на этой ранней стадии разработки «ставило под сомнение осуществимость архитектуры миссии Dynetics и ее способность успешно выполнять свою задачу в соответствии с предложением». Кроме того, инженеры НАСА усомнились в зрелости технологии компании для выполнения в космосе криогенной перекачки жидкости, необходимой для дозаправки посадочного модуля. </p>
 <p>Людерс пришла к выводу, что, «хотя предложение Dynetics действительно имеет некоторые похвальные технические и управленческие характеристики, в целом его достоинства ограничены, и оно лишь частично соответствует целям, изложенным в запросе». При этом цена предложения Dynetics была «значительно выше», чем цена Blue Origin ($5,99 млрд), которая, в свою очередь, была значительно выше, чем победившая ставка SpaceX в размере $2,89 млрд. </p>
 <p>Теперь исполняющий обязанности администратора НАСА Стив Юрчик сказал, что потенциально эти два протеста могут приостановить работу над проектом. </p>
 <p>Контракт на посадку на Луну является центральным элементом программы НАСА «Артемида». В прошлом году Конгресс <a href="https://habr.com/ru/news/t/540234/" rel="noopener noreferrer nofollow">выделил</a> НАСА $850 млн из $3,3 млрд на закупку лунных посадочных устройств. </p>
 <p>Корпорация Sierra Nevada также протестовала против передачи НАСА контрактов на создание коммерческих экипажей компаниям Boeing и SpaceX. Тогда агентство сначала призвало компании прекратить работу по этим контрактам, но в течение пары недель отменило данные приказы, сославшись на «имеющиеся у него законные полномочия», позволяющие продолжить работу, пока жалоба находится на рассмотрении. В итоге ее отклонили.</p>
</div>', '2021-04-28 09:42:00', 'Dynetics присоединилась к протесту Blue Origin против результата контракта HLS НАСА', 53, null, 3),
        (91, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/getpro/habr/post_images/07b/7fc/450/07b7fc450666fb6a453b5d9aa6f316b7.png" alt="image">
 <br> 
 <br> Привет, Хабр!
 <br> 
 <br> Весна — это всегда обновление. После чёрно-белой зимы начинают проявляться яркие краски отдохнувшей природы, а небольшие, но многочисленные мелкие детали начинают сверкать новыми гранями, создавая ощущение свежести и новизны. И наш браузер не исключение — у нас тоже весна.
 <br> <a name="habracut"></a>
 <br> 
 <h2>Отключаем надоедливые диалоги</h2>
 <br> Наверное, многим за зиму до чёртиков надоели эти всплывающие на всех сайтах диалоги с предложением принять политику Cookies или заняться ещё более скучным делом — настройками этих самых Cookies. Нам тоже это надоело, поэтому в новой версии мы добавили возможность отключить появление данных диалогов. Совсем. Для этого нужно пперейти в настройки браузера, раздел Приватность, Блокировщик рекламы и слежки, и в списках блокировки подключить один или оба — как на картинке:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/2af/3d8/6a5/2af3d86a5bd2ac18e0d23c508827fd89.png">
 <br> 
 <br> После этого вам данные диалоги больше не будут досаждать.
 <br> 
 <br> 
 <h2>Освежаем краски</h2>
 <br> Большую работу проделали наши дизайнеры. Вы наверняка заметите отличия и в отрисовке кнопок боковой панели, и ячейки Экспресс-панели стали выглядеть иначе, да и вся палитра расцветок браузера была значительно переработана:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/f6e/ce1/bcc/f6ece1bccaaa6f0dacd6cdef5b55c04f.png">
 <br> 
 <br> У нас появились также новые фоны, новые опции настройки тем — посмотрите, поэкспериментируйте.
 <br> 
 <br> 
 <h2>Меньше кликов — больше дела</h2>
 <br> Также заметно изменился диалог создания закладок — теперь больше полей заполняется автоматически, да и сам процесс стал значительно быстрее — число кликов, необходимых ддля создания закладки, заметно снизилось:
 <br> 
 <br> 
 <img src="https://habrastorage.org/getpro/habr/post_images/606/c5b/4ea/606c5b4eac9eed49d6b473a403cddc53.png">
 <br> 
 <br> Изменения коснулись и Быстрых команд, и набора веб-панелей по умолчанию, и это не говоря о десятках исправленных ошибок и недочётов. Подробный список изменений находится <a rel="noreferrer noopener" href="https://update.vivaldi.com/update/1.0/relnotes/3.8.2259.37.html">здесь</a>, а загрузить новую версию браузера можно с <a href="https://vivaldi.com/ru/download/" rel="noreferrer noopener">официального сайта</a>.
 <br> 
 <br> Кстати, сегодня также вышла и новая мобильная версия Vivaldi 3.8 для Android. Среди основных изменений — всё то же отключение панельки с настройками Cookies, а также возможность переключения языка браузера вне зависимости от языка устройства, и опция добавления кнопки Экспресс-панели на панель адреса при её нижнем размещении, чтобы удобнее было работать одной рукой.
 <br> 
 <br> <a href="https://play.google.com/store/apps/details?id=com.vivaldi.browser"><img src="https://habrastorage.org/getpro/habr/post_images/360/3e5/c36/3603e5c36e9bc65e1bec03bb8ea8c3a1.png" alt="Get it on Google Play"></a>
 <br> &nbsp;
 <br> <a href="https://vivaldi.uptodown.com/android"><img src="https://habrastorage.org/getpro/habr/post_images/cce/115/878/cce11587854589e0abb8c1407a2e1dda.png" alt="Get it on Uptodown"></a>
 <br> 
 <br> Всем спасибо за помощь в подготовке и тестировании новых версий браузера Vivaldi!
</div>', '2021-04-29 10:00:00', 'Vivaldi 3.8 — Играя новыми красками', 63, null, 4),
        (92, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Как любая скрам-команда каждый день, мы стараемся быть лучше чем вчера. Мы делаем лучше наш продукт, мы вместе развиваемся как команда и, конечно же, мы растём личностно и профессионально. Очевидно, что одной лишь веры в то, что завтра мы станем быстрее/выше/сильнее не достаточно. Нужно понимание своих слабых и сильных сторон, а так же осознание того, что нам нужно здесь и сейчас, а что нам понадобится через неделю/месяц/год.</p>
 <p>С точки зрения каждого члена команды, мы полагаем, что "каждый сам себе CEO", тем самым, это зона ответственности каждого индивида. С точки зрения продукта - у нас есть менеджмент, который собирает метрики, делится своим видением будущего и планирует дорожные карты. Но с точки зрения команды - у нас есть мы сами, продукт и нам со всем этим нужно что-то делать.</p>
 <p>Я хочу поделиться с вами некоторыми инструментами, которые мы используем командой для обнаружения проблем на ранних стадиях, улучшения продукта и сохранения миролюбивой и уютной обстановки внутри.</p>
 <h2>Опросы</h2>
 <p>Да, это очередные опросы, но в нашем случае они приносят пользу и каждую ретроспективу поднимаем вопрос, нужны ли нам они или уже нет. У нас спринты длятся 2 недели, поэтому у нас есть еженедельный опрос и опрос в конце спринта.</p>
 <h4>Еженедельный опрос</h4>
 <p>В конце каждой недели мы получаем опросник на 30 секунд с вопросами: как часто у вас не было сил выполнять работу? Получал ли удовольствие от задачи? Сколько часов переработал? На выходе мы строим график для всей команды в динамике за последние 6 недель и обсуждаем на ретроспективе. </p>
 <p>На таких графиках сразу становится понятно состояние команды, на сколько команда устала, как текущие задачи или краткосрочные приоритеты влияют на команду. Каждый член команды может сопоставить свои ответы с результатами команды. Например, если мне было тяжело, а по графикам я вижу что команда была в хорошем состоянии, то в следующий спринт я попробую забрать более интересные задачи себе, или брать поменьше задач. Или видно, что вся команда падает духом, тогда с владельцем продукта (PO) обсуждаем приоритеты следующего спринта и т.п. Как минимум, появляются аргументы для обсуждения.</p>
 <h4>Опрос в конце спринта</h4>
 <p>Тут всё просто, мы за пару часов до ретроспективы всей командой отвечаем на простой вопрос "Как вам спринт"? Тут мы уже преследуем цель разговорить команду. До введения этого опроса, ретроспектива начиналась с молчания и попыток скрам-мастера разговорить людей, что, как правило, заканчивалось "да обычный спринт, ничего такого". Сейчас же команда стала более разговорчивой, больше обсуждают проблем и кидают больше идей.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/66a/f4f/bd8/66af4fbd8aa321071062477e8cf2de6a.png" width="610" height="209">
  <figcaption></figcaption>
 </figure>
 <h4>Опросы раздражают</h4>
 <p>Тем не менее, хоть мы и используем опросы, они раздражают, т.к. есть ещё опросы от компании, но более эффективных инструментов, работающих для команды вне офиса, мы пока не придумали. Может быть, кто-то в комментариях подскажет более эффективный способ, подходящей для удалённой работы. Однако, люди также отвечают на эти вопросы сами себе и тоже делают выводы.</p>
 <h2>Мотивация</h2>
 <p>Наша команда разрабатывает B2B продукт, известный только в узких кругах компаний, и новые члены команды столкнулись с тем, что им никто не объяснил кто и для чего используют наш продукт. В итоге это выглядело так: вот вы, вот продукт с кучей легаси кода, вот Jira - поехали.</p>
 <p>Внутри команды мы собрали вопросы для менеджмента и попросили нам предоставить разные цифры. Например, список всех наших кастомеров, какой функционал чаще используется, приносит ли наш продукт прибыль и т.п.</p>
 <p>Как минимум, воодушевление пришло когда люди узнали кастомеров, например, "О, это мой банк", "У этих 3-х компаний больше миллиона сотрудников", "У меня машина этой компании" или "Я читаю финансовые новости от них". Думаю, в компаниях, названия которых встречаются хотя бы раз в месяц дела обстоят лучше.</p>
 <h2>Боли (от выполнения ручной/неудобной работы)</h2>
 <p>Когда мы взяли новых членов команды, то от них услышали, что некоторые процессы сложные/долгие/непонятные. Возможно, ранее так казалось и другим, но со времени все привыкли/забили/смирились. Т.к. у нас появилась возможность выявить слабые стороны, мы решили ею воспользоваться. Для этого мы начали:</p>
 <ul>
  <li><p>Выслушивать и записывать недовольства всех членов команды. Про долгий билд, про QA автоматизацию, про непонимание того, на что нужно делать акцент в продукте и т.д.</p></li>
  <li><p>Сравнивать затреканое время в Jira между нашей командой и другими командами, чтобы понять, кто делает что-то лучше нас и почему мы не делаем также. </p></li>
  <li><p>Опять же посмотреть в Jira и рассмотреть что мы можем делать лишнего, или что уже не актуально и можно упразднить. Например, мы рассматривали релиз-тикеты и пытались понять какие моменты мы можем делать быстрее. Так мы обнаружили, что security scan кода занимал по 20-30 минут, мы подумали, что можно делать всё проще и в итоге сейчас это занимает около 5-10 минут.</p></li>
 </ul>
 <p>На выходе у нас появились тикеты в существующих эпиках и новый эпик. В тот момент мы осознали, что для реализации некоторых тикетов могут понадобиться дополнительные скилы, которые ранее не использовались командой или случалось это крайней редко. А также пожелания от членов команды, кто и что хотел бы изучать. </p>
 <p>В результате у нас всё задокументировано в Jira в эпиках (с чем мы уже можем прийти к PO для обсуждения включения этих улучшений в дорожную карту на следующий квартал), у нас уже есть правило, что 10% времени в спринте каждый тратит на развитие своих навыков, и у нас уже был план кто и что будет изучать. В нашей компании у всех есть доступ к обучающим курсам на разных площадках, поэтому вопрос самообучения был решён автоматически, но мы договорились о следующем:</p>
 <ul>
  <li><p>Изучение будет происходить в паре/тройке. Так и интересней, и если кто-то уйдёт в отпуск - работа не встанет.</p></li>
  <li><p>Пары/тройки будут меняться в будущем. Чтобы команда не дробилась на небольшие "кружки по интересам" и оставалась одной командой.</p></li>
  <li><p>Внутри пары/тройки нет ограничений на источник обучения. Кому-то могут нравиться курсы с LinkedIn, кому-то с Udemy, а кто-то вообще нашёл крутой разбор темы на YouTube на своём родном языке.</p></li>
 </ul>
 <h2>Больше болтовни</h2>
 <p>Иногда в офисе обсуждение небольшого вопроса у кулера может затянуться больше чем на пол часа и вовлечь несколько человек. Эти живые, неформальные беседы иногда вносят большой вклад в развитие команды и продукта. С уходом на удалёнку таких бесед почти не стало. А если ещё учесть что почти никто из нас ранее на удалёнке не работал - всем было очень трудно делить личное и рабочее время.</p>
 <p>Внутри команды мы стараемся (правда не всегда получается) общаться не только на рабочие вопросы: создавать мемы, обсуждать мировые темы и делиться ссылками на сторонние сайты. Это помогает поднять настроение и немного отвлечься от работы. Если таких разговоров много, значит в целом, команда в позитивном настрое. Если разговоров мало или совсем нет - значит что-то происходит: личные проблемы людей, какой-то блок, у кого-то с кем-то конфликт. В общем может быть что угодно - в любом случае на это нужно обращать внимание и копать в суть.</p>
 <p>Также мы заметили, что когда люди включают web-камеру - они более искренне и более разговорчивы. Если вся команда не разговорчива, мы просто используем <a href="https://wheelofnames.com/" rel="noopener noreferrer nofollow">Wheel Of Names</a> и там уже рандомом выбираем кто будет говорить. </p>
 <h2>Фидбеки</h2>
 <p>Фидбек - сам по себе очень крутой инструмент. Вы можете придумать крутую идею, внедрить её, не услышать фидбек и затем убрать её, т.к. можете считать, что она провалилась. Или наоборот, вы можете внедрить в процесс фигню, никто не будет говорить, что это плохо и в итоге эта фигня так и продолжит существовать. В общем, фидбеки - вещь классная.</p>
 <p>Мы постоянно общаемся с менеджментом и PO и слышим от них статистику, на что стоит обратить внимание сейчас. Как правило, это запаздывающие метрики и в итоге часто мы тушим пожары, но редко уделяем много времени причине их возникновения, т.к. сразу переключаемся на другой пожар. Это не значит, что мы не проводим анализы причины, просто "предотвращать" пожары может стоить дороже, чем их многочисленное тушение.</p>
 <p>Поэтому, мы стали искать те причины пожаров, решение которых займёт не много времени. Например, мы заметили, что наша L2 поддержка перегружена. Мы попросили фидбек от L2 команды и выяснили что у них много однотипных проблем от кастомеров, например, вот две из них: </p>
 <ul>
  <li><p>Кастомеры задавали вопросы на одни и те же сообщения в логе. Суть в том, что в логе мы печатали что-то вроде "Module: service XXX call, RC = Y, RSN = ZZ". Т.к. это вообще не понятно никому, L2 выстраивали у себя сводную таблицу таких сообщений, чтобы отвечать кастомерам. Если какая-то новая комбинация - то это шло дальше в L3 (к разработчикам). Решением было простым: мы просто написали функцию которая по кодам печатает user-friendly сообщения с полным описанием причины проблемы.</p></li>
  <li><p>Кастомеры находили уже пофикшенные баги. С каждым релизом мы не так много внимания уделяли описанию проблем. В итоге, когда пользователь встречал баг, он открывал описания выпущенных релизов и искал там свою проблему - разумеется он там ничего не находил и писал в саппорт. Ребятам из L2 приходилось лезть в нашу Jira и они пытались найти баги, похожие на кастомерские. Решение банально - мы стали лучше описывать баги с их симптомами в релизах. Кастомеры стали меньше писать в саппорт, т.к. находили свои баги в описаниях релизов, а если уж и открывалось, L2 на них почти всегда могли ответить самостоятельно и быстро.</p></li>
 </ul>
 <p>В результате мы упростили работу нашей L2 поддержки. Но как это помогло нашей команде? У ребят из L2 появилось больше времени, и они тратили его на более глубокое изучение продукта, что позволяло отвечать самостоятельно на большую часть вопросов. Тем самым, количество обращений в саппорт уменьшилось, а также уменьшилось количество тикетов переходящих от L2 в L3. Тем самым, разработчики высвободили себе больше времени для решения реальных и актуальных проблем.</p>
 <h2>Ежедневный отчёт</h2>
 <p>У нас каждый день скрам-мастер, в конце рабочего дня, в канале команды в слаке публикует суточный отчёт, который описывает текущие горящие темы, блоки команд, проблемы в команде/продукте и т.п. Этот отчёт полезен как для команды, так и для менеджмента. Во-первых, если кто-то из команды имеет проблемы и видит, что его проблема там не описана - он идёт к скрам-мастеру и отчёт обновляется. Во-вторых, все видят что происходит сейчас в команде, у менеджмента есть актуальный, обобщённый отчёт, и им не нужно дёргать людей, чтобы получать ответы на свои вопросы. С помощью этого отчёта мы пытаемся добиться прозрачности и выявлять блоки как можно раньше, чтобы избегать случаев "У нас уже месяц всё хорошо, но 4 недели назад случилась проблема и мы не успеваем".</p>
 <p>Я хочу ещё раз подчеркнуть, что этот "отчёт" - был создан внутри команды для нас самих же и не занимает больше 5 минут в день для его поддержания. </p>
 <h2>Свои метрики</h2>
 <p>Внутри команды у нас есть свои метрики. Некоторые пересекаются с менеджерскими, некоторые уникальны.</p>
 <p>Например, кастомерские проблемы идут в приоритет и нам, как команде, очень важно, чтобы оно в L3 находилось как можно меньше времени. Поэтому мы стараемся отвечать на проблему, либо находить реальную причину (например, баг) как можно быстрее. Менеджмент всего лишь следит, чтобы ответ был не дольше чем за 2/7 дней (в зависимости от важности проблемы - у них свои метрики).</p>
 <p>Частота "незапланированных" задач. Каждый спринт у нас случаются не запланированные таски, возникающие после старта спринта, которые откладывать на 1-2 недели нет возможности. Мы пытаемся отслеживать такие вещи, смотреть сколько в среднем мы тратим на них время и каждый спринт откусывать кусок пирога для этой активности. Тем самым, нам проще выполнять наши собственные коммитменты и тогда команда становится более предсказуемой. </p>
 <p>Мы используем и другие метрики, включая самые очевидные: процент покрытия кода юнит-тестами, покрытие QA тестами функционала продукта, время жизни пулл-ревквеста или velocity команды.</p>
 <h2>Больше правил</h2>
 <p>Никто не любит правила, особенно никто не любит появления новых рамок. Однако, внутри команды правила могут помочь избежать конфликтов, или использоваться как аргументы в них.</p>
 <p>Можно долго спорить и ругаться, например, что лучше: табы или пробелы, можно назначать митинги для их обсуждения, создавать новые чаты, ругаться в пулл-реквестах, а можно просто написать правило "только пробелы" и просто следовать ему. Кто-то будет недоволен, но теперь это правило, и его не обсуждают, ему просто следуют. Поэтому, рекомендую задокументировать всё, что связано с правилами написания кода. А ещё лучше, посоветовать команде почитать какой-нибудь Code Complete, чтобы разработчики (особенно начинающие) имели представление откуда эти правила берутся. </p>
 <p>Правила помогают разделять белое и чёрное, избегать конфликтов и иногда упрощать жизнь. А иногда, наоборот, усложняют жизнь. Ввод любого нового правила означает снижение доверия к индивидуумам, снижение доверия означает рост неэффективности, рост неэффективности приводит к увеличению времени разработки. </p>
 <p>Также, правила должны подвергаться пересмотру. Например, в какой-то момент времени у нас случилось несколько кастомерских проблем из-за релиза, баги в котором могли быть замечены аж на трёх этапах: Разработка (code review), Просмотр билда разработчиками, и уже QA. На всех трёх этапах можно было предотвратить ошибку. Разумеется, после этого инцидента все этапы были ужесточены. В итоге то, что раньше могло занимать до 5 дней, стало занимать до 10 дней. Со временем все ужесточения были пересмотрены. Некоторые до сих пор остались, просто был изменён процесс чтобы действие занимало меньше времени, что-то было упразднено, а что-то наоборот добавилось.</p>
 <p>Правила - как инструмент, может нести и пользу, и вред. Иногда удобно вводить временные правила, чтобы решить текущую проблему, а иногда нужно осознано вводить правило в ущерб краткосрочным целям в пользу долгосрочных. Например, сейчас для любого изменения в коде у нас требуется минимум 2 апрува. Т.е. как минимум трое из пяти членов команды согласны на эти изменения.</p>
 <h2>Ответственность на всех</h2>
 <p>В нашей команде мы стараемся играть в "трёх мушкетёров", т.е. ответственность за всё лежит на ВСЕЙ команде, никто не будет осуждать члена команды вне команды. Если кто-то один облажался и это привело к каким-то последствиям, то всё равно виноваты все, потому что:</p>
 <ul>
  <li><p>Плохие вещи случаются. Нельзя запланировать и предвидеть всё.</p></li>
  <li><p>Если кто-то ошибся и это привело к последствиям, то это всего лишь значит, что человек был один, или процесс не так уж и хорош, как мы его выстраивали.</p></li>
  <li><p>Очень просто спихнуть всю ответственность на кого-то одного и осудить его. Если такое происходит часто, то все понимают, что рано или поздно это случится с ними и уходит доверие, что приводит к росту издержек, снижению эффективности ... ну вы поняли.</p></li>
  <li><p>Обвинения не решают проблем. Вообще никаких.</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d8c/1c8/270/d8c1c8270c97e91f4859b258318c74a7.jpeg" width="1000" height="675">
  <figcaption></figcaption>
 </figure>
 <p>Яркий пример логики, где виноваты все: когда машина с автопилотом сбила переходящую через дорогу женщину с велосипедом в темное время суток. Кого винить?</p>
 <ul>
  <li><p>Женщину, которая в полной темноте переходила дорогу в неположенном месте?</p></li>
  <li><p>Водителя автомобиля с автопилотом, который вряд ли сам среагировал бы?</p></li>
  <li><p>Компанию, которая разрабатывает автопилот?</p></li>
  <li><p>Разработчиков, кто писал код для автопилота?</p></li>
  <li><p>QA кто выпустил этот код в прод?</p></li>
 </ul>
 <p>Субъективно, тут виноваты все, либо никто. Но, очевидно, что виновные есть, т.к. в итоге женщина скончалась. Значит виноваты все.</p>
 <p>Данный подход может показаться не справедливым, т.к. обвиняя всю команду вы обвиняете и каждого её члена, даже тех кто вообще никакого отношения к инциденту не имел. Но с другой стороны, переживать такого рода стресс всем вместе проще, чем одному, это также увеличивает вовлечённость всей команды в процесс и жизнь продукта, а ещё, справедливости не существует. Аналогично, когда хвалят всю команду - значит хвалят и каждого в отдельности. А похвалу любят все.</p>
 <h2>Team Building</h2>
 <p>Я не хочу заострять внимание на тимбилдинге, все мы понимаем зачем он нужен и каждый в этом участвовал. Тимбилдинг, так или иначе, нужен, особенно когда в команде появляются новые люди. Хочу отметить, что сейчас онлайн тимбилдингов уже существует много и есть где разгуляться. Основной посыл здесь, что не стоит ждать пока менеджмент соберёт всех вместе где-нибудь на очередной ежегодной вылазке. Нужно самоорганизовываться самим и организацию таких мероприятий (онлайн или оффлайн) брать на себя скрам-мастеру, тимлиду или самовыдвиженцам из команды.</p>
 <h2>Заключение</h2>
 <p>Выбрав фреймворк как Scrum, Kanban, Lean и т.д. глупо надеяться что все проблемы разрешатся, все будут мотивированы, счастливы и довольны. Внутри команды не стоит надеяться, что кто-то другой решит ваши проблемы, особенно, если вы о них не говорите.</p>
 <p>Как инструмент, можно использовать что угодно: ответственность, правила, болтовню, боль, главное уметь пользоваться в конкретно вашем случае. Не существует большой красной кнопки, на которую вы нажмёте и все проблемы решатся, но существуют инструменты, которые в умелых руках могут сотворять шедевры, а в неумелых калечить людей.</p>
</div>', '2021-05-20 08:07:00', 'Самодиагностика команды разработки', 95, null, 5),
        (93, true, 'NEW', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Компания Twitter <a href="https://www.cnbc.com/2021/05/03/twitter-launches-spaces-live-audio-rooms-to-all-users.html" rel="noopener noreferrer nofollow">объявила</a> о запуске новой функции под названием Spaces live-audio room. Она позволяет пользователям стать участниками аудиочатов в специальных виртуальных комнатах. </p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/0d6/104/55b/0d610455b66f1b88011cc3eda29f57b4.jpg" width="1200" height="675">
  <figcaption></figcaption>
 </figure>
 <p>Функция была запущена 3 мая для пользователей iOS и Android, у которых более 600 подписчиков в соцсети. </p>
 <p>Другие пользователи Twitter теперь смогут присоединяться к аудиочатам. В соцсети появились значки в виде фиолетовых пузырей, которые означают, что в той или иной комнате идет беседа. Чтобы войти в аудиочат, нужно кликнуть на этот значок. В ходе беседы ее участники могут отправлять аудиосообщения, а хозяин комнаты будет модерировать состав участников путем добавления или удаления. </p>
 <p>Twitter также анонсировал новую функцию Ticket Spaces. Она позволит пользователям создавать платные комнаты, для доступа в которые понадобится билет. Данная опция предназначена для монетизации Spaces. Компания обещает, что хозяева комнат будут получать большую часть доходов от продажи таких билетов, а сам Twitter будет брать скромную комиссию. В ближайшие месяцы Ticket Spaces запустят для ограниченного круга пользователей. </p>
 <p>Spaces <a href="https://habr.com/ru/news/t/546776/" rel="noopener noreferrer nofollow">начали тестировать</a> в декабре прошлого года. В Twitter считают, что внедрение такой функции позволит увеличить активную базу пользователей до 315 млн человек к концу 2023 года.</p>
 <p>По информации Bloomberg, на протяжении последних месяцев Twitter <a href="https://habr.com/ru/news/t/551364/" rel="noopener noreferrer nofollow">вел</a> переговоры о покупке Сlubhouse. Сумма сделки могла составить около $4 млрд, но переговоры прекратились по неизвестным причинам.</p>
 <p>Между тем LinkedIn <a href="https://habr.com/ru/news/t/550036/" rel="noopener noreferrer nofollow">заявила</a>, что тестирует собственную социальную аудиосеть в стиле Clubhouse с демонстрацией спикеров и слушателей.</p>
 <p>В марте в версию Telegram 7.6 для Android и iOS <a href="https://habr.com/ru/news/t/547974/" rel="noopener noreferrer nofollow">внедрили</a> голосовые чаты нового типа, напоминающие Clubhouse. Теперь их можно создавать не только в группах, но и в каналах. Число слушателей при этом не ограничено. Голосовые чаты в Telegram, в отличие от Clubhouse, можно записывать.</p>
 <p>Над разработкой своих версий аудиосети работают также в Spotify. А Facebook <a href="https://habr.com/ru/news/t/553324/" rel="noopener noreferrer nofollow">сообщила</a>, что разрабатывает целый набор аудиопродуктов, включая конкурента Clubhouse.</p>
</div>', '2021-05-05 09:02:00', 'Twitter запустил функцию-аналог Clubhouse и будет монетизировать ее', 35, null, 7),
        (94, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Серия из 5 постов <strong>для</strong> <strong>начинающих</strong> представляет собой «ремикс» первой главы книги 2015 года под названием «Clojure для исследования данных» (Clojure for Data Science). Автор книги, Генри Гарнер, любезно дал согласие на использование материалов книги для данного ремикса с использованием языка Python.</p>
 <p>Книга была написана как приглашение в так называемую «науку о данных», которая в последние годы получила сильный импульс к развитию в связи с потребностью в быстрой и своевременной обработке больших наборов данных локально и в распределенной среде. </p>
 <p>Материал книги излагается живым языком и подается в задачно-ориентированном стиле, главным образом с упором на анализе данных с использованием соответствующих алгоритмов и вычислительных платформ с предоставлением коротких и прямых объяснений по ходу изложения. </p>
 <p>Несправедливо, когда превосходный учебный материал пылится невостребованным просто из-за того, что имплементирован на достаточно академичном, если не сказать элитарном языке, каким является язык функционального программирования Clojure. Поэтому возникло желание внести свои пять копеек, чтобы сделать материал книги доступным для более широкой публики. </p>
 <p>Три главы книги были адаптированы под язык Python в течение следующего года после издания книги, т.е. в 2016 году. Публикация ремикса книги в РФ не получилась по разным причинам, но одна из главных станет понятной в конце этой серии постов. В конце заключительного поста можно будет проголосовать за или против размещения следующей серии постов. А пока же…</p>
 <p>Пост №1 посвящен подготовке среды и данных.</p>
 <h2>Статистика</h2>
 <blockquote>
  <p>&nbsp;<em>Важно не кто голосует, а кто подсчитывает голоса</em></p>
  <p>— <em>Иосиф Сталин</em></p>
 </blockquote>
 <p>Как только перед нами возникает задача проанализировать данные, которые состоят из двух и более чисел, становится содержательным вопрос о том, каким образом эти числа распределены. Вы, наверное, уже слыхали такие выражения, как «длинный хвост» и «правило 80/20». Они касаются разброса чисел по диапазону. В этой серии постов мы продемонстрируем смысл распределений и познакомим с наиболее полезным из них: <em>нормальным распределением</em>.</p>
 <p>При изучении распределений чрезвычайную важность играет наглядная и удобная визуализация данных, и для этого мы воспользуемся Python-овской библиотекой pandas. Мы проведем сопоставительный анализ результатов двух общенациональных выборов — всеобщих выборов в Великобритании 2010 г. и российских выборов депутатов Государственной Думы Федерального Собрания РФ шестого созыва 2011 г. — и увидим, каким образом даже элементарный анализ может предъявить подтверждающие данные о потенциальных фальсификациях.</p>
 <p>Вообще, в этом посте мы будем пользоваться двумя главными библиотеками экосистемы SciPy: одноименной библиотекой <a href="https://www.scipy.org/" rel="noopener noreferrer nofollow">scipy</a> для выполнения сложных математико-статистических расчетов и библиотекой <a href="http://pandas.pydata.org/" rel="noopener noreferrer nofollow">pandas</a> для загрузки данных из разнообразных источников, преобразования и разведывательного анализа и визуализации реальных данных.</p>
 <p>Обе библиотеки призваны выполнять конкретные функциональные задачи. Библиотека scipy и ее модуль stats предоставляет пользователю фундаментальный математический функционал, в том числе статистический, тогда как библиотека pandas предлагает удобные одно-, двух- и многомерные структуры для выполнения статистического анализа гетерогенных данных. Эта библиотека создана по образцу чрезвычайно популярной среды для анализа данных на языке R и объединяет мощь языка Python, его интерактивную оболочку REPL, и набор мощных абстракций для работы с данными. Кроме того, она позволяет оформить результаты вычислений в изображения типографского качества. Кроме того, для построения 2-мерных графиков и диаграмм нам понадобится библиотека <a href="https://matplotlib.org/" rel="noopener noreferrer nofollow">matplotlib</a>, которая работает в паре с pandas.</p>
 <p>Каждая библиотека может быть отдельно включена в собственный исходный код. В целях получения доступа к математико-статистической функциональности, функциям для построения графиков и обработки файлов, в проект программы следует включить следующие строки:</p>
 <pre><code class="python">import scipy as sp
from scipy import stats  # модуль статистических функций
import pandas as pd
import matplotlib.pyplot as plt</code></pre>
 <p>Кроме того, мы будем пользоваться встроенными в Python модулями. Так, например, модуль <a href="https://docs.python.org/3/library/random.html" rel="noopener noreferrer nofollow">random</a> позволяет генерировать случайные числа и извлекать выборки, и модуль <a href="https://docs.python.org/3/library/collections.html" rel="noopener noreferrer nofollow">collections</a> содержит дополнительные структуры данных, из которых мы воспользуемся специальным словарем <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="noopener noreferrer nofollow">Counter</a>.</p>
 <p>В основе библиотеки pandas лежит понятие <em>кадра данных</em>, <code>DataFrame</code>, т.е. структуры, состоящей из строк и столбцов, или записей и полей. Если у вас есть опыт работы с реляционными базами данных, то кадры pandas можно рассматривать, как таблицы базы данных. Каждый столбец в кадре данных поименован, а каждая строка имеет одинаковое число столбцов, как и любая другая. Загрузить данные в кадр данных pandas можно несколькими способами, и тот, которым мы воспользуемся, будет зависеть от того, в каком виде наши данные хранятся:</p>
 <ul>
  <li><p>Если данные представлены текстовым файлом с разделением полей данных запятыми (.csv) или символами табуляции (.tsv), то мы будем использовать функцию чтения данных <code>read_csv</code></p></li>
  <li><p>Если данные представлены файлом Excel (например, файл .xls или .xlsx), то мы воспользуемся функцией чтения данных <code>read_excel</code></p></li>
  <li><p>Для любого другого источника данных (внешняя база данных, веб-сайт, буфер обмена данными, JSON-файлы, HTML-файлы и т. д.) предусмотрен ряд других функций</p></li>
 </ul>
 <p>Помимо кадров данных мы будем пользоваться еще одной популярной структурой – <code>Series</code>. Это одномерный массив данных, необязательно числовой ряд, который мы тоже будем использовать. </p>
 <p>В этой серии постов в качестве источника данных используется файл Excel, поэтому для чтения данных мы воспользуемся функцией <code>read_excel</code>. Эта функция принимает один обязательный аргумент — файл для загрузки — и ряд необязательных аргументов, в т. ч. номер либо название листа в виде именованного аргумента. Все примеры имеют всего один лист, и поэтому мы будем предоставлять лишь один файловый аргумент в виде следующей ниже строки исходного кода:</p>
 <pre><code class="python">pd.read_excel(''data/ch01/UK2010.xls'')</code></pre>
 <p>Мы будем загружать данные из нескольких источников, поэтому мы создадим несколько вариантов загрузки данных. В приведенном ниже фрагменте кода мы определяем функцию загрузки данных <code>load_uk</code>:</p>
 <pre><code class="python">def load_uk():
&nbsp;&nbsp;&nbsp; ''''''Загрузить данные по Великобритании''''''
&nbsp;&nbsp;&nbsp; return pd.read_excel(''data/ch01/UK2010.xls'') </code></pre>
 <p>Эта функция вернет кадр данных <code>DataFrame</code> библиотеки pandas, содержащий данные по Великобритании. Далее в этой серии постов, мы определим дополнительные имплементации загрузки этого же и еще одного набора данных.</p>
 <p>Первая строка электронной таблицы UK2010.xls содержит имена столбцов. Функция библиотеки pandas <code>read_excel</code> резервирует их в качестве имен столбцов возвращаемого кадра данных. Начнем обследование данных с их проверки — атрибут кадра данных columns возвращает имена столбцов в виде списка, при этом адресация атрибутов осуществляется при помощи оператора точки (<code>.</code>):</p>
 <p><sup>Названия приводимых примеров имеют формат ex_N_M, где ex - example (пример), N - номер серии постов и M - порядковый номер в посте. Примеры оформлены в виде функций без аргументов и возвращаемых значений. Это сделано намеренно, т.к. задачно-ориентированный стиль изложения требует кратких и четких примеров без отвлекающей внимание информации. К тому же, в таком виде примеры могут быть собраны вместе и исполняться независимо в рамках программной оболочки.</sup></p>
 <pre><code class="python">def ex_1_1():
&nbsp;&nbsp;&nbsp; ''''''Получить имена полей кадра данных''''''
&nbsp;&nbsp;&nbsp; return load_uk().columns</code></pre>
 <p>Результатом выполнения приведенной выше функции должен быть следующий ниже список полей кадра данных pandas:</p>
 <pre><code>Index([''Press Association Reference'', ''Constituency Name'', ''Region'',
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ''Election Year'', ''Electorate'', ''Votes'', ''AC'', ''AD'', ''AGS'', ''APNI'',
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ''UKIP'', ''UPS'', ''UV'', ''VCCA'', ''Vote'', ''Wessex Reg'', ''WRP'', ''You'',
&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''Youth'', ''YRDPL''],
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;dtype=''object'', length=144)</code></pre>
 <p>Это очень широкий набор данных, состоящий из 144 полей. Первые шесть столбцов в файле данных описываются следующим образом; последующие столбцы лишь распределяют число голосов по партиям:</p>
 <ul>
  <li><p><strong>Информация для Ассоциации прессы</strong>: число, идентифицирующее избирательный округ (представленный одним депутатом)</p></li>
  <li><p><strong>Название избирательного округа</strong>: стандартное название, данное избирательному округу</p></li>
  <li><p><strong>Регион</strong>: географический район Великобритании, где округ расположен</p></li>
  <li><p><strong>Год выборов</strong>: год, в котором выборы состоялись</p></li>
  <li><p><strong>Электорат</strong>: общее число граждан, имеющих право голоса в избирательном округе</p></li>
  <li><p><strong>Голосование</strong>: общее число проголосовавших</p></li>
 </ul>
 <p>Всякий раз, когда мы сталкиваемся с новыми данными, важно потратить некоторое время на то, чтобы в них разобраться. В отсутствии подробного описания данных лучше всего начать с подтверждения наших предположений в отношении данных. Например, мы ожидаем, что этот набор данных содержит информацию о выборах 2010 г., поэтому проверим содержимое столбца года выборов Election Year.</p>
 <p>В pandas предусмотрена обширная функциональность для горизонтального (построчного) и вертикального (постолбцового) отбора и фильтрации данных. В элементарном случае нужный столбец можно выбрать, указав его номер или имя. В этой серии постов мы часто будем таким способом отбирать столбцы данных из различных представлений данных: </p>
 <pre><code class="python">def ex_1_2():
&nbsp;&nbsp;&nbsp; ''''''Получить значения поля "Год выборов"''''''
&nbsp;&nbsp;&nbsp; return load_uk()[''Election Year'']</code></pre>
 <p>В результате будет выведен следующий список:</p>
 <pre><code>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2010.0
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2010.0
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2010.0
...
646&nbsp;&nbsp;&nbsp; 2010.0
647&nbsp;&nbsp;&nbsp; 2010.0
648&nbsp;&nbsp;&nbsp; 2010.0
649 &nbsp;&nbsp;&nbsp;2010.0
650&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NaN
Name: Election Year, dtype: float64</code></pre>
 <p>Столбец года выборов возвращается в виде последовательности значений. Полученный результат бывает трудно интерпретировать, поскольку кадр данных содержит слишком много строк. Учитывая, что мы хотели бы узнать, какие уникальные значения есть в этом столбце, можно воспользоваться методом <code>unique</code> кадра данных. Одно из преимуществ использования библиотеки pandas состоит в том, что ее утилитные функции управления данными дополняют те, которые уже встроены в Python. Следующий ниже пример это показывает:</p>
 <pre><code class="python">def ex_1_3():
&nbsp;&nbsp;&nbsp; ''''''Получить значения в поле "Год выборов" без дубликатов''''''
&nbsp;&nbsp;&nbsp; return load_uk()[''Election Year''].unique()</code></pre>
 <pre><code>[ 2010.&nbsp;&nbsp;&nbsp; nan]</code></pre>
 <p>Значение 2010 еще больше подкрепляет наши ожидания в отношении того, что эти данные относятся к 2010 году. Впрочем, наличие специального значения <code>nan</code> (not a number, т.е. не число), которое сигнализирует о пропущенных данных, является неожиданным и может свидетельствовать о проблеме с данными.</p>
 <p>Мы еще не знаем, в скольких элементах набора данных пропущены значения, и установив их число, мы смогли бы решить, что делать дальше. Простой способ подсчитать такие пустые элементы состоит в использовании подкласса словарей <code>Counter</code> языка Python из модуля <code>collections</code>. Этот словарь трансформирует последовательность значений в коллекцию, где ключам поставлены в соответствие количества появлений элементов данных, т.е. их частоты:</p>
 <pre><code class="python">def ex_1_4():
&nbsp;&nbsp;&nbsp; ''''''Рассчитать частоты в поле "Год выборов" 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (количества появлений разных значений)''''''
&nbsp;&nbsp;&nbsp; return Counter( load_uk()[''Election Year''] )</code></pre>
 <pre><code>Counter({nan: 1, 2010.0: 650})&nbsp;</code></pre>
 <p>Нам не потребуется много времени, чтобы получить подтверждение, что в 2010 г. в Великобритании было 650 избирательных округов. Знание предметной области, как в этом случае, имеет неоценимое значение при проверке достоверности новых данных. Таким образом, весьма вероятно, что значение nan является посторонним, и его можно удалить. Мы увидим, как это сделать, в следующем разделе.</p>
 <h2>Исправление данных</h2>
 <p>Согласно неоднократно подтвержденной статистике, как минимум <strong>80%</strong> рабочего времени исследователь данных тратит на исправление данных. Эта процедура заключается в выявлении потенциально поврежденных или некорректных данных и их корректировке либо фильтрации.</p>
 <p>Специальное значение <code>nan</code> в конце столбца года выборов может сигнализировать о грязных данных, которые требуется удалить. Мы уже убедились, что нужные <em>столбцы</em> данных в pandas можно отобрать, указав их номера или имена. Для фильтрации <em>записей</em> данных можно воспользоваться одним из предикативных методов библиотеки pandas.</p>
 <p>Мы сообщаем библиотеке pandas, какие записи мы хотим отфильтровать, передавая в кадр данных как аргумент булево выражение с использованием предикативных функций. В результате будут сохранены только те записи, для которых все предикаты возвращают истину. Например, чтобы отобрать только пустые значения из набора данных, нужно следующее:</p>
 <pre><code class="python">def ex_1_5():
&nbsp;&nbsp;&nbsp; ''''''Вернуть отфильтрованную по полю "Год выборов" 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; запись в кадре данных (в виде словаря)''''''
&nbsp;&nbsp;&nbsp; df = load_uk()
&nbsp;&nbsp;&nbsp; return df[ df[''Election Year''].isnull() ]</code></pre>
 <p><strong>&nbsp;</strong></p>
 <div class="table">
  <table>
   <tbody>
    <tr>
     <td><p></p></td>
     <td><p><strong>Press Association Reference</strong></p></td>
     <td><p><strong>Constituency Name</strong></p></td>
     <td><p><strong>Region</strong></p></td>
     <td><p><strong>Election Year</strong></p></td>
     <td><p><strong>Electorate</strong></p></td>
     <td><p><strong>Votes</strong></p></td>
     <td><p><strong>AC</strong></p></td>
     <td><p><strong>AD</strong></p></td>
     <td><p><strong>AGS</strong></p></td>
     <td><p><strong>...</strong></p></td>
    </tr>
    <tr>
     <td><p><strong>650</strong></p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>29687604</p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>NaN</p></td>
     <td><p>...</p></td>
    </tr>
   </tbody>
  </table>
 </div>
 <p>Выражение <code>dt[''Election Year''].isnull()</code> вернет булеву последовательность, в которой все элементы, кроме последнего, равны <code>False</code>, в результате чего будет возвращена последняя запись кадра данных. Если Вы знаете язык запросов SQL, то отметите, что этот метод очень похож на условный оператор <code>WHERE</code>.</p>
 <p>Присмотревшись к результатам примера ex_1_5, можно заметить, что в полученной записи все поля (кроме одного) имеют значение <code>NaN</code>. Дальнейший анализ данных подтверждает, что строка с непустым полем на самом деле является строкой итоговой суммы в листе файла Excel. Эту строку следует из набора данных удалить. Мы можем удалять проблемные строки путем обновления коллекции предикативной функцией <code>notnull()</code>, которая в данном случае вернет только те строки, в которых год выборов не равен <code>NaN</code>:</p>
 <pre><code class="python">&nbsp;&nbsp;&nbsp; df = load_uk()
&nbsp;&nbsp;&nbsp; return df[ df[ ''Election Year'' ].notnull() ]</code></pre>
 <p>Приведенные выше строки нам почти всегда придется вызывать непосредственно перед использованием данных. Лучше всего это сделать, добавив еще одну имплементацию функции загрузки данных по Великобритании <code>load_uk_scrubbed</code> с этим этапом фильтрации:</p>
 <pre><code class="python">def load_uk_scrubbed():
&nbsp;&nbsp;&nbsp; ''''''Загрузить и отфильтровать данные по Великобритании''''''
&nbsp;&nbsp;&nbsp; df = load_uk()
&nbsp;&nbsp;&nbsp; return df[ df[ ''Election Year'' ].notnull() ]</code></pre>
 <p>Теперь при написании любого фрагмента кода с описанием доступа к набору данных в файле, можно выбирать вариант загрузки: обычный при помощи функции <code>load_uk</code> либо его аналог с очисткой данных <code>load_uk_scrubbed</code>. Приведенный выше пример должен вернуть список из 650 чисел, обозначающих количество избирателей в каждом избирательном округе Великобритании.</p>
 <p>Внося исправления поверх загружаемых данных, мы сохраняем возможность проследить характер выполненных преобразований. В результате нам самим — и будущим читателям нашего исходного кода — становится понятнее, какие были внесены изменения в источник данных. Это также означает, что, как только потребуется снова запустить наш анализ, но уже с данными из нового источника, мы можем попросту загрузить новый файл, указав его вместо существующего.</p>
 <p>Примеры исходного кода для этого поста находятся в моем <a href="https://github.com/capissimo/python-for-data-science" rel="noopener noreferrer nofollow">репо</a> на Github. Все исходные данные взяты в <a href="https://github.com/clojuredatascience/ch1-statistics" rel="noopener noreferrer nofollow">репозитории </a>автора книги.</p>
 <p>Следующая часть, <strong>часть 2</strong>, серии постов «<em>Python, исследование данных и выборы</em>» посвящена описательным статистикам, группированию данных и нормальному распределению. Все эти сведения заложат основу для дальнейшего анализа электоральных данных.</p>
</div>', '2021-05-05 19:35:00', 'Python, исследование данных и выборы: часть 1', 69, null, 8),
        (95, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/358/89a/06b/35889a06bad78ecd59dd1867eab3a399.png" width="480" height="424">
  <figcaption></figcaption>
 </figure>
 <p>Всем привет! В данной статье хотел бы рассмотреть инструменты документирования в принципиально разных подходах в разработке REST API, а именно для CodeFirst - инструменты SpringRestDocs (а также его надстройку SpringAutoRestDocs) и для ApiFirst - инструменты экосистемы Swagger(Open-Api).</p>
 <p><em>Дисклеймер: В подробности холивара на тему что же лучше CodeFirst или ApiFirst я вдаваться не будут, а постараюсь продемонстрировать возможную практику документации в обоих вариантах.</em></p>
 <h2>CodeFirst плюс SpringAutoRestDocs</h2>
 <p>Как уже описывали в <a href="https://habr.com/ru/post/341636/" rel="noopener noreferrer nofollow">статье про SpringRestDocs</a> это инструмент достаточно широкого использования, позволяющий генерировать различную документацию (аскедок, хтмл и т.д.) на основе тестов. Пожалуй один из немногих недостатков этого инструмента, является его многословность в тестах, а именно - необходимо описывать каждый параметр, каждое поле и т.д. В свою очередь тесы в SpringAutoRestDocs, используя JSR и Spring аннотации, а также Javadoc, становятся более коротким и немногословными.</p>
 <details class="spoiler">
  <summary>Чуть более подробно про SpringAutoRestDocs</summary>
  <div class="spoiler__content">
   <p>SpringAutoRestDocs это надстройка над SpringRestDocs, которая ставит своей целью уменьшение написания кода и документации. Основное преимущество этого иструмента - является меньшее количество написанной документации и большая связаность с рабочим кодом.</p>
   <p>Некоторые из фичей инструмента:</p>
   <ul>
    <li><p>Автоматическое документирования полей запроса и ответа, хедеров и параметров запроса с использованием Jackson, а также описательной части на основе Javadocs</p></li>
    <li><p>Автоматическое документирование опциональности и ограничения полей по спецификации JSR-303</p></li>
    <li><p>Возможность кастомизации итоговых снипеттов</p></li>
   </ul>
   <p><em>Подробнее можно почитать в </em><a href="https://scacap.github.io/spring-auto-restdocs/" rel="noopener noreferrer nofollow"><em>официальной документации</em></a><em>.</em></p>
  </div>
 </details>
 <p>Для демонстрации возьмем классический <a href="https://petstore.swagger.io/" rel="noopener noreferrer nofollow">Swagger PetStore</a> (с небольшой модернизацией, подробно можно посмотреть <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/swagger-library/specs/some_swagger.yaml" rel="noopener noreferrer nofollow">спеку в репозитории</a>) и имплементируем несколько методов контроллера (<code>addPet</code>, <code>deletePet</code>, <code>getPetById</code>). В статье будет приведен пример на основе одного метода <code>getPetById</code></p>
 <p><strong>Контроллер:</strong></p>
 <pre><code class="java">@RestController
@RequiredArgsConstructor
public class PetController implements PetApi {

    private final PetRepository petRepository;
    
    @Override
    public ResponseEntity&lt;Pet&gt; getPetById(Long petId) {
        return new ResponseEntity&lt;&gt;(petRepository.getPetById(petId), HttpStatus.OK);
    }
  //и другие имплементированные методы
}</code></pre>
 <p>Репозиторий является обычным листом с несколькими методами доступа.</p>
 <p><strong>Базовые настройки для тестовой автодокументации:</strong></p>
 <p>Для начала нам необходимо определить базовый класс для всех тестов, который опишет основные правила нашей автоматической документации. Основное что нам понадобится, это сконфигурированный <code>MockMvc</code> (более подробно можно посмотреть <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/spring-auto-rest-docs/src/test/groovy/ru/spring/auto/rest/docs/demo/controllers/MockMvcDocumentSpec.groovy#L37" rel="noopener noreferrer nofollow">в репозитории</a>):</p>
 <pre><code class="java">@Before
void setUp() throws Exception {
  this.mockMvc = MockMvcBuilders
    .webAppContextSetup(context)
    .alwaysDo(prepareJackson(objectMapper, new TypeMapping()))
    .alwaysDo(commonDocumentation())
    .apply(documentationConfiguration(restDocumentation)
           .uris().withScheme("http").withHost("localhost").withPort(8080)
           .and()
           .snippets().withTemplateFormat(TemplateFormats.asciidoctor())
           .withDefaults(curlRequest(), httpRequest(), httpResponse(),
                         requestFields(), responseFields(), pathParameters(),
                         requestParameters(), description(), methodAndPath(),
                         section(), links(), embedded(), authorization(DEFAULT_AUTHORIZATION),
                         modelAttribute(requestMappingHandlerAdapter.getArgumentResolvers())))
    .build()
  }

protected RestDocumentationResultHandler commonDocumentation(Snippet... snippets) {
  return document("rest-auto-documentation/{class-name}/{method-name}", commonResponsePreprocessor(), snippets)
  }

protected OperationResponsePreprocessor commonResponsePreprocessor() {
  return preprocessResponse(replaceBinaryContent(), limitJsonArrayLength(objectMapper), prettyPrint())
  }</code></pre>
 <details class="spoiler">
  <summary>Чуть более подробно про настройки MockMVC</summary>
  <div class="spoiler__content">
   <p><code>WebApplicationContext</code> получаем от <code><a class="mention" href="/users/springboottest">@SpringBootTest</a></code></p>
   <p><code>prepareJackson(objectMapper, new TypeMapping())</code> позволяет настроить <code>ResultHandler</code>, который подготовит наши pojo для библиотеки документирования</p>
   <p><code>withDefaults(curlRequest(), httpRequest(), и т.д.)</code> набор сниппетов, которые будут сгенерированы</p>
   <p><code>commonDocumentation()</code> описывает директорию, куда в build папке разместятся сгенерированные сниппеты, а также препроцессинг ответа контроллера.</p>
  </div>
 </details>
 <p><strong>Непосредственно сам тест:</strong></p>
 <p>Пример теста более подробно можно посмотреть <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/spring-auto-rest-docs/src/test/groovy/ru/spring/auto/rest/docs/demo/controllers/PetControllerAutoTest.groovy" rel="noopener noreferrer nofollow">в репозитории</a>.</p>
 <pre><code>@Test
void getPetTest() {
//given
def petId = 1L
//when
def resultActions = mockMvc
	.perform(RestDocumentationRequestBuilders
		.get("/pet/{petId}", petId)
		.header("Accept", "application/json"))
//then
resultActions
	.andExpect(status().isOk())
	.andExpect(content().string(objectMapper.writeValueAsString(buildReturnPet())))
}</code></pre>
 <p>Здесь приведен стандартный <code>MockMvc</code> тест, с ожидаемым статусом и ожидаемым телом ответа.</p>
 <p><strong>Итого на выходе:</strong></p>
 <p>Набор снипеттов с "главным" сниппетом под названием <code>auto-section.adoc</code> (который содержит информацию из всех остальных, указанных в настройках <code>MockMVC</code>) из которых позже можно собрать общий <code>index.adoc</code> для всех методов API. Готовая структура сниппетов:</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/1c3/281/76b/1c328176b3d494b36eca277321cf57d2.png" width="420" height="634">
  <figcaption></figcaption>
 </figure>
 <p>Готовые сниппеты документы можно посмотреть в репозитории: <a href="https://github.com/GrinRus/rest-docs-demo/tree/master/generated/spring-auto-rest-docs/generated-snippets/rest-auto-documentation/pet-controller-auto-test" rel="noopener noreferrer nofollow">сниппеты, </a><a href="https://htmlpreview.github.io/?https://github.com/GrinRus/rest-docs-demo/blob/master/generated/spring-auto-rest-docs/generated-snippets/asciidoc/index.html" rel="noopener noreferrer nofollow">html сгенеренный на основе сниппетов</a>.</p>
 <p>Также при настройках библиотеки мы можем изменять шаблоны либо добавлять свои сниппеты и SprinAutoRestDocs их распознает и воспроизведет ту функциональность, что вам нужна. Дока кастомизации <a href="https://scacap.github.io/spring-auto-restdocs/#snippets-customization" rel="noopener noreferrer nofollow">сниппетов</a>, <a href="https://scacap.github.io/spring-auto-restdocs/#constraints-custom" rel="noopener noreferrer nofollow">констрейнтов</a>.</p>
 <details class="spoiler">
  <summary>Чуть подробнее про кастомизацию сниппетов и ограничений</summary>
  <div class="spoiler__content">
   <p>Функционал кастомизации в SpringAutoRestDocs базируется на таковом же в SpringRestDocs.</p>
   <ul>
    <li><p>На примере аскедок шаблонов - в ресурсы вашего проекта в папку org/springframework/restdocs/templates/asciidoctor необходимо добавить нужный вам сниппет без приставки <code>default-</code><a href="https://github.com/ScaCap/spring-auto-restdocs/tree/master/spring-auto-restdocs-core/src/main/resources/org/springframework/restdocs/templates/asciidoctor" rel="noopener noreferrer nofollow">Список дефолтных аскедок сниппетов.</a></p></li>
    <li><p>На примере ограничений - в ресурсы вашего проекта в папку org/springframework/restdocs/constraints необходимо добавить файл <code>DefaultConstraintDescriptions.properties</code> с переопределенным списком ограничений <a href="https://github.com/spring-projects/spring-restdocs/blob/main/spring-restdocs-core/src/main/resources/org/springframework/restdocs/constraints/DefaultConstraintDescriptions.properties" rel="noopener noreferrer nofollow">Список дефолтных ограничений и их сообщения</a>.</p></li>
   </ul>
  </div>
 </details>
 <p>К примеру <a href="https://github.com/GrinRus/rest-docs-demo/tree/master/spring-auto-rest-docs/src/test/resources/org/springframework/restdocs" rel="noopener noreferrer nofollow">русификация шапок сниппетов и описание ограничений:</a></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9ca/f54/2f5/9caf542f566255273c5b396e78e2c10e.png" width="964" height="532">
  <figcaption></figcaption>
 </figure>
 <h2>ApiFirst плюс Swagger</h2>
 <p>Как уже описывалось во множестве статей (<a href="https://habr.com/ru/post/434798/" rel="noopener noreferrer nofollow">пример1</a>, <a href="https://habr.com/ru/post/541592/" rel="noopener noreferrer nofollow">пример2</a>) swagger - это open-source проект, включающий OpenApi Specification и широкий набор инструментов для описания, визуализации и документирования REST api.</p>
 <details class="spoiler">
  <summary>Чуть более подробно про Swagger</summary>
  <div class="spoiler__content">
   <p>Swagger состоит из двух основных частей - это OpenApi Specification и Swagger Tools.</p>
   <ul>
    <li><p>OpenApi Specification - это спецификация описывающая процесс создания REST контракта для более простого процесса разработки и внедрения API. Спецификация может быть описана в формате YAML и JSON. Описание базового синтаксиса, а также более подробную информацию можно изучить по <a href="https://swagger.io/docs/specification/basic-structure/" rel="noopener noreferrer nofollow">ссылке</a>.</p></li>
    <li><p>Swagger Tools - это инструменты визуализации, документации и генерации клиентно-серверной части REST api. Состоят из трех основных блоков: <a href="http://editor.swagger.io/" rel="noopener noreferrer nofollow">Swagger Editor</a>(браузерный эдитор, для более удобного написания контракта с поддержкой валидации ситаксиса), <a href="https://swagger.io/swagger-ui/" rel="noopener noreferrer nofollow">Swagger UI</a>(рендер спецификации в качестве интерактивной документации API), <a href="https://github.com/swagger-api/swagger-codegen" rel="noopener noreferrer nofollow">Swagger Codegen</a>(генератор серверно-клиентной части, а также некоторых типов документаций)</p></li>
   </ul>
  </div>
 </details>
 <p>Ниже мы рассмотрим мульти-модульный проект со следущей структурой: библиотека со свагер генератором (<a href="https://github.com/GrinRus/rest-docs-demo/tree/master/swagger-library" rel="noopener noreferrer nofollow">swagger-library</a>), стартер с swagger-ui(<a href="https://github.com/GrinRus/rest-docs-demo/tree/master/swagger-webjar-ui-starter" rel="noopener noreferrer nofollow">swagger-webjar-ui-starter</a>), приложение которое имплементирует классы библиотеки(<a href="https://github.com/GrinRus/rest-docs-demo/tree/master/spring-auto-rest-docs" rel="noopener noreferrer nofollow">spring-auto-rest-docs</a>).</p>
 <figure class="">
  <img src="https://habrastorage.org/getpro/habr/upload_files/eee/029/e38/eee029e38f73aaaa03f35bd092839225.png" width="323" height="569">
  <figcaption></figcaption>
 </figure>
 <p>Для демонстрации возможностей Swagger возьмем классический <a href="https://petstore.swagger.io/" rel="noopener noreferrer nofollow">Swagger PetStore</a> из примера SpringAutoRestDocs выше.</p>
 <p><strong>Настройки build.gradle для модуля библиотеки:</strong></p>
 <p>Для реализации генерации server stub и документации на основе Swagger контракта используем <a href="https://github.com/OpenAPITools/openapi-generator" rel="noopener noreferrer nofollow">OpenApi Generator</a>.</p>
 <details class="spoiler">
  <summary>Чуть более подробно про OpenApi Generator</summary>
  <div class="spoiler__content">
   <p>В модуле используется gradle плюс <a href="https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin" rel="noopener noreferrer nofollow">gradle plugin OpenApi Generator</a>.</p>
   <p>Сам плагин дает возможность генерить как серверно-клиентную часть, так и различные форматы документации. Более подробно можно посмотреть в <a href="https://github.com/OpenAPITools/openapi-generator" rel="noopener noreferrer nofollow">ссылке на репозиторий</a>.</p>
  </div>
 </details>
 <p>Основная таска для генерации библиотеки и ее настройки:</p>
 <pre><code>openApiGenerate {
    generatorName = ''spring''
    inputSpec = specFile
    outputDir = "${project.projectDir}/"
    id = "${artifactId}"
    groupId = projectPackage
    ignoreFileOverride = ignoreFile
    apiPackage = "${projectPackage}.rest.api"
    invokerPackage = "${projectPackage}.rest.invoker"
    modelPackage = "${projectPackage}.rest.model"
    configOptions = [
            dateLibrary            : ''java8'',
            hideGenerationTimestamp: ''true'',
            interfaceOnly          : ''true'',
            delegatePattern        : ''false'',
            configPackage          : "${projectPackage}.configuration"
    ]
}</code></pre>
 <details class="spoiler">
  <summary>Чуть более подробно про настройки таски openApiGenerate</summary>
  <div class="spoiler__content">
   <ul>
    <li><p>generatorName - в качестве основы для генерации серверной части используем </p></li>
    <li><p>Spring (<a href="https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/spring.md" rel="noopener noreferrer nofollow">проперти для настройки генератора spring</a>)</p></li>
    <li><p>dateLibrary - позволяет изменить шаблон используемых в генерации библиотек работы с датой (joda, JSR-310 и т.д.)</p></li>
    <li><p>также можно изменять <a href="https://github.com/OpenAPITools/openapi-generator/blob/master/docs/global-properties.md" rel="noopener noreferrer nofollow">глобальные проперти генератора</a>, не зависящие от конкретной реализации</p></li>
   </ul>
  </div>
 </details>
 <p>Незабываем выполнять генерацию кода до компиляции проекта:</p>
 <pre><code>task codegen(dependsOn: [''openApiGenerate'', ''copySpecs''])

compileJava.dependsOn(codegen)
compileJava.mustRunAfter(codegen)</code></pre>
 <p>Копируем спеки в ресурсы, чтобы была позже возможность отобразить UI прямо из спек:</p>
 <pre><code>task copySpecs(type: Copy) {
    from("${project.projectDir}/specs")
    into("${project.projectDir}/src/main/resources/META-INF/specs")
}</code></pre>
 <p>При необходимости также можно сгенерить <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/swagger-library/build.gradle#L51" rel="noopener noreferrer nofollow">Asciidoc</a> или <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/swagger-library/build.gradle#L62" rel="noopener noreferrer nofollow">Html2</a>.</p>
 <p><strong>Swagger-ui стартер:</strong></p>
 <p>Стартер добавляет в регистр ресурсов спеки с определенными в <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/swagger-webjar-ui-starter/src/main/java/ru/ryabov/swagger/webjar/ui/autoconfiguration/SwaggerProperties.java#L13" rel="noopener noreferrer nofollow">дефолтными настройками </a>и webjar swagger-ui с измененным путем до дефолтного контракта.</p>
 <p><strong>Rest-docs API:</strong></p>
 <p>В самом приложении достаточно <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/spring-auto-rest-docs/src/main/java/ru/spring/auto/rest/docs/demo/controllers/PetController.java" rel="noopener noreferrer nofollow">имплементировать сгенерированный интерфейс</a> и <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/spring-auto-rest-docs/src/main/resources/config/application.yml#L3-L10" rel="noopener noreferrer nofollow">переопределить настройки UI стартера</a>:</p>
 <pre><code>@RestController
@RestController
@RequiredArgsConstructor
public class PetController implements PetApi {

    private final PetRepository petRepository;
    
    @Override
    public ResponseEntity&lt;Pet&gt; getPetById(Long petId) {
        return new ResponseEntity&lt;&gt;(petRepository.getPetById(petId), HttpStatus.OK);
    }
  //и другие имплементированные методы
}</code></pre>
 <pre><code>swagger:
  ui:
    indexHandler:
      enabled: true
      resourceHandler: "/api/**"
    apis:
      - url: http://localhost:8080/specs/some_swagger.yaml
        name: My api</code></pre>
 <p><strong>Итого на выходе:</strong></p>
 <p>Server stub - готовая библиотека с сущностями и интерфейсом для реализации серверной части API.</p>
 <p>Swagger UI - с помощью которого мы получаем наглядную визуализацию API и возможность направлять запросы прямо из UI:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a35/ba0/48b/a35ba048b0a47e10bad0172fd531852a.png" width="1140" height="613">
  <figcaption></figcaption>
 </figure>
 <p>Также примеры <a href="https://github.com/GrinRus/rest-docs-demo/blob/master/generated/swagger/asciidoc/index.adoc" rel="noopener noreferrer nofollow">Asciidoc</a> или <a href="https://htmlpreview.github.io/?https://github.com/GrinRus/rest-docs-demo/blob/master/generated/swagger/asciidoc/index.html" rel="noopener noreferrer nofollow">Html2</a> из самого swagger контракта:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/950/d3d/51f/950d3d51f7987f084cee36f39fbf5283.png" width="1880" height="865">
  <figcaption></figcaption>
 </figure>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/65d/473/aba/65d473abac30a341d38060bf6007aab7.png" width="1881" height="873">
  <figcaption></figcaption>
 </figure>
 <h2>Заключение:</h2>
 <p>Что дает SpringAutoRestDocs:</p>
 <ul>
  <li><p>Возможность хранить документацию как в проекте (к примеру в форме собранного index.html из множества сниппетов), так и в любом другом удобном месте.</p></li>
  <li><p>Документация и модель данных всегда синхронизирована с кодом, так как документация генерируется на основе "зеленых" тестов контроллера.</p></li>
  <li><p>Возможность кастомизации сниппетов и ограничений.</p></li>
 </ul>
 <p>Что дает Swagger:</p>
 <ul>
  <li><p>Единый артефакт на всех этапах разработки.</p></li>
  <li><p>Документация и модель данных всегда синхронизирована с кодом, так как код генерируется на основе контракта.</p></li>
  <li><p>Возможность использовать UI, в котором будет вся та же информация, что в контракте с возьможностью направлять запросы.<br> </p></li>
 </ul>
 <p>Какой бы вы не выбрали путь разработки, инструменты выше практически всегда позволят вам содержать актуальную документацию, тесно связанную с рабочим кодом.</p>
</div>', '2021-05-08 12:11:00', 'Документируй это', 16, null, 7),
        (96, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/oi/zy/rq/oizyrqcsemuizc1_ryss0cm58te.jpeg">
 <br> 
 <br> 21 мая в «Слёрме» начнётся интенсив по SRE. На три полных дня участники погрузятся в теорию и практику поддержки высоконагруженных сервисов. Никаких задач по работе, никаких семейных дел — только учёба. Под катом рассказываем, что вас ждёт, если решите присоединиться.
 <br> <a name="habracut"></a>
 <br> 
 <h4>Справка об SRE</h4>
 <br> Site Reliability Engineering (SRE) — обеспечение надёжности информационных систем. Это новый подход к поддержке сайтов, сервисов и приложений с тысячами и миллионами пользователей. Подход зародился в Google, а сейчас распространяется по всему миру. В России SRE внедрили в Яндексе, Mail.ru, Сбербанке, Тинькофф, МТС, Мегафоне и других компаниях.
 <br> 
 <br> Инженерами по SRE становятся опытные разработчики и системные администраторы: важно глубокое знание серверных ОС, работы сети, инструментов мониторинга, а также умение программировать. На все эти хард-скиллы накладывается методология SRE — конкретные практики, которые помогают обеспечивать высокую надёжность.
 <br> 
 <br> 
 <blockquote>
  «SRE — это не столько про алертинг и постмортемы. Это про то, чтобы до продакшена не доходил код, который ночью подрывает».
  <br> 
  <br> Из общения с инженерами, внедрившими SRE
 </blockquote>
 <br> Долгое время основным источником знаний об SRE была одноимённая книга от Google. Сейчас есть несколько англоязычных и русскоязычных обучающих программ. Одна из них — интенсив по SRE в Слёрме. 
 <br> 
 <br> 
 <h4>Формат интенсива</h4>
 <br> Интенсив проходит онлайн и состоит из лекций и практических занятий. Будет трансляция в Zoom и Telegram-чат со спикерами.
 <br> 
 <br> <b>Два вида практики.</b> Практические занятия предусмотрены двух видов: настройка по образцу и работа над задачами, решение которых не определено заранее. На интенсиве они называются <i>кейсы</i>.
 <br> 
 <br> <b>Командная работа над реальным сервисом.</b> Для работы над кейсами участники интенсива объединяются в команды по 5-8 человек. Каждая команда получает стенд с приложением — несколько VDS, на которых размещён <b>сайт для заказа билетов</b>. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/py/yz/ty/pyyztybz7elxxetpygdzeb4t_7q.png">
 <br> <i>Сервис заказа билетов, стабильную работу которого будут обеспечивать участники интенсива</i>
 <br> 
 <br> <b>Имитация сбоев.</b> В течение интенсива в работе сайта произойдёт несколько крупных сбоев, и задача команды — найти причину, устранить и предотвратить её повторение. Кейсы основаны на реальном опыте: спикеры собрали проблемы, с которыми сталкивались за свою практику SRE, и создали среду для имитации этих проблем.
 <br> 
 <br> <b>Опытные спикеры.</b> Программу интенсива разработали и будут вести: 
 <br> 
 <br> 
 <ul> 
  <li>Иван Круглов, Staff Software Engineer в Databricks.</li> 
  <li>Артём Артемьев, Lead SRE в TangoMe.</li> 
  <li>Павел Селиванов, Senior DevOps Engineer в Mail.ru Cloud Solutions.</li> 
 </ul>
 <br> <b>Поддержка.</b> Объединиться в команды и организовать совместную работу помогут кураторы. В решении сложных задач поддержат спикеры и инженеры техподдержки Слёрма.
 <br> 
 <br> <b>Дистанционный формат. </b>Лекции транслируются в Zoom, обсуждение задач происходит в Slack. Все записи лекций сохранятся и будут доступны после интенсива, к ним полезно возвращаться через некоторое время, уже в более спокойной обстановке.
 <br> 
 <br> <b>Три дня полного погружения.</b> Интенсив рассчитан на три полных дня, с 10:00 до 18:00 по Московскому времени. Будут небольшие перерывы между лекциями и обед.
 <br> 
 <br> Старт 21 мая. Места ещё есть.
 <br> 
 <br> <a href="https://slurm.io/sre?utm_source=habr&amp;utm_medium=post&amp;utm_campaign=sre&amp;utm_content=post_12-05-2021&amp;utm_term=toplink">Узнать больше и зарегистрироваться</a>
 <br> 
 <br> Ниже полная программа интенсива.
 <br> 
 <br> 
 <h4>День 1: знакомство с теорией SRE, настройка мониторинга и алертинга</h4>
 <br> В первый день вы познакомитесь с теорией SRE, научитесь настраивать мониторинг и алертинг, а также объединитесь в команду с другими участниками интенсива.
 <br> 
 <br> Расскажем про метрики SLO, SLI, SLA и как они соотносятся с требованиями бизнеса. Поделимся Best Practices по настройке мониторинга и правилами для пожарной команды. Дадим первые практические кейсы.
 <br> 
 <br> <b>Тема 1: Мониторинг </b>
 <br> 
 <br> 
 <ul> 
  <li>Зачем нужен мониторинг,</li> 
  <li>Symptoms vs Causes,</li> 
  <li>Black-Box vs. White-Box Monitoring,</li> 
  <li>Golden Signals,</li> 
  <li>Перцентили,</li> 
  <li>Alerting,</li> 
  <li>Observability.</li> 
 </ul>
 <br> Практика: Делаем базовый дашборд и настраиваем необходимые алерты.
 <br> 
 <br> <b>Тема 2: Теория SRE </b>
 <br> 
 <br> 
 <ul> 
  <li>SLO, SLI, SLA,</li> 
  <li>Durability,</li> 
  <li>Error budget.</li> 
 </ul>
 <br> Практика: Добавляем на дашборд SLO/SLI + алерты.
 <br> Практика: Первая нагрузка системы.
 <br> 
 <br> 
 <blockquote>
  Кейс 1: downstream-зависимость. В большой системе существует много взаимозависимых сервисов, и не всегда они работают одинаково хорошо. Особенно обидно, когда с вашим сервисом порядок, а соседний, от которого вы зависите, периодически уходит в down. Учебный проект окажется именно в таких условиях, а вы сделаете так, чтобы он все равно выдавал качество на максимально возможном уровне.
  <br> 
 </blockquote>
 <br> <b>Тема 3: Управление инцидентами</b>
 <br> 
 <br> 
 <ul> 
  <li>Resiliencе Engineering,</li> 
  <li>Как выстраивается пожарная бригада,</li> 
  <li>Насколько ваша команда эффективна в инциденте,</li> 
  <li>7 правил для лидера инцидента,</li> 
  <li>5 правил для пожарного,</li> 
  <li>HiPPO — highest paid person''s opinion. Communications Leader.</li> 
 </ul>
 <br> 
 <blockquote>
  Кейс 2: upstream-зависимость. Одно дело, когда вы зависите от сервиса с низким SLO. Другое дело, когда ваш сервис является таковым для других частей системы. Так бывает, если критерии оценки не согласованы: например, вы отвечаете на запрос в течение секунды и считаете это успехом, а зависимый сервис ждёт всего 500 мск и уходит с ошибкой. В кейсе обсудим важность согласования метрик и научимся смотреть на качество глазами клиента.
 </blockquote>
 <br> <b>Тема 4: SRE онбординг проекта</b>
 <br> В крупных компаниях нередко формируют отдельную команду SRE, которая берёт на поддержку сервисы других отделов. Но не каждый сервис готов к тому, чтобы его можно было взять на поддержку. Расскажем, каким требованиям он должен отвечать.
 <br> 
 <br> 
 <h4>День 2: решение проблем с окружением и архитектурой</h4>
 <br> Второй день практически полностью построен вокруг решения двух кейсов: проблемы с окружением (здесь будет подробный разбор Health Checking) и проблемы с архитектурой. Спикеры расскажут про работу с постмортерами (post mortem) и дадут шаблоны, которые вы сможете использовать в своей команде.
 <br> 
 <br> <b>Тема 5: Health Checking</b>
 <br> 
 <br> 
 <ul> 
  <li>Health Check в Kubernetes,</li> 
  <li>Жив ли наш сервис?</li> 
  <li>Exec probes,</li> 
  <li>initialDelaySeconds,</li> 
  <li>Secondary Health Port,</li> 
  <li>Sidecar Health Server,</li> 
  <li>Headless Probe,</li> 
  <li>Hardware Probe.</li> 
 </ul>
 <br> 
 <blockquote>
  Кейс 3: проблемы с окружением и правильный Healthcheck. Задача Healthcheck — обнаружить неработающий сервис и заблокировать трафик к нему, чтобы пользователи не столкнулись с проблемой. И если вы думаете, что для этого достаточно сделать рутом запрос к сервису и получить ответ, то вы ошибаетесь: даже если сервис ответит, это не гарантирует его работоспособность — проблемы могут быть в окружении. Через этот кейс вы научитесь настраивать корректный Healthcheck и не пускать трафик туда, где он не может быть обработан. 
 </blockquote>
 <br> <b>Тема 6: Практика работы с постмортемами</b> — пишем постмортем по предыдущему кейсу и разбираем его со спикерами.
 <br> 
 <br> <b>Тема 7: Решение проблем с инфраструктурой</b>
 <br> 
 <br> 
 <ul> 
  <li>Мониторинг MySQL,</li> 
  <li>SLO/SLI для MySQL,</li> 
  <li>Anomaly detection.</li> 
 </ul>
 <br> 
 <blockquote>
  Кейс 4: проблемы с БД. База данных тоже может быть источником проблем. Например, если не следить за replication relay, то реплика устареет и приложение будет отдавать старые данные. Причём дебажить такие случаи особенно сложно: сейчас данные рассогласованы, а через несколько секунд уже нет, и в чём причина проблемы — непонятно. Через кейс вы прочувствуете всю боль дебага и узнаете, как предотвращать подобные проблемы.
 </blockquote>
 <br> 
 <h4>День 3: traffic shielding и канареечные релизы</h4>
 <br> Тут два кейса про высокую доступность продакшена: traffic shielding и canary deployment. Вы узнаете об этих подходах и научитесь их применять. Хардкорной настройки руками не планируем, хотя кто знает.
 <br> 
 <br> <b>Тема 8: Traffic shielding</b>
 <br> 
 <br> 
 <ul> 
  <li>поведение графиков роста кол-ва запросов и бизнес операций</li> 
  <li>понятие saturation и capacity planning</li> 
  <li>traffic shielding и внедрение rate limiting</li> 
  <li>настройка sidecar с rate-limiting на 100 запросов в секунду</li> 
 </ul>
 <br> 
 <blockquote>
  Кейс 5: traffic shielding. Когда падает прод? Например, когда мощности рассчитаны на 100 пользователей, а приходит 1000. Вы столкнётесь с подобным кейсом и научитесь делать так, чтобы система не падала целиком, а продолжала обслуживать то количество клиентов, на которое была рассчитана. Блокируя избыточный трафик, вы сохраните возможность системы выполнять задачи для части пользователей.
  <br> 
 </blockquote>
 <br> <b>Тема 9: Canary Deployment</b>
 <br> 
 <br> 
 <ul> 
  <li>стратегии деплоя в k8s (Rolling Update vs Recreate),</li> 
  <li>canary и blue-green стратегии,</li> 
  <li>обзор инструментов для blue-gree/canary release в k8s,</li> 
  <li>настройка canary release в GitLab CI/CD,</li> 
  <li>пояснение схемы работы canary release,</li> 
  <li>внесение изменений в .gitlab-ci.yml.</li> 
 </ul>
 <br> 
 <blockquote>
  Кейс 6: проблемы с кодом. Как бы хорошо новые фичи не работали на стейджинге, 
  <br> всегда есть вероятность, что в продакшене что-то пойдёт не так. Снизить потенциальный ущерб можно, если выкатить обновление только на часть пользователей и предусмотреть возможность быстрого отката назад. Подобный подход называется Canary Deployment, и через практический кейс вы научитесь его применять.
 </blockquote>
 <br> <a href="https://slurm.io/sre?utm_source=habr&amp;utm_medium=post&amp;utm_campaign=sre&amp;utm_content=post_12-05-2021&amp;utm_term=bottomlink">Узнать больше и записаться</a>
</div>', '2021-05-12 14:07:00', '«SRE — это не только про алертинг и постмортемы, а ещё про то, чтобы до продакшена не доходил код, который будит ночью»', 57, null, 5),
        (97, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e8d/083/a05/e8d083a05e7972aec5691b0c3dbf200a.png" width="780" height="439">
  <figcaption></figcaption>
 </figure>
 <hr>
 <p>*Container Queries — Выражения от контейнера&nbsp;</p>
 <p>За последние шесть лет моей работы в качестве front-end разработчика я не был так рад появлению CSS фитчи, как сейчас. Прототип container queries теперь доступен в Chrome Canary. Благодаря усилиям таких умных людей, как Miriam Suzanne и других.</p>
 <p>Я помню, что видел много шуток по поводу поддержки CSS container queries, но они наконец-то появились. В этой статье я расскажу вам, зачем нужны container queries, как они облегчат вам жизнь, а главное, вы увидите более мощные компоненты и разметки.</p>
 <p>Если вы взволнованы так же, как и я, то давайте начнем. Вы готовы?</p>
 <h3>Проблема с CSS Media Queries</h3>
 <h3>*CSS Media Queries - Медиа запросы</h3>
 <p>Веб-страница состоит из различных разделов и компонентов, и мы делаем их отзывчивыми с помощью CSS media queries. В этом нет ничего плохого, но это имеет свои ограничения. Например, мы можем использовать media query, чтобы показать минимальную версию компонента на мобильном устройстве по сравнению с десктопом.</p>
 <p>Зачастую отзывчивый веб-дизайн не имеет отношения к области просмотра или размеру экрана. Речь идет о размере контейнера. Рассмотрим следующий пример:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/3c0/325/1db/3c03251db5e403c3f4de132fd8fcf407.png" width="1139" height="763">
  <figcaption></figcaption>
 </figure>
 <p>У нас есть очень типичная разметка компонента карточки, которая имеет две вариации:</p>
 <ul>
  <li><p>Cтековая (см. в сторону)</p></li>
  <li><p>Горизонтальная (см. основную)</p></li>
 </ul>
 <p>Существует множество способов реализовать это в CSS, но наиболее распространенный из них выглядит следующим образом. Нам нужно создать базовый компонент, а затем сделать его вариации.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f18/e18/ec9/f18e18ec9e40aca2b69b6af53328ddd0.png" width="1186" height="869">
  <figcaption></figcaption>
 </figure>
 <p>Обратите внимание, что мы создали класс .c-article--horizontal для работы с горизонтальной версией компонента. Если ширина области просмотра больше 46rem, то компонент должен перейти в горизонтальную вариацию.</p>
 <p>Это не плохо, но почему-то это заставляет меня чувствовать себя немного ограниченным. Я хочу, чтобы компонент реагировал на ширину родительского компонента, а не на область просмотра браузера или размер экрана.</p>
 <p>Предположим, что мы хотим использовать стандартную .c-card в главной секции. Что произойдет? По сути, карточка расширится до ширины родительского компонента и, таким образом, будет слишком большой. Смотрите следующий рисунок:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/97a/304/3e4/97a3043e4aa933be9510271a66c87011.png" width="1141" height="771">
  <figcaption></figcaption>
 </figure>
 <p>Это проблема, и мы можем решить ее с помощью CSS container queries (ура, наконец-то). Однако, прежде чем погрузиться в них, позвольте мне дать вам представление о результате, который мы хотим получить.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/86b/b6f/2cc/86bb6f2cc2df48f5095c4ce9a6cc6f3b.png" width="1113" height="792">
  <figcaption></figcaption>
 </figure>
 <p>Нам нужно указать компоненту, что если ширина его родительского компонента больше 400px, то он должен переходить на горизонтальный стиль. Вот как будет выглядеть CSS:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/86b/494/97b/86b49497b8e0b5e342c86532c737ab87.png" width="916" height="865">
  <figcaption></figcaption>
 </figure>
 <h3>Как CSS Container Queries помогают нам?</h3>
 <p>Внимание: CSS container queries пока поддерживаются только в Chrome Canary под экспериментальным флагом.</p>
 <p>С помощью CSS container queries мы можем решить вышеописанную проблему и сделать компонент Fluid. Это значит, что мы можем поместить компонент в родительский, и он превратится в сложенную версию, или поместить его в широкий компонент, и он превратится в горизонтальную версию. Опять же, все это не зависит от ширины области просмотра.</p>
 <p>Вот как я себе это представляю.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/74f/321/659/74f321659cc5b448a7867a4e11566102.png" width="878" height="648">
  <figcaption></figcaption>
 </figure>
 <p>Фиолетовый контур представляет собой ширину родительского компонента. Обратите внимание, что когда происходит увеличение, компонент адаптируется к этому. Разве это не потрясающе? В этом и заключается сила CSS container queries.</p>
 <p>Как работают Container Queries?</p>
 <p>Теперь мы можем поэкспериментировать с Chrome Canary container queries . Чтобы активировать их, перейдите по адресу chrome://flags &nbsp;и найдите "container queries", а затем запустите их.</p>
 <p>Первым шагом будет добавление свойства contain . Поскольку компонент адаптируется в зависимости от ширины родительского компонента, нам нужно указать браузеру, что необходимо перерисовывать только затронутую область, а не всю страницу. С помощью свойства contain мы можем сообщить браузеру об этом заранее.</p>
 <p>Значение inline-size означает, что нужно реагировать только на изменение ширины родительского компонента. Я пробовал использовать block-size, но это пока не работает. Пожалуйста, поправьте меня, если я ошибаюсь.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/832/dd3/dbf/832dd3dbf6508640a0ed28a9affc152b.png" width="903" height="572">
  <figcaption></figcaption>
 </figure>
 <p>Это первый шаг. Мы определили элемент .o-grid__item в качестве родительского элемента для содержащегося в нем .c-article.</p>
 <p>Следующим шагом будет добавление стилей, необходимых для работы container queries.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/878/3bf/4cf/8783bf4cf103c2d96941f537860e5c00.png" width="894" height="396">
  <figcaption></figcaption>
 </figure>
 <p>@container - это элемент .o-grid__item, а min-width: 400px- его ширина. Мы можем даже пойти дальше и добавить больше стилей. Вот видео о том, чего можно добиться для компонента карточки:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/1d7/4b5/cb8/1d74b5cb8acb6f4cdef503eac0cec428.png" width="890" height="483">
  <figcaption></figcaption>
 </figure>
 <p>Видео по ссылке: <a href="https://ishadeed.com/assets/cq/cq-1.mp4"><u>https://ishadeed.com/assets/cq/cq-1.mp4</u></a></p>
 <p>Здесь есть следующие стили:</p>
 <ul>
  <li><p>По умолчанию - вид, похожий на карточку.</p></li>
  <li><p>Горизонтальная карточка с небольшой миниатюрой.</p></li>
  <li><p>Горизонтальная карточка с большой миниатюрой.</p></li>
  <li><p>Если родительский компонент слишком большой, то это будет как hero-стиль с указанием на то, что это тематическая статья.</p></li>
 </ul>
 <p>Давайте разберемся с вариантами использования CSS container queries.</p>
 <p>Использование кейсов для CSS Container Queries</p>
 <h4>Container Queries и CSS Grid auto-fit</h4>
 <p>В некоторых случаях использование auto-fit в CSS grid может привести к неожиданным результатам. Например, компонент будет слишком широким, и его содержимое будет трудно прочитать.</p>
 <p>Чтобы немного прояснить ситуацию, вот наглядный пример, показывающий разницу между auto-fit и auto-fill в CSS grid (CSS сетка).</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/217/f42/0f6/217f420f651d417b53a33bb622d502a0.png" width="885" height="564">
  <figcaption></figcaption>
 </figure>
 <p>Обратите внимание, что при использовании auto-fit элементы расширяются, заполняя доступное пространство. Однако в случае auto-fill элементы сетки не будут увеличиваться, и вместо них появится свободное пространство (пунктирный элемент в крайнем правом углу).</p>
 <p>Возможно, вы сейчас подумаете, какое отношение это имеет к CSS container queries? Так вот, каждый элемент сетки является контейнером, и когда он расширяется ( когда мы используем auto-fit), нам нужно, чтобы компонент менялся соответственно.</p>
 <p><br></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/24a/b9b/e41/24ab9be41718e3f749ecd8dd1e8409f3.png" width="1053" height="690">
  <figcaption></figcaption>
 </figure>
 <p>Когда у нас будет четыре элемента, результат должен выглядеть примерно так.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/208/78b/e2f/20878be2ffd494a3155e3a1e2b60fc83.png" width="904" height="380">
  <figcaption></figcaption>
 </figure>
 <p>Это изменится, когда количество статей станет меньше, смотрите, что произойдет. Чем меньше статей, тем шире они становятся. Причина в том, что используется auto-fit. Первый вариант выглядит хорошо, но последние два (2 в ряду, 1 в ряду) выглядят не очень хорошо, так как они слишком широкие.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/57f/02e/9ec/57f02e9ec8c7ba8a0071a7eb6465c54f.png" width="878" height="449">
  <figcaption></figcaption>
 </figure>
 <p>Что если каждый компонент статьи будет изменяться в зависимости от ширины его родительского компонента? Таким образом, мы сможем получить преимущество auto-fit. Вот что нам нужно сделать:</p>
 <p>Если ширина элемента сетки больше 400px, то статья должна переходить на горизонтальный стиль.</p>
 <p>Вот как мы можем это сделать:</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e08/dda/094/e08dda0942d72832aea3d8ef0935ec46.png" width="877" height="339">
  <figcaption></figcaption>
 </figure>
 <p>Кроме того, мы хотим отображать статью с hero-секцией, если это единственный элемент в сетке.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/2fd/045/449/2fd045449cf212b68c0b2beb91ae4495.png" width="753" height="543">
  <figcaption></figcaption>
 </figure>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/049/6bf/47e/0496bf47e235fc981361c7d34b85766b.png" width="737" height="484">
  <figcaption></figcaption>
 </figure>
 <p>Вот и все. У нас есть компонент, который реагирует на ширину своего родительского компонента, и он может работать в любом контексте. Разве это не потрясающе?</p>
 <p>Посмотрите <a href="https://codepen.io/shadeed/pen/ExZEEjZ?editors=0100"><u>демо-версию</u></a> на CodePen.</p>
 <h3>Боковая и основная панель</h3>
 <p>*Сайдбар - боковая панель</p>
 <p>Зачастую нам нужно настроить компонент так, чтобы он работал в контейнерах небольшой ширины, например как &lt;aside&gt;.</p>
 <p>Идеальным вариантом для этого является раздел новостей. При небольшой ширине нам нужно, чтобы его элементы располагались стопкой, а когда места достаточно, нужно, чтобы они располагались горизонтально.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/a62/4dd/acb/a624ddacbc5d3cd48dacfaede0d1d025.png" width="742" height="404">
  <figcaption></figcaption>
 </figure>
 <p>Как вы видите на рисунке, у нас есть новостная лента, которая находится в двух разных контекстах:</p>
 <ul>
  <li><p>Боковой панели</p></li>
  <li><p>Основной панели</p></li>
 </ul>
 <p>Без container queries невозможно ничего сделать, пока у нас не появится класс вариаций в CSS, например, .newsletter--stacked или что-то подобное.</p>
 <p>Я знаю, что мы можем <a href="https://css-tricks.com/useful-flexbox-technique-alignment-shifting-wrapping/"><u>заставить элементы свернуться</u></a> в случае недостатка места с помощью flexbox, но этого недостаточно. Мне нужно гораздо больше контроля, чтобы:</p>
 <ul>
  <li><p>Скрыть определенные элементы</p></li>
  <li><p>Сделать кнопку во всю ширину</p></li>
 </ul>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/313/86b/dec/31386bdec19bd4fdff6c713f1f6a2d48.png" width="732" height="822">
  <figcaption></figcaption>
 </figure>
 <p>Вот видео с результатом.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/e45/bdd/92a/e45bdd92a14549af31d7080422969bed.png" width="728" height="301">
  <figcaption></figcaption>
 </figure>
 <p>Ссылка на видео: <a href="https://ishadeed.com/assets/cq/use-case-newsletter.mp4"><u>https://ishadeed.com/assets/cq/use-case-newsletter.mp4</u></a></p>
 <p>Посмотрите <a href="https://codepen.io/shadeed/pen/poRLxvO?editors=0100"><u>демо-версию</u></a> на CodePen.</p>
 <h3>Пагинация</h3>
 <p>Я обнаружил, что пагинация хорошо подходит для использования container queries. Изначально мы можем использовать кнопки "Предыдущий" и "Следующий", затем мы можем скрыть их и продемонстрировать полную пагинацию, если у нас достаточно места.</p>
 <p>Взгляните на следующий рисунок.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/3a9/062/390/3a9062390b1487779ab5ebe5f1560443.png" width="751" height="413">
  <figcaption></figcaption>
 </figure>
 <p>Чтобы управлять вышеуказанными состояниями, нам нужно сначала поработать над стилем по умолчанию (сложенные кнопки), а затем поработать над двумя другими состояниями.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/cf9/d64/bcb/cf9d64bcbba53acec27b1a20516881b1.png" width="731" height="732">
  <figcaption></figcaption>
 </figure>
 <p>Посмотрите <a href="https://codepen.io/shadeed/pen/VwPQORy?editors=0100"><u>демо-версию</u></a> на CodePen.</p>
 <p><br></p>
 <h3>Карточка профиля</h3>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/84d/3e1/a5b/84d3e1a5b054ac0e88c8545505762250.png" width="737" height="280">
  <figcaption></figcaption>
 </figure>
 <p>Вот еще один пример, который идеально подходит для использования в нескольких контекстах. В зависимости от состояния, оно может подходить для небольшой области просмотра и таких контекстов, как боковая панель или для более крупных контекстов, например, для размещения в 2-col сетке.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/818/6f6/983/8186f6983c350930172e817cd11402d9.png" width="742" height="548">
  <figcaption></figcaption>
 </figure>
 <p>Благодаря этому мы можем увидеть, как компонентные слова используются в различных контекстах без использования единого медиа запроса.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/72c/b59/37b/72cb5937b249c51bc3960bb8ceb56f5c.png" width="738" height="446">
  <figcaption></figcaption>
 </figure>
 <p>Посмотрите <a href="https://codepen.io/shadeed/pen/NWdYaGY?editors=0100"><u>демо-версию</u></a> на CodePen.</p>
 <h3>Формирование элементов</h3>
 <p>Я пока не углублялся в использование форм, но один из вариантов, который у меня на уме, - это переход от горизонтального расположения меток к сложенному.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/00e/137/820/00e1378209a162c5d90888e6959caa72.png" width="751" height="722">
  <figcaption></figcaption>
 </figure>
 <p>Попробуйте сами в демо-версии ниже. Просмотрите <a href="https://codepen.io/shadeed/pen/XWpEEzR?editors=0100"><u>демо-версию</u></a> на CodePen.</p>
 <h3>Тестирование компонентов</h3>
 <p>Теперь, когда мы рассмотрели несколько случаев использования CSS container queries, как мы можем протестировать компонент? К счастью, мы можем сделать это с помощью свойства CSS resize родительского компонента.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/d32/54d/363/d3254d363d8aa701de6e03b928da1c09.png" width="752" height="512">
  <figcaption></figcaption>
 </figure>
 <p>Я узнал об этой технике, прочитав эту замечательную <a href="https://www.bram.us/2020/05/15/css-only-resizable-elements/"><u>статью </u></a>Bramus Van Damme.</p>
 <h3>Легко ли дебаггить сontainer queries в DevTools?</h3>
 <p>Короткий ответ - нет. Вы не можете увидеть что-то вроде @container (min-width: value). Я думаю, что это вопрос времени, и это будет поддерживаться.</p>
 <h3>Можно ли предусмотреть запасной вариант?</h3>
 <p>Да! Конечно. Определенными способами можно обеспечить возврат. Вот две замечательные статьи, которые объясняют, как это сделать:</p>
 <ul>
  <li><p>Решения Container Query с помощью CSS Grid и Flexbox (<a href="https://moderncss.dev/container-query-solutions-with-css-grid-and-flexbox/"><u>Container Query Solutions with CSS Grid and Flexbox </u></a>) от Stephanie Eckles</p></li>
 </ul>
 <ul>
  <li><p>Container Queries уже на подходе (<a href="https://piccalil.li/blog/container-queries-are-actually-coming">Container Queries are actually coming</a>) от Andy Bell</p></li>
 </ul>
 <h3>Заключение</h3>
 <p>Мне понравилось узнавать о CSS container queries и экспериментировать с ними в браузере. Я знаю, что они еще официально не поддерживаются, но сейчас самое время поработать с ними в браузере.</p>
 <p>Так как мы front-end разработчики, часть нашей работы заключается в тестировании и помощи тем, кто работает над внедрением таких функций. Чем больше мы тестируем, тем меньше проблем мы увидим, когда это будет поддерживаться во всех основных браузерах.</p>
 <p>Спасибо, что прочитали.</p>
 <h3>Я написал электронную книгу</h3>
 <p>Я рад сообщить вам, что написал электронную книгу о дебаггинге CSS.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/f2b/b12/9ae/f2bb129ae23cf837319bf647b7e398f9.png" width="734" height="325">
  <figcaption></figcaption>
 </figure>
 <p>Если вам интересно, зайдите на сайт <a href="https://debuggingcss.com/"><u>debuggingcss.com</u></a> для бесплатного предварительного просмотра...</p>
 <hr>
 <blockquote>
  <p>В преддверии старта курса<a href="https://otus.pw/eOcR/"> <strong>"HTML/CSS"</strong></a><strong> </strong>приглашаем всех желающих на бесплатный демо-урок <a href="https://otus.pw/kQho/"><strong>«CSS Reset — ненужный артефакт или спасательный круг».</strong></a><strong> </strong>На этом вебинаре рассмотрим, зачем нам CSS Reset, что такое рендеринг и как браузер рендерит страницу. </p>
 </blockquote>
</div>', '2021-05-13 16:57:00', 'Приветствуем CSS Container Queries', 78, null, 3),
        (98, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/qx/ue/au/qxueauwdts7qot_6fxrnr-fbt2e.png">
 </div><i>Система антиспама в Selectel до самописного решения</i>
 <br> 
 <br> Привет, Хабр! Я Саша Федосеев, младший разработчик Python в Selectel. Несколько лет назад, когда наша компания начала особенно быстро расти, мы столкнулись с проблемой. Нашими ресурсами начали интересоваться всякие недобросовестные спамеры <s>из жарких стран</s>. У нас есть довольно бюджетные конфигурации виртуалок, а что им еще для счастья надо. 
 <br> 
 <br> Почему мы решили с ними бороться? Ну, рассылается почта с аккаунтов, что тут такого… Однако с точки зрения облачного провайдера есть причины, почему все-таки стоит пресекать «размножение» спамеров. 
 <br> <a name="habracut"></a>
 <br> <font color="#EB4247"><h2>Зачем бороться со спамерами</h2></font>
 <br> 
 <h3>Они портят белые IP-адреса</h3>
 <br> Чтобы рассылать какую-то почту вовне, необходимо, чтобы виртуалка имела IP-адрес. Белые «айпишники» — достаточно ограниченный ресурс, поэтому нам важно понимать, что их занимают порядочные пользователи, а не спамеры. Последние провоцируют бан IP со стороны крупных email-сервисов: «айпишник» попадает в черный список, и мы даже не всегда можем это понять. Только тогда, когда передаем такой IP другому клиенту, которому нужно рассылать почту, а он в итоге не может этого делать. Выводить IP из бана — достаточно непростой процесс, поэтому лучше просто туда не попадать.
 <br> 
 <br> 
 <h3>Эффект шумного соседа</h3>
 <br> Спамеры нередко разворачивают много спам-машин. И пользователи, которым не повезло находиться на том же хосте виртуализации, могут пострадать. Это неприятно. 
 <br> 
 <br> 
 <h3>Занимают IP-адрес и процессорное время</h3>
 <br> Зачем Selectel такие клиенты, если на их месте могут быть хорошие пользователи, которые заинтересованы в качестве наших услуг и тратят мощности на развитие своего бизнеса?
 <br> 
 <br> 
 <h3>Репутационные проблемы</h3>
 <br> Ни одному провайдеру не понравится, если про него будут говорить, что у него развелись спамеры и он этим промышляет.
 <br> 
 <br> <font color="#EB4247"><h2>Как было раньше</h2></font>
 <br> С самого начала антиспам был ручной: проблемой занимались сотрудники технической поддержки, которые разбирали каждый инцидент. Техническая поддержка тащила на себе весь этот груз. Кроме того, администраторы периодически просматривали регистрации, чтобы убедиться, что 10 аккаунтов зарегистрировал не спамер и это просто стечение обстоятельств: 10 разных пользователей зарегистрировались в одно время.
 <br> 
 <br> Понятно, что такая система довольно неэффективна. Во-первых, между определением спамера и его баном проходит непозволительно долгая задержка. Во-вторых, сотрудники техподдержки могут тратить свое рабочее время более рационально. Поэтому мы начали искать другие варианты.
 <br> 
 <br> <font color="#EB4247"><h2>Возможные пути решения проблемы</h2></font>
 <br> 
 <h3>Регистрация по документам</h3>
 <br> Так мы бы отпугнули спамеров, но существенно осложнили бы онбординг для добропорядочных клиентов. Кроме того, сотрудникам техподдержки пришлось бы просматривать каждую регистрацию. Кажется, не самая приятная работа. Да и наличие некоего jpg-файла не является гарантией существования реального документа.
 <br> 
 <br> <b>Итог:</b> решили не устраивать «paper, please» и отказались от этого варианта.
 <br> 
 <br> 
 <h3>Закрыть возможность отправки почты для клиентов</h3>
 <br> Можно было предупреждать всех клиентов, что мы не поддерживаем отправку почты от слова совсем. Но, пожалуй, это было бы странно. Пользователи, которые не рассылают спам, лишились бы стандартных и привычных функций. Не смогли бы даже рабочую почтовую переписку вести и точно грустили бы из-за этого. 
 <br> 
 <br> <b>Итог:</b> мы не хотели лишать клиентов каких-то очевидно необходимых возможностей и заставлять их искать решения «на стороне».
 <br> 
 <br> 
 <h3>Создать Gateway для отправки почты </h3>
 <br> В целом, Gateway для почты — это сервер, через который проходят все письма. Он способен анализировать почту и выносить решение, является ли то или иное письмо спамом. В случае провайдера инфраструктуры, такого как Selectel, было бы правильным оформить это как сервис. Но такое решение требует отдельной команды разработчиков, постоянной поддержки и развития.
 <br> 
 <br> <b>Итог:</b> создание такой услуги не было в планах компании на момент решения.
 <br> 
 <br> 
 <h3>Воспользоваться сторонним сервисом </h3>
 <br> Такой вариант мы тоже рассматривали, но нашли не один аргумент против. Во-первых, интеграция со сторонним сервисом — нетривиальная техническая задача. Во-вторых, мы бы поставили себя в ситуацию, когда мы зависим от какого-то внешнего сервиса. Наконец, это бы повысило ценник на наши услуги, ведь нам бы пришлось учитывать стоимость внешнего сервиса. А делать это не хотелось бы, конечно.
 <br> 
 <br> <b>Итог:</b> использование внешнего сервиса могло повлиять на стоимость наших услуг, мы же не могли на это пойти.
 <br> 
 <br> В общем, все перечисленные варианты мы отмели, поэтому решили делать собственную систему антиспама.
 <br> 
 <br> <font color="#EB4247"><h2>50 оттенков спамера</h2></font>
 <br> Если мы хотим самостоятельно выявлять спамеров среди пользователей, нам нужно определить, по каким критериям это делать. 
 <br> 
 <br> Стоит обратить внимание на поведенческие особенности пользователя и проанализировать трафик:
 <br> 
 <br> → <b>дата регистрации аккаунта.</b> Если он зарегистрирован 5 минут назад, а уже попал в поле зрения антиспама, велика вероятность, что акк создан исключительно для спам-целей. 
 <br> 
 <br> → <b>название почты.</b> Все мы называем почтовые адреса так, чтобы в названии был какой-то смысл (название компании или фамилия отправителя). Если название невнятное и выглядит подозрительно, это вполне весомый довод в пользу бана. 
 <br> 
 <br> → <b>платежное средство.</b> Если это одноразовая карта или PayPal, то такой аккаунт тоже подозрителен. 
 <br> 
 <br> → <b>геолокация IP-адреса при регистрации.</b> Подавляющее количество клиентов Selectel – из России и стран СНГ. Если очередной пользователь зарегистрировался в солнечной Бразилии или Марокко (из этих стран традиционно больше всего спамеров), это повод для беспокойства. Можно также сверить код страны и номер телефона с информацией, полученной от геолокации IP-адреса. 
 <br> 
 <br> → <b>имя пользователя.</b> Если имя пользователя выглядит так, как будто он рандомно прошелся пальцами по клавиатуре, это подозрительно, согласитесь. 
 <br> 
 <br> Добавлю, что анализ трафика на уровне L7 мы сразу отмели. Ведь это бы означало, что нам надо открывать каждый email и «читать», что в нем. Такой подход, возможно, могла себе позволить крупная и влиятельная компания типа Google, настроив семантических анализ содержимого почты и обложившись NDA и юристами. Но нам такой вариант не подходит.
 <br> 
 <br> А вот с информацией на уровне L4 уже можно работать: она обезличенная и выражается в нескольких метриках. Здесь мы можем посмотреть на <b>количество адресов</b>, на которое рассылается почта с наших IP-адресов, и на <b>размер переданной информации</b>. Логично, что у спамеров обычно очень большая база адресов, на которые они отправляют письма. 
 <br> 
 <br> В итоге мы решили, что комплекса всех этих критериев достаточно, чтобы делать достаточно аргументированное решение, спамер перед нами или нет.
 <br> 
 <br> <font color="#EB4247"><h2>Концепция решения</h2></font>
 <br> 
 <h3>Рейтинг аккаунтов</h3>
 <br> Мы решили автоматизировать процесс оценки пользователей на основе перечисленных критериев — по модели рейтинга, своеобразного «индекса доверия». Мы не читаем почту, но взвешиваем конверты и анализируем метрики публичного трафика, который выходит из облака.
 <br> 
 <br> Как это работает. С самого начала, когда пользователь регистрируется, ему присваивается максимально возможный рейтинг, равный 100 баллам. Изначально мы всем доверяем и считаем, что все наши клиенты будут нормально работать, а не рассылать спам.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/lq/mc/-c/lqmc-csp_o0ti3oows68dyj_eyc.png">
 </div>
 <br> Дальше пользователь проходит цепочку проверок. Каждая проваленная проверка отразится на итоговом рейтинге пользователя в виде штрафов. Их размер мы установили исходя из опыта «общения» со спамерами.
 <br> 
 <br> В первую очередь мы обычно обращаем внимание на геолокацию IP-адреса: соответствует ли он стране, откуда приходит большинство спамеров. У нас есть список таких стран, который мы периодически пополняем. Затем «прогоняем» нового пользователя через остальные фильтры, о которых я упоминал выше. В итоге у нас есть финальная оценка аккаунта, который мы сохраняем для дальнейшего использования в сервисе антиспама.
 <br> 
 <br> 
 <h3>Взвешивание конвертов и просмотр IP-адресов</h3>
 <br> Наше сетевое оборудование умеет выдавать метрики публичного трафика по протоколу Netflow. Среди них — SMTP-пакеты, SMTP-байты, количество SMTP-потоков и количество IP-адресов для каждого адреса-источника. Все эти метрики мы соберем в Netflow Collector. Последний их немного отформатирует для более удобного использования, а дальше с помощью вспомогательных сервисов, которые называются NetClick fetchers, они попадут уже в Clickhouse для дальнейшего использования в антиспаме.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/tw/f1/td/twf1tdx-qjqqav8arell5nuedoy.png">
 </div>
 <br> <font color="#EB4247"><h2>Gotoh</h2></font>
 <br> У разработчиков Selectel есть небольшая традиция: самописные сервисы мы называем именами персонажей из вселенной Hunter х Hunter. Отсюда такое название — в честь героя манги Гото. 
 <br> 
 <br> Антиспам состоит из двух частей и написан на Go. Первая часть сервиса называется Gotoh-fetcher. Он занимается тем, что забирает данные упомянутых метрик трафика, попадающих к нам по Netflow в несколько Clickhouse readers. Эти данные идут на обработку в ядро Gotoh-fetcher. Там они форматируются в более удобный формат и отправляются в Redis writer для дальнейшей записи. На этом работа Gotoh-fetcher заканчивается.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/kx/cv/pn/kxcvpnnlbraaooex_svdpnq2668.png">
 </div><i>Взвешивание конвертов и просмотр адресов</i>
 <br> 
 <br> Дальше к работе приступает Gotoh-inspector, который соответствует своему названию. Он выполняет роль принимателя решений, судьи. Куда обращается Gotoh-inspector? Он обращается к Redis за данными, которые были получены от Gotoh-fetcher.
 <br> 
 <br> После получения данных наш «инспектор» начинает хождение по проверкам. Во-первых, он посмотрит, превышен ли лимит по какой-либо метрике. Если нет, то дальнейшая проверка не имеет смысла — Gotoh-inspector исключает эту часть данных из рассмотрения.
 <br> 
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/bc/mk/wj/bcmkwjsxvuriw426jsafb_vxd4q.png">
 </div><i>Как работает Gotoh-inspector</i>
 <br> 
 <br> Если превышение лимитов есть хотя бы по одной метрике, то мы сначала посмотрим, есть ли у клиента тег доверенного. Он был специально введен для того, чтобы разделить спамеров и пользователей, которые рассылают нормальную почту, просто в больших количествах. Тег доверенного у пользователя может появиться только после разговора со специалистами Selectel. 
 <br> 
 <br> Мы должны убедиться, что мы имеем дело с человеком из реальной компании, который просто рассылает нормальную деловую почту, просто ее много. Если тег доверенного есть, мы формируем инцидент в Clickhouse и больше не рассматриваем эту часть данных. Но, если у клиента нет тега, мы продолжаем «следствие». 
 <br> 
 <br> Смотрим на рейтинг, и здесь начинается самое интересное. У скоринга есть две границы. Первая из них – доверительная граница. Если по результатам проверки аккаунту был присвоен хороший рейтинг, то мы просто отправим инцидент в Clickhouse и забудем про него. В целом, с пользователем с хорошим скорингом больше делать нечего.
 <br> 
 <br> Если скоринг меньше доверительной границы, дальше мы смотрим, далеко ли до границы бана. Две границы нужны для более справедливой оценки. Если скоринг хороший, тогда мы не будем банить пользователя, если же рейтинг вызывает вопросы, мы посмотрим на количество инцидентов, связанных с данным аккаунтом.
 <br> 
 <br> Если аккаунт попадает в промежуточную зону, когда его рейтинг меньше доверительной границы, но больше границы бана, система отправит алерт в чат дежурным. Они, в свою очередь, в ручном режиме посмотрят, рассылается ли с аккаунта или виртуалки спам.
 <br> 
 <br> Если же рейтинг не дотягивает даже границы бана, то тут совсем все просто: аккаунт попадает в бан, потому что у нас есть достаточно оснований полагать, что перед нами нарушитель. 
 <br> 
 <br> <font color="#EB4247"><h2>Результат</h2></font>
 <br> Так мы создали нашу нехитрую систему антиспама. Возникает вопрос: стало ли лучше?
 <br> 
 <br> На картинке выше – количество алертов с момента начала запуска этого сервиса в начале 2020 года. Количество алертов в пике составляло больше 60 000. 
 <br> 
 <br> При ручном антиспаме мы просто не могли обрабатывать такое количество информации — большое количество данных проходило мимо нас. А теперь мы уже можем как-то работать с этими данными, анализировать их.
 <br> 
 <br> Мы посмотрели общее количество алертов, прилетающих по всем четырем метрикам трафика, которые мы анализировали. Давайте посмотрим на график по каждой метрике.
 <br> 
 <br> 
 <h3>Количество пересылаемых байт</h3>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/6j/ev/rn/6jevrnnumejabjrefnpktyauc_0.png">
 </div>
 <br> Это самая многочисленная по количеству алертов метрика. И вообще, этот график довольно схож с предыдущим, потому что эти алерты практически полностью формируют картину спам-алертов. Тут логика простая: чем больше почты рассылается с аккаунта, тем быстрее он попадает в поле зрения антиспама и тем больше по нему будет сформировано алертов.
 <br> 
 <br> 
 <h3>Количество SMTP-пакетов</h3>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/70/_x/av/70_xavntnlwos5n2bwjepvi4gwg.png">
 </div>
 <br> Между этой метрикой и предыдущей есть связь. Но почему мы анализируем количество байт и пакетов по отдельности? Потому что были случаи, когда по аккаунту формировался алерт по количеству пакетов, но не по количеству байт. Например, спам-аккаунт рассылает много мелких писем, каждое из которых улетает в отдельном пакете, — в таком случае формируется алерт именно по количеству пакетов.
 <br> 
 <br> 
 <h3>Количество IP-адресов назначения</h3>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/lf/ug/ic/lfugicfn7fwmmmogafnueqsueoq.png">
 </div>
 <br> Этот график непросто анализировать, но он может стать дополнительным источником информации. На каждом аккаунт рассылка спама организована по-разному: кто-то отправляет IP на 10 или 100 разных адресов, а кто-то отправляет на 10 фиксированных и не попадает в поле зрения антиспама по этой метрике.
 <br> 
 <br> 
 <h3>Количество SMTP-потоков, открытых одновременно </h3>
 <br> 
 <div style="text-align:center;">
  <img src="https://habrastorage.org/webt/ne/5o/9q/ne5o9qq_sk6rs7fz5bwtdleoa3i.png">
 </div>
 <br> Самая «непопулярная» метрика — алерты по ней прилетают нечасто. Если на предыдущих иллюстрациях на шкале Y были тысячи, то здесь это сотни. Тут, видимо, спамеры все-таки перестраховываются и не рассылают почту с большого количества открытых соединений. Несмотря на то, что график не репрезентативен, на первый взгляд, на самом деле, он помогает лучше понять, как может быть организована отправка спама.
 <br> 
 <br> <font color="#EB4247"><h2>Заключение</h2></font>
 <br> Безусловно, эта система может быть более совершенной, и мы планируем улучшать ее в дальнейшем. Но сейчас он достаточно эффективно показывает себя в работе. 
 <br> 
 <br> Например, мы еще ни разу не забанили добропорядочного пользователя. А если такое все же произойдет (ну, вдруг у кого-то университетский проект связан с почтовыми рассылками), то все обратимо. Если вы видите, что ваш аккаунт в Selectel забанен (в личном кабинете будет указана причина блокировки), просто напишите в техподдержку. Мы посмотрим, что повлияло на снижение рейтинга и как вам избежать этого в дальнейшем. Это не пожизненный бан.
 <br> 
 <br> Про нашу антиспам-систему я также рассказал на Selectel DevTalks. Если хотите посмотреть доклад, вот <a href="https://youtu.be/yIkty7EaU6k?t=997">ссылка</a>.
 <br> 
 <br> <a href="https://slc.tl/xpwAY">
  <div style="text-align:center;">
   <img src="https://habrastorage.org/webt/ae/l_/dv/ael_dvuesjegt9kcwmvihyl8zfq.png">
  </div></a>
</div>', '2021-05-14 16:48:00', 'Самописный антиспам-сервис Gotoh, или как мы боролись за «белизну» IP-адресов', 92, null, 3),
        (99, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/d9/m_/tw/d9m_twhhes_ulhrvo22dgqlyeg0.jpeg">
 <br> 
 <br> Есть понимание, что видеокамера, доступная по цене и функционально несложная поможет решить некоторые вопросы как автолюбителей, так и дачников. 
 <br> 
 <br> В статье не будет затрагиваться этическая сторона вопроса продукта формата DIY (сделай сам) и кому он больше пригодится — нарушителям или законопослушным гражданам. Вместо этого, предлагается сконцентрироваться на технической стороне решения, которое наверняка будет интересно в ситуациях, вынесенных в заголовок статьи.
 <br> 
 <br> Итак, что будет делать камера, которую предлагается собрать бюджетно и не сильно погружаясь в технические аспекты вопроса.
 <br> 
 <br> Алгоритм работы следующий. Камера после включения «поднимает соединение» через usb 3G модем, соединяется с VPN, мониторит картинку и, при появлении движения на ней, делает фото и, заодно, отправляет фото в телеграм-канал владельца. Из опций — возможность записывать timelapse, видео и… возможность «покрутить головой» удаленно, то есть поуправлять камерой и посмотреть «что к чему». Нейросетей здесь нет, все достаточно просто.
 <br> <a name="habracut"></a>
 <br> 
 <h3>Будет ли это работать?</h3>
 <br> Пожалуй будет, так как 1-3 минуты должно хватить, чтобы добежать до авто и с удовлетворением заплатить только штраф; посмотреть, кто же ворует клубнику с грядки и даже повернуть удаленно камеру в его сторону. Даже, если неизвестные снесут камеру или замажут ее, в телеграмме останется фото на память.
 <br> 
 <br> Для взыскательных ценителей всего движущегося motion detection можно «загрубить», чтобы не фиксировались вздохи деревьев и полет мотылька.
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/hb/ir/3k/hbir3kwow72y3imd1j3l5lbe2c8.jpeg">
 <br> <a href="https://avatars.mds.yandex.net/get-altay/2816622/2a00000172fb5329f7fbd51db895a9c87157/XXXL" rel="nofollow noopener noreferrer"><i>оригинальная ссылка изображения</i></a>
 <br> 
 <br> В качестве софта используется RPi-web-interface.
 <br> 
 <br> В общем и целом, проект частично повторят мой схожий проект, ранее описанный в посте <a href="https://habr.com/ru/post/523712/">здесь</a>.
 <br> 
 <br> Отличия, дополнения следующие:
 <br> 
 <br> 
 <ul> 
  <li>связь с telegram-каналом (отправка фото на канал),</li> 
  <li>3g связь одновременно с наличием wi-fi,</li> 
  <li>обратная связь с камерой через vpn,</li> 
  <li>иные изменения в настройках. </li> 
 </ul>
 <br> 
 <h3>Немного скучной предыстории</h3>
 <br> При разработке прототипа остро встали несколько вопросов: 
 <br> 
 <br> 
 <ul> 
  <li>как создавать обратную связь с камерой, которая имеет «серый» динамический ip-адрес,</li> 
  <li>как питать, какие нужны батареи, чтобы хватало хотя бы на несколько часов,</li> 
  <li>как управлять камерой, так как постоянно подбирать ракурс установки без возможности его поправить в дальнейшем, занятие не слишком интересное.</li> 
 </ul>
 <br> Первая реализация камеры в части софта имела изобилие «костылей».
 <br> 
 <br> Изначально все было собрано на raspberry pi 3b с «неродной» камерой (usb, не csi). В качестве «обратной связи» использовался skype. Для связи с камерой на нее надо было… позвонить. 
 <br> Через skype. В skype была функция автоответа, «после снятия трубки» устанавливался канал видеосвязи и можно было посмотреть то, что видела камера. Все просто. 
 <br> 
 <br> И все просто жутко работало в плане скорости, звук был отвратительным и так далее. Потом skype перестала обновлять пакеты под raspberry. Была попытка продлить жизнь данного изделия с помощью exagear desktop, который эмулировал win и позволял установить такие приложения как icq, viber, teamspeak. Но все это работало крайне медленно и неэффективно. Потом exagear desktop, который был к тому же с платной лицензией (слава богу, единоразовый платеж) свернули и поддержку прекратили. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/hp/lt/w6/hpltw67agdsrhimf4ju2fj9efvg.jpeg">
 <br> 
 <br> В плане питания все тоже было не совсем просто. Raspberry pi 3b любила и любит покушать, и powerbankи нужны были с достатком. Были попытки запитать от солнечный панелей, но сразу стало понятно, что этот вариант не подойдет. 
 <br> 
 <br> Перейдем к текущей реализации, которая также не без греха, но вполне сносно выполняет свои функции.
 <br> 
 <br> 
 <h3>Основа видеокамеры</h3>
 <br> 
 <img src="https://habrastorage.org/webt/tr/l3/cd/trl3cdw_2kgus3cacpum9ktd_kc.jpeg">
 <br> 
 <br> В качестве базы, от который оттолкнемся при создании камеры будет та же raspberry pi, только модель zero w (c поддержкой wifi). 
 <br> 
 <br> Наши комплектующие следующие:
 <br> 
 <br> 
 <ul> 
  <li>raspberry pi zero w — 1,8 к руб.;</li> 
  <li><a href="https://aliexpress.ru/item/1005001418642175.html" rel="nofollow noopener noreferrer">камера со шлейфом</a> — 500 руб.</li> 
  <li>сервоприводы sg-90 — 2шт. — 200 руб.</li> 
  <li>пластиковый <a href="https://aliexpress.ru/item/32750857279.html" rel="nofollow noopener noreferrer">подвес</a> — 100 руб.</li> 
  <li>блок питания — 1000 руб.;</li> 
  <li>sd карта на 8, а лучше на 16Гб — 1000 руб.;</li> 
  <li>3g modem Huawei E171 — 2k руб.</li> 
  <li>sim карта с пакетом услуг интернет, например от мтс — 500 руб. </li> 
  <li>переходник с mini-usb на usb для подключения usb 3g модема — 200 руб.</li> 
  <li>коробка, в которой прислали raspberry pi-бесплатно.</li> 
 </ul>
 <br> Итого: 7300 руб.
 <br> Cхема соединения с сервами подвеса камеры та же, что использовалась <a href="https://habrastorage.org/webt/lz/bf/ht/lzbfhts6jm9chdlt625x_kqqkhy.jpeg" rel="nofollow noopener noreferrer">ранее</a> 
 <br> 
 <br> 
 <h3>Переходим к настройкам</h3>
 <br> Не будем далеко отходить от образа (image) с предустановленным Rpi-web-interface, servoblaster, приведенном в ранее опубликованной статье — <a href="https://yadi.sk/d/j-8TN0oYW2G-mw" rel="nofollow noopener noreferrer">ссылка на образ</a>. Его необходимо будет немного дополнить. 
 <br> 
 <br> <b>Первое, что настроим — это 3g модем</b>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ca/9c/d4/ca9cd4fdjs_lygjdkodo5kkrelu.jpeg">
 <br> 
 <br> Его настройка после подключения к raspberry во многом повторяет шаги из статьи, опубликованной <a href="http://robocraft.ru/blog/electronics/3131.html" rel="nofollow noopener noreferrer">здесь</a>.
 <br> 
 <br> Но в статье много лишних этапов, чтобы, так сказать, прочувствовать модем. Поэтому можно смело начинать настраивать с шага «РЕКОННЕКТ ПРИ ДРОПЕ» и не выполнять все предыдущие:
 <br> 
 <br> 
 <pre><code class="bash">$ mkdir ~/3g
$ cd ~/3g
$ wget http://zool33.uni-graz.at/petz/umtskeeper/src/umtskeeper.tar.gz
$ tar -xzvf umtskeeper.tar.gz
$ chmod +x umtskeeper
$ ./umtskeeper --sakisoperators "USBINTERFACE=''0'' OTHER=''USBMODEM'' USBMODEM=''12d1:1506'' APN=''CUSTOM_APN'' CUSTOM_APN=''internet.mts.ru'' APN_USER=''mts'' APN_PASS=''mts''" --sakisswitches "--sudo --console" --devicename ''Huawei'' --log --nat ''no''
$ sudo nano /etc/rc.local
/home/pi/3g/umtskeeper --sakisoperators "USBINTERFACE=''0'' OTHER=''USBMODEM'' USBMODEM=''12d1:1506'' APN=''CUSTOM_APN'' CUSTOM_APN=''internet.mts.ru'' APN_USER=''mts'' APN_PASS=''mts''" --sakisswitches "--sudo --console" --devicename ''Huawei'' --log --silent --nat ''no'' &amp;
</code></pre>
 <br> *12d1:1506 — изменить на свой, который можно узнать через lsusb.
 <br> **если модем не стартует, добавить sudo в начале команды.
 <br> 
 <br> После настройки модема и редактирования /etc/rc.local будет небольшой баг, так сказать. Несмотря на то, что rc.local запускает при загрузке все указанные в нем скрипты, umtskeeper запускается весьма неспешно. И на старт модема может уйти от 1 минуты до 3. Это может быть критично в некоторых ситуациях. Как с этим бороться, пока не ясно.
 <br> 
 <br> <b>Теперь настроим отправку сообщений в telegram канал c raspberry pi</b>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/vn/ef/mg/vnefmgefklf3a7icd2t_vjy6cxg.jpeg">
 <br> 
 <br> Нам понадобится следующая <a href="https://quavoce.wordpress.com/2017/09/29/telegram-send-messages-photos-animated-gifs-from-your-raspberry-pi-and-rpi-web-cam/" rel="nofollow noopener noreferrer">статья</a>. 
 <br> 
 <br> Здесь могут возникнуть сложности с настройкой botа в telegram, если нет опыта его создания через Godfather, а также получения токена и API, которые надо отразить в скрипте:
 <br> 
 <br> 
 <pre><code class="python">#Telegram details
tokenurl="https://api.telegram.org/bot&lt;your API key&gt;"
chatid="&lt;your chat id&gt;"
</code></pre>
 <br> Однако, после настройки, функционал будет работать как часы:
 <br> 
 <br> 
 <div class="spoiler" role="button" tabindex="0"> <b class="spoiler_title">картинка</b> 
  <div class="spoiler_text">
   <img src="https://habrastorage.org/webt/on/h4/6j/onh46j53upol9mklx5xm0a3kjpm.jpeg">
   <br> 
  </div> 
 </div>
 <br> <b>Настройка параметров камеры</b>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/vm/qi/1o/vmqi1o1uhhddmxn4rty53vkfj4m.jpeg">
 <br> 
 <br> По умолчанию в Rpi-web-interface камера при включении мониторинга движения сначала делает снимок, а потом начинает писать потоковое видео. Об этом написано <a href="https://elinux.org/RPi-Cam-Web-Interface#Telegram_Alerts_with_Motion_Detection_sending_pictures_to_your_phone_with_RPi_Web_Cam_Interface" rel="nofollow noopener noreferrer">здесь</a>. Вопрос — Is it possible to record still images using the RPi Cam Web interface on motion detect?
 <br> 
 <br> С одной стороны это удобно, сделала пару фото, оправила в telegram и дальше пишет видео. Но на практике это приводит к подвисанию, так как запись идет пока есть движение в кадре, а в телеграм попадают только первые пару снимков.
 <br> 
 <br> Поэтому настройки камеры надо поменять следующим образом:
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/of/nb/i3/ofnbi3qvlhchrzvaecdwahraify.jpeg">
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/wj/z8/gx/wjz8gxalnyjbozgbmlikr4_mxd0.jpeg">
 <br> 
 <br> То вместо ca 1 и ca 0 написать только im in. 
 <br> Теперь в telegram будут прилетать практически все фото.
 <br> 
 <br> <b>Настройка VPN</b>
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/su/o7/9m/suo79mhw8zznpih_jfxv19ydu7o.jpeg">
 <br> <a href="https://img.anews.com/media/posts/images/20180607/92134643.jpg" rel="nofollow noopener noreferrer"><i>ссылка на оригинал картинки</i></a>
 <br> 
 <br> Здесь были размышления по поводу нескольких вариантов.
 <br> 
 <br> <u>Первый</u> и самый простой — купить «белый» (статический) ip и выходить на камеру без лишних заморочек. Раньше это было возможно у некоторых операторов. Но теперь для мобильного интернета физическому лицу эта опция не доступна. Оформлять ИП или покупать фейковую компанию только ради этого, не выход. 
 <br> 
 <br> <u>Второй</u> вариант — обратный ssh-, vpn- туннель. То есть создается туннель с raspberry pi на существующий собственный vpn сервер. При этом vpn сервер должен иметь белый ip, чтобы raspberry pi до него дотянулась. Неплохой вариант, но тут надо приобретать этот белый ip, пробрасывать порт на роутере, за которым сидит сервер, решать вопрос с падением vpn. Несложно, но хлопотно.
 <br> 
 <br> <u>Третий</u> (на нем было решено остановиться) — услуга vpn, в частности <a href="https://vpnki.ru/" rel="nofollow noopener noreferrer">vpnki</a>.
 <br> 
 <br> На сайте предлагается бесплатный 14-дневный период, далее vpn-туннели блокируются, если не приобрести платный пакет услуг:
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ta/oy/uk/taoyukuvwozqtml--csxgu_-8nc.jpeg">
 <br> 
 <br> Сами тарифы <a href="https://vpnki.ru/services/plan" rel="nofollow noopener noreferrer">не кусаются</a>, а подробные инструкции помогут пройти несложный путь настройки туннелей. Их понадобится минимум два — один для raspberry pi, второй для устройства, с которого будет доступ (допустим, телефон на android). В нашем случае для raspberry pi использовался этот <a href="https://vpnki.ru/settings/linux/settings-debian" rel="nofollow noopener noreferrer">вариант настройки</a>.
 <br> 
 <br> И вот тут ждет еще один неприятный подводный камень, связанный опять же с rc.local.
 <br> 
 <br> Если коротко — то модем и vpn конкурируют за соединение ppp0 и в итоге его занимает тот, кто быстрее запустится. Более подробно вопрос описан <a href="https://vpnki.ru/questions/support-forum/tuns-routing/786-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B0-%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-ppp-%D0%BF%D1%80%D0%B8-%D0%B0%D0%B2%D1%82%D0%BE%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B5-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-rc-local" rel="nofollow noopener noreferrer">здесь</a>.
 <br> 
 <br> Выход — не запускать vpn пока не запустится модем (не установит соединение ppp). Далее вручную поднять vpn через команду — 
 <br> 
 <br> 
 <pre><code class="bash">sudo pon vpnki updetach
</code></pre>
 <br> Опять же здесь не решатся вопрос с падением vpn. *Свое соединение модем (umtskeeper) при падении восстанавливает и сообщения в телеграм приходить будут в любом случае, а вот vpn не оживает. Так что опция «покрутить головой» может немного хромать при плохой связи со стороны raspberry pi.
 <br> 
 <br> На этом все. Есть еще мысли добавить на web-интерфейс сведения о балансе mts и vpn.
 <br> 
 <br> Вопросы и предложения приветствуются.
</div>', '2021-05-17 21:47:00', 'Камера против эвакуаторов, угонщиков, дачных «гостей»', 19, null, 5),
        (100, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/webt/qs/i0/lr/qsi0lrfda3vgab4u0lkqrv1wami.jpeg">
 <br> 
 <br> 
 <p>О выгорании уже трубят из каждого угла. Но проблема от этого не устраняется. Наоборот. Размеры этого снежного кома с каждым месяцем продолжают расти. По данным <a href="https://hr.personio.de/hubfs/EN_Downloads/202104_HRStudy_UKI.pdf">исследования</a> разработчика HR-софта Personio, больше половины молодых (18-34) специалистов в IT сейчас готовы уйти или сменить работу. И 38% сотрудников планируют попробовать себя в новой роли/компании уже в ближайшие 6-12 месяцев. Мы засиделись и устали. «Перемен — требуют наши сердца!»</p>
 <br> 
 <p>Ожидается, что дополнительная текучка кадров только в Великобритании и Ирландии в ближайшие 12 месяцев обойдется экономике в £16,96 млрд. Это эквивалентно 10 076 фунтам ($14 тыс.) на каждое предприятие, включая малый бизнес. Ну а крупнейшие компании готовятся потерять на этом сотни миллионов.</p>
 <br> 
 <img src="https://habrastorage.org/webt/3t/fg/dd/3tfgddrnzl2at12sd1pak6xgxl4.jpeg">
 <br> <i>Слайд из исследования Personio</i>
 <br> 
 <br> 
 <p>Не все готовы мириться с такими потерями.<a name="habracut"></a> Чтобы бороться с выгоранием среди своих работников, Linkedin недавно приняла довольно радикальное решение. Внепланово отправить всех в оплачиваемый недельный отпуск.</p>
 <br> 
 <p>Это решение затронуло 16 тысяч человек. Если учесть, что средняя годовая зарплата там <a href="https://www.indeed.com/cmp/Linkedin/salaries#:~:text=The%20average%20LinkedIn%20salary%20ranges,hour%20for%20Site%20Reliability%20Engineer.">составляет</a> $120 000 (на самом деле выше), этот шаг будет стоить компании $40 млн. Но она считает, что на самом деле это будет ей выгодно. Меньше увольнений, меньше сложностей с хантингом, выше продуктивность.</p>
 <br> 
 <p>Людей просят вообще не выходить на связь (!), спокойно сидеть дома и отдыхать. А несколько сотен сотрудников, которые остались работать, чтобы поддерживать сервисы, — получат отпуск на месяц позже.</p>
 <br> 
 <p>Теуила Хансон, директор по персоналу в LinkedIn, была главной движущей силой такого решения. Она сама присоединилась к компании в прошлом июне, и видела, как боевой дух команды с каждым месяцем падает. Поэтому, как она объясняет:</p>
 <br> 
 <blockquote>
  Мы хотели убедиться, что можем дать им что-то действительно ценное. И сейчас самым мы считаем свободное время, чтобы вместе разгрузиться.
  <br> 
 </blockquote>
 <br> 
 <p>Теуила считает, что ключевое здесь — дать такой отпуск <strong>для</strong> <strong>всей</strong> <strong>компании</strong>. Поскольку все отдыхают одновременно, по возвращении на работу сотрудники не будут завалены электронной почтой, заметками о встречах и запросами по проектам, которые накапливаются за время их отсутствия. Иначе весь смысл отдыха свелся бы на нет, и человек мог бы снова выгореть в первый же день. Плюс — во время отдыха никто не звонит им и ничего не спрашивает о проекте. Люди знают, что в течение этой недели их совершенно точно оставят в покое. Это само по себе действует расслабляюще.</p>
 <br> 
 <img src="https://habrastorage.org/webt/l3/x7/n5/l3x7n5qubpipdiv9plph6szhhkq.jpeg">
 <br> <i>Теуила Хансон</i>
 <br> 
 <br> 
 <p>LinkedIn перешла на удаленную работу чуть больше года назад, в начале весны 2020-го. С тех пор она регулярно проводила опросы среди своих сотрудников. И уже летом выяснила, что настроение и самочувствие её программистов меняется к худшему. Появились признаки выгорания и подступающих депрессий.</p>
 <br> 
 <p>Поэтому компания инвестировала в создание инициативы LiftUp!.. В нее вошли тренинги по эмоциональному выгоранию для руководителей, дни без совещаний и другие инвестиции в психическое здоровье работников.</p>
 <br> 
 <p><strong>В свой стандартный опросник компания добавила один простой вопрос: «Как у вас дела?».</strong> Он специально был таким открытым, без конкретики. Чтобы каждый человек мог интерпретировать его в соответствии с тем, что его сейчас волнует. Теуила Хансон говорит, что так они и начали замечать появление тем, связанных с выгоранием, недостатком заботы о себе, проблемами с семьей. Многих беспокоило растущее чувство одиночества. Руководители могли прочитать анонимные, но реальные комментарии, и точнее понять, что происходит. Как чувствуют себя люди, что они делают и чего им не хватает.</p>
 <br> 
 <p>Например, некоторые рассказывали о том, что они скучают о своих ежедневных поездках на работу — для них это было время разгрузки. Они могли настроиться на рабочий день, послушать подкаст, просмотреть новости. А в конце дня, наоборот, замедлить темп, постепенно выйти из офисного режима, и с радостью чувствовать, что дом все ближе.</p>
 <br> 
 <p>&nbsp;По данным LinkedIn, <strong>настроение работников начало меняться в июле-августе</strong> — когда люди поняли, что локдауны и пандемии не пройдут за пару месяцев, а могут остаться с нами надолго. Тогда HR-департамент задумался: какой сделать сюрприз, чем порадовать своих сотрудников?</p>
 <br> 
 <p>Они запустили серию семинаров, предложили каждому бесплатные занятия с психологом, ввели несколько курсов для менеджеров (в основном о спокойствии и важности сострадания). И еще один курс для обычных разработчиков — о практической расстановке приоритетов.</p>
 <br> 
 <p>Заметили, что особой популярностью всё-таки пользуются дни без собраний. Люди в опросниках стабильно давали им высшую оценку. То есть, идея, требующая минимум трат, ещё и оказалась самой востребованной. Люди думали: «Ух ты, а правда можно целый день заниматься своими делами, а не бегать от собрания в Zoom к собранию в Zoom?».</p>
 <br> 
 <p>Ну а после этого — логичным показался следующий этап.</p>
 <br> 
 <p>Теуила Хансон рассказывает:</p>
 <br> 
 <blockquote>
  Мы сделали выходные для сотрудников в декабре. И после этого увидели, что люди полны энергии. Им снова кажется, что они могут погулять, что у них есть время читать книги, смотреть вебинары и фильмы. Продуктивность заметно возросла. И мы подумали, может, есть смысл дать ещё одну оплачиваемую неделю в году? Не только для решения проблемы эмоционального выгорания, но и для выражения нашей благодарности нашим сотрудникам.
  <br> 
  <br> Подумали, как лучше это сделать, и поняли, что если уходить в отпуск — то только всей компанией. Чтобы можно было без чувства угнетения наслаждаться этими днями. Вот почему, на наш взгляд, декабрьский отдых пошел людям на пользу сильнее, чем индивидуальные отпуски.
  <br> 
 </blockquote>
 <br> 
 <p>Дни без совещаний, регулярные тренинги о проблемах выгорания и опросы мнения сотрудников — это, конечно, хорошо. Но LinkedIn даже всё это в сумме не спасло: по их словам, показатели падали. В такой ситуации, видимо, общий внеплановый отпуск — единственный гарантированный выход. Если сотрудники не работают — они точно не выгорают!</p>
 <br> 
 <p>Интересно, возьмут ли такой подход на вооружение в «Яндексе», Сбербанке, MRG и других российских IT-компаниях? Или проще надеяться на стальные нервы и крепкую закалку своих программистов?</p>
 <br> 
 <hr>
 <br> 
 <p><b>P. S.</b> Хотите найти достойную работу? Подключайте телеграм-бот g-mate. Задаете свои преференции, и на вас выходят топовые компании. Не нужно ни резюме, ни портфолио. Настройка занимает меньше 30 секунд.</p>
 <br> 
 <p>Когда появится интересная позиция, отправьте нам ссылку на свой LinkedIn (или простое резюме). Мы сами соберём ваш профиль в том формате, в котором его ждут в компании.</p>
 <br> <a href="https://t.me/g_jobbot?start=u_habr94"><img src="https://habrastorage.org/webt/gi/j7/va/gij7vafk4xfih6yyfx5jbvmr5q0.png"></a>
</div>', '2021-05-19 14:54:00', 'Выгорание продолжает косить наши ряды. LinkedIn нашла решение', 18, null, 8),
        (101, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>Небольшим компаниям для налаживания внутренних коммуникаций не нужны отдельные специалисты или инструменты — все ответы находятся, стоит лишь дёрнуть за рукав любого старожила. Метод работает на отлично до тех пор, пока команда не начинает расти.</p>
 <p>Чем больше сотрудников, тем больше проектов. Чем больше проектов, тем больше нюансов, которые нужно учитывать при запусках и о которых должна знать вся команда.</p>
 <p>В какой-то момент старожилы уже «не вывозят»‎ такого потока вопросов, а количество разбросанной по разным сервисам документации начинает пугать. Тогда в компании появляемся мы — специалисты внутрикома.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/476/28b/33d/47628b33d5973962e93d9b962c63c289.png" width="2377" height="1131">
  <figcaption></figcaption>
 </figure>
 <p>Наша цель практически как у Google — структурировать всю информацию компании и сделать так, чтобы у всех к ней был доступ. А для этого нужно организовать понятные каналы коммуникации и наладить обмен информацией в команде.&nbsp;</p>
 <p>Меня зовут Катя Лебедева, и сегодня я расскажу, как мы с командой внутрикома ВКонтакте подошли к этому вопросу.</p>
 <h3>Немного о специфике ВКонтакте</h3>
 <p>Сейчас у нас 1300+ распределённых сотрудников. Основная часть разработки ВКонтакте обитает в Питере, маркетинг и PR базируются в Москве, команды Поддержки и модерации всегда работали на удалёнке. Из-за такого разброса мы изначально «приземляли» все внутренние коммуникации в онлайн. Общаемся по большей части ВКонтакте: активно используем сообщества, мессенджер и звонки — грешно не пользоваться продуктом, который создаёшь сам.</p>
 <p>За 14 лет с создания ВКонтакте мы обросли легаси — накопились десятки внутренних сообществ, сотни чатов, тысячи отдельных документов. Когда количество сотрудников перевалило за 700, мы поняли, что внутренние коммуникации у нас есть, а системы нет. Какие-то каналы информации существовали просто потому, что так исторически сложилось. Каких-то не было вообще, все страдали и бродили с отдельными вопросами по личкам. Нужно было уменьшать эту энтропию.</p>
 <h3>Начни с инвентаризации</h3>
 <p>Мы начали просто описывать каналы информации, которые уже есть. Речь о десятках сообществ, чатов, каналов, мероприятий, а внутри них — самые разные форматы: регулярные и нерегулярные дайджесты, объявления всех мастей, заметки на полях. Чтобы хоть как-то ориентироваться в этом хаосе, сделали обычную таблицу и пошли её заполнять. Получилось что-то такое (оригинал в 100 раз длиннее):</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/1cf/cdd/fb2/1cfcddfb26d2f2127217f4d1b05de50b.png" width="750" height="537">
  <figcaption></figcaption>
 </figure>
 <p>Работа не шибко сложная, но требует внимательности. В итоге мы собрали всё, что есть, и добавили к форматам подробное описание. Это простое упражнение на удивление классно сработало: когда все каналы перед глазами, сразу видишь, что дублируется, а чего не хватает. Лишнее можно убрать, недостающее — создать. И уже становится чище.</p>
 <h3>Разбей по категориям</h3>
 <p>После инвентаризации мы «схлопнули» несколько лишних каналов и форматов, но система всё же оставалась слишком большой и нелогичной. Нужно было привнести в неё структуру.</p>
 <p>Список критериев, по которым можно структурировать информацию, довольно большой. У нас получились такие:</p>
 <ul>
  <li><p>тематика (продукт, технологии, HR, PR);</p></li>
  <li><p>ключевая аудитория (специалисты по продукту / маркетинг и PR);</p></li>
  <li><p>тип (входящая/исходящая);</p></li>
  <li><p>формат (статическая инфа — на века / динамическая — через неделю будет бесполезна);</p></li>
  <li><p>частота выпусков (регулярно/ситуативно);</p></li>
  <li><p>обязательность прочтения (must read / just for fun);</p></li>
  <li><p>канал коммуникации (чат, сообщество, встреча).</p></li>
 </ul>
 <p>Расскажу немного о каждом.</p>
 <p><strong>Тематика</strong></p>
 <p>Кажется, здесь всё понятно — нужно проанализировать посты и разметить их условными хештегами. У нас сразу же напрашивались:</p>
 <ul>
  <li><p>продукт,</p></li>
  <li><p>технологии,</p></li>
  <li><p>офисы,</p></li>
  <li><p>HR,</p></li>
  <li><p>PR,</p></li>
  <li><p>внутренний движ,</p></li>
  <li><p>техподдержка.</p></li>
 </ul>
 <p>Позже тематик стало больше, но добавление новой уже не создавало хаоса — система начала масштабироваться.</p>
 <p><strong>Ключевая аудитория</strong></p>
 <p>Мы выделили аудитории, разделив их:</p>
 <ul>
  <li><p>по профессиональным интересам (продукт, технологии, коммуникации, саппорт);</p></li>
  <li><p>по географии (Питер, Москва, удалёнка);</p></li>
  <li><p>по принадлежности к конкретному офису (Зингер, Красный Мост, Скайлайт, ИЦВА);</p></li>
  <li><p>по формату работы (офисный, удалённый).</p></li>
 </ul>
 <p>Аудитории часто пересекаются — например, маркетологи и поддержка глубоко интересуются продуктом, москвичи приезжают в гости в питерские офисы и так далее. Также у нас есть два сообщества на всех сотрудников — одно для работы, другое для разной внутрянки вроде тимбилдингов и корпоративов.</p>
 <p>С началом пандемии выделились и новые группы — например, офисные сотрудники разбились на тех, кто решил остаться дома, и тех, кому по долгу службы нужно быть на рабочем месте.</p>
 <p><strong>Входящая и исходящая коммуникация</strong></p>
 <p>Внутренние коммуникации не ограничиваются информацией, которая спускается от какого-либо спикера на всю команду — существует и обратная связь. Это важный момент, который легко упустить, и в нашей системе мы выделили ему отдельное место.</p>
 <p>Чтобы было проще, все потоки информации мы делим на <em>исходящую</em> (любые анонсы, новая аналитическая работа) и <em>входящую</em> (фидбэк от команд, вопросы конкретных сотрудников).</p>
 <p><strong>Динамическая и статическая информация</strong></p>
 <p><em>Динамической информацией</em> мы называем любую ситуативку, о которой сотрудникам нужно знать прямо сейчас: сообщение о срочной эвакуации, рассказ о том, как работаем на майские, запуск новой фичи.</p>
 <p><em>Статическая информация</em> может сохранять свою актуальность годами — например, лонгрид с юридическим адресом и телефоном нашей компании для справок на визу.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/678/6b2/339/6786b233973305d63fd19cc09c008b99.png" width="753" height="203">
  <figcaption></figcaption>
 </figure>
 <p>Можно идти ещё глубже и разбивать динамическую информацию, например, по частоте выпусков: выделять регулярные и ситуативные форматы.</p>
 <p><strong>Обязательность прочтения: от must read до just for fun</strong></p>
 <p>Кроме обязательной для всех рабочей информации, есть много необязательного, но приятного внутреннего движа: мы знакомимся с новичками, разыгрываем билеты на разные события и рассказываем о свежей коллекции мерча для сотрудников.</p>
 <p>Так как информации много, мы бдим за её дозированностью — не хотим заваливать сотрудников нерелевантными сообщениями. Поэтому внутри мы делим коммуникацию на спектр от обязательной (must read) до инфы по интересам (just for fun), на которую каждый сотрудник может подписаться сам.</p>
 <p>Помимо перечисленных выше, есть много других критериев для структурирования — например, по каналу коммуникации (чат, сообщество или регулярный митап), длине (лонгрид, короткое сообщение), формату (текст, видео или подкаст). Но сегодняшний мой рассказ не об этом, так что не будем тут задерживаться.</p>
 <h3>Структурируй</h3>
 <p>По итогу у нас получилась такая картинка:&nbsp;</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/fc2/bb2/ce3/fc2bb2ce3232bb401ed5cedd506a120b.png" width="1600" height="1600">
  <figcaption></figcaption>
 </figure>
 <p>Здесь уже видны части системы, с каждой из которых нужно работать. Думаю, у всех компаний «болят» разные части внутренних коммуникаций, но схема плюс-минус подходит многим.</p>
 <p>Держать такую (или более ровную и красивую) табличку перед глазами очень полезно — это помогает вовремя понять, какую из частей системы мы незаслуженно оставляем без внимания.</p>
 <h3>Проанализируй</h3>
 <p>Помедитировав какое-то время на схему выше, мы выделили самые критичные на тот момент боли и предложили возможные решения.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/7de/0d3/8ab/7de0d38abdd1f0062b22c5bd406ac795.png" width="756" height="821">
  <figcaption></figcaption>
 </figure>
 <h3>Приступай к работе</h3>
 <p>Всё дальнейшее — вопрос грамотного проджект-менеджмента. Сейчас у нас уже есть единая точка входа во всю документацию, настроены каналы для сбора фидбэка с команды, работают тематические рассылки.</p>
 <p>Всё это нельзя назвать завершёнными проектами: внутренние коммуникации — это процесс, который требует постоянной поддержки, их нельзя единожды настроить и забыть. Команда продолжает расти — некоторые механики не проходят проверку временем, что-то требует доработки и новых итераций.</p>
 <p>Надеюсь, этот рассказ про наш первый подход к снаряду облегчит жизнь коллегам из внутрикома. Если что, всегда рада познакомиться и пообщаться на эту тему: me@kateswans.com</p>
</div>', '2021-05-19 14:56:00', 'Сказ о том, как мы структурировали внутренние коммуникации ВКонтакте', 13, null, 5),
        (102, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <p>В продуктовой среде создаётся много продуктов, но на текущий момент 99% продуктов сводится к новому формату питания, транспорта, медицины, жилья и т.д. Даже более того, в Москве по моему все решают две проблемы - где поесть и как ещё выпить. Понятно, что в России торговля винно-водочной продукцией всегда была, есть и будет прибыльнее, чем что-то ещё, но эта отрасль монополизирована. Что же делать продуктовику? Правильно - искать нишу для продукта за пределами кишечника и половых органов. </p>
 <p>Одним из основных тезисов методологии JTBD является тезис - человек выполнял этот Job 1000 лет назад. Тогда он кушал то, что сам изловил и зажарил на костре. Сейчас он кушает в бургерной, где ему комплексно, по современному, решают потребность подачи холестерина прямо в печень. А что будет, если мы попробуем найти потребности человека, которые пока никак вообще не решались? Ответ очевиден - мы либо разоримся, либо перевернём рынок. </p>
 <p>Небольшое лирическое отступление: Достоевский, когда писала свои бессмертные произведения, ни в коем случае не задумывался о решении проблемы пищеварения. Хотя, конечно, он часто работал на уровне проблемы размножения, однако работал виртуозно. И Достоевский до сих пор приносит много денег в глобальном масштабе, в то время, как даже лучшие Бары того периода закрыты.</p>
 <h2>Фреймворк 1: пирамида Маслова</h2>
 <p>Для тех кто не знает, ознакомиться с тем, что такое пирамида <a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%B8%D1%80%D0%B0%D0%BC%D0%B8%D0%B4%D0%B0_%D0%BF%D0%BE%D1%82%D1%80%D0%B5%D0%B1%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9_%D0%BF%D0%BE_%D0%9C%D0%B0%D1%81%D0%BB%D0%BE%D1%83" rel="noopener noreferrer nofollow">Маслоу можно в WikiПедии &gt;&gt;</a></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/9f6/e50/ce6/9f6e50ce6453cd89e6432b117f59c53e.jpg" width="700" height="700">
  <figcaption></figcaption>
 </figure>
 <p>Какие стратапы и бизнесы сейчас на слуху в России? Правильно - все с нижнего уровня пирамиды Маслова. Еда, транспорт, редко порно. Проекты в области Безопасности тоже ведутся, но с совершенно непонятным результатом. </p>
 <p>Есть проекты из верхних областей пирамиды: эзотерика, просвещение, курсы / обучение. Не смотря на то что EdTech активно развивается, я претендую на то, что это всё же относится к низшему уровню пирамиды. Респонденты лишь ищут, как им попасть на работу программистом и получить денег, чтобы вкусно поесть в модном баре на Стрелке с "Пафосной Тёлкой" рядом с обнажённой статуей "женщина с веслом". </p>
 <p><strong>Однако</strong>: современные технологии способны полностью удовлетворить все 3 низших уровня пирамиды! Молоко из пальмового масла в производстве не стоит ничего (молчу про розницу), одежда, обувь и техника в Китае продаётся по 1$ за килограмм (да, сюда она приезжает за другие суммы) а потребность в Любви уже лет 15 удовлетворяют соцсети, где вы собираете лайки на ваши фотки, которые являются мерой любви общества к вам. </p>
 <p>Отмечу, что в Мире самыми прибыльными проектами являются проекты связанные с уровнем 3 пирамиды (потребность в любви) и уровнем 4 пирамиды (потребность в уважении / почитании). То что это так, можно посмотреть сравнив капитализацию Facebook и, скажем, Nestle. Хотя всякие Сникерсы и Йогурты это тоже не низший уровень, это уже уровни близкие к середине - "скушай Сникерс, выпей Йогурт, стань как тот чувак из рекламы и она тебя полюбит" - в общем продаётся не конфета а стиль жизни (да, от этого стиля жизни толстеют). </p>
 <p>Верхние уровни пирамиды могут стать источниками продуктовых идей для единорогов лет через 20 - 50. Пища в целом есть, любовь обеспечат роботы, а вот тот, кто решит как в этом дурдоме актуализоваться, получит жирный куш.</p>
 <h2>Фреймворк 2: путь индивидуации по Юнгу</h2>
 <p>Фреймворк уже не столь банален, потому, что чтобы на него опираться, необходимо, хотя бы издалека познать свою тень. Хотя бы привыкнуть к мысли, что тень есть у каждого. </p>
 <p>С тем, что такое путь индивидуации можно, весьма правда кратко, <a href="https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D0%B4%D0%B8%D0%B2%D0%B8%D0%B4%D1%83%D0%B0%D1%86%D0%B8%D1%8F" rel="noopener noreferrer nofollow">ознакомиться в ВикиПедии &gt;&gt;</a></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/83c/b05/298/83cb05298df955464282ac38dde73393.jpg" width="1837" height="967">
  <figcaption></figcaption>
 </figure>
 <p>Работая с этим фреймворком, мы предполагаем, что кроме Тела человека, потребности которого конечно надо решать, есть ещё структура в области бессознательного (см. картинку) - есть Тень, Есть Анима и Анимус. </p>
 <p><strong>Познав Тень, Анима ведёт человека к его Самости...</strong></p>
 <p>Тот же Сникерс, как продукт, относится явно к сфере актуализации Тени человека. То что во времена СССР было вытеснено, оказалось вдруг можно. Реклама явно говорила "Попробуй бяку, тебе же хочется, в СССР это было нельзя, а в Демократической России уже можно!". В 90-ые годы эта реклама сделала многое, поборов у половины населения СССР запрет на "сладкую палочку" (специально не буду пояснять, что я имею в виду под Палочкой и по Фрейду тоже). При этом - Сникерс был очень прибылен в 90-ые. Сейчас кстати это всего лишь ещё одна конфета, так как он сделал своё дело переработав те комплексы. Тогда же это был символ времени, который актуализировал коллективные структуры, за что его покупали за любые деньги.</p>
 <p>Продукты, ориентированные на Аниму, также могут быть чрезвычайно прибыльны: начиная от индустрии красоты, завершая всем шоубизнесом. Это всё продукты для актуализации Анимы человека котрую можно развивать, познавать и т.д. Зачем идти к "Барберу" чтобы сделать себе бороду как у Дровосека? Заплатить ему кучу денег, чтобы выглядеть как Дровосек? Тем не менее многие экономят на еде, но их борода чудесна. То же с одеждой, машинами и т.д. И ладно бы жена хотела чтобы у мужчины была борода, так наоборот, она часто против (лучше бы шубу ей купил). Но борода всё длиннее, и всё больше времени на её расчёсывание... И это всё деньги для продукта.</p>
 <p><img inline="true" class="image image-inline" src="https://habrastorage.org/getpro/habr/upload_files/a50/42e/e8a/a5042ee8a5e7f4ef698ed27eadf69904.jpg" width="5000" height="5000"><strong><em>Алгоритм создания продукта по Юнгу банален:</em></strong><em> мы берём любой из Юнгианских Архетипов, помним что Анима ведёт личность, преодолевшую свою тень, к Самости, и помогаем своим продуктом личности идти к самости. </em></p>
 <p>Отмечу сто тут мы сходу переходим на сферы за пределами "поесть и размножиться". Ну в смысле размножиться Анима поможет тоже. Когда в 70-ые годы все слушали Высоцкого, никто не думал о еде... А проект "Высоцкий" очень прибылен кстати, даже в сравнении с современной доставкой пальмового масла на дом. </p>
 <h2>Фреймворк 3: архетипы по Хиллману</h2>
 <p>С АрхеТипами по Хиллману можно ознакомиться по <a href="https://psy.wikireading.ru/25126" rel="noopener noreferrer nofollow">ссылке &gt;&gt;</a></p>
 <p>Для простоты понимания, архетипы Хиллмана сводят либо к Греческим (можно Скандинаским) Богам либо к 7 планетам. Тем более что сразу можно зачерпнуть мифический пласт. Каждый бог это Миф. Вот с Мифом и будем работать, создавая продукт. </p>
 <p><em>И да, продукт тоже субъект Коллективного Бессознательного. </em></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/35f/96e/bcb/35f96ebcb146b9282eefcc8839242be5.jpg" width="654" height="1024">
  <figcaption></figcaption>
 </figure>
 <p>Создавая продукт, с одной стороны мы решаем потребность: все хотят пожрать, мы им это даём, и вроде бы на этом точка. Но оказывается, люди не платят за дешёвые макароны. Люди наоборот платят за Понты, откладывая последние деньги на то, чтобы выпить Смузи покачивая стрингами или съесть Устрицу под Арманьяк в пафосном кабаке. Бюджет на устриц оказывается больше, чем на макароны. Питательность устриц уступает многократно питательности Спирулины Вэл, которую можно купить где угодно, на вкус я например не любитель, но бюджеты на устриц только растут. </p>
 <p>У каждого продукта есть свой Архетипический заказчик: создавая какую-то штуку, мы с одной стороны обращаемся к потребности человека. Но с другой стороны, мы обращаемся к Мифическому: мифы о Дионисе и Посейдоне в России всегда правили. В угоду Посейдону создавались наверное лучшие торговые предложения - например купить идею развала СССР, оплатив из своего кармана ещё и все демократические реформы... Это вам не "мобильное приложение по доставке всякой фигни на дом".</p>
 <p>А если посмотреть на архетипическую составляющую финансового сектора... С одной стороны всё конечно формулируют продуктовые гипотезы в формате: "клиенту нужно купить какую-то хрень, он идёт в банк за помощью". Но сам по себе Банк, это штука очень Архетипическая: я сейчас даже не буду перечислять какие Мифы связаны с деньгами и как они чётко разыгрываются в современном обществе. И Венецианский Купец, и герои Островского (Смоктуновский прекрасен в фильме Поздняя Любовь). И всё это казалось бы чтобы удовлетворить потребность. Но - свою ли потребность? Начнём с потребностей Золотого Тельца...</p>
 <p><img inline="true" class="image image-inline" src="https://habrastorage.org/getpro/habr/upload_files/872/8dd/a7e/8728dda7e65b56838c2aa493780ee2f4.jpg" width="5000" height="5000"><strong><em>Алгоритм построения продуктовой идеи по Хиллману чуть сложнее:</em></strong><em> ищем Миф, который вот вот готов реализоваться. Ищем Аретипический заказчик этого мифа. Помогаем ему. </em></p>
 <p>Короче берём того золотого тельца, думаем что ему надо, смотрим как это проявлено в современном мире. Если проявлено - делаем продукт под Тельца. </p>
 <p>Мифы берём из Эпоса, для начала Греческого. Да, Мифы нужно знать. Но если мы попали, то Архетип толкнёт ваш проект к реализации, даже если вы инвалид умственного труда и не хотите ни программировать ни кастдевить. Кстати большинство Единорогов, до времени когда продуктовый менеджмент созрел как методология, так и делалось: все эти истории как два Стива делали в Гараже компьютер. Кастдева они не проводили, MVP не делали. А потом раз, и всё само срослось - вышли в лидеры рынка (там конечно ещё был Ротшильд, но кто же его туда привёл). </p>
 <h2>Продуктовые возможности фреймворков</h2>
 <p>Сейчас в России (за рубежом кстати это нифига не так) бизнес и стартапы решают проблему самых нижних уровня пирамиды Маслова. Надо отметить, что скоро они решат эти проблемы. Сбер-Аптека и Яндекс-маркет выстрелили в пандемию, но так же скоро они уйдут в бейзмент, комодитизируются. Где будем искать новые идеи? </p>
 <p>Проанализировав кейс Delivery Club кстати можно чётко выделить Архетипы, которые это заказали: это наверное Приап, конечно Дионис (мы в России), и Деметра. И могут ли другие Архетипы скинутся и начать что-то новенькое? Даже если и Арес, то ЧВК Вагнера думаю весьма прибыльное дельце. </p>
 <p>Ещё есть крутые и очень рабочие на севере Архетипы - мельница Сампо, лягушка Одзь и вообще Калевала. Претендую что Одзь сейчас крайне активен - он заказал чиновников. Работайте с Одзем, продавайте в Гос. Сектор. </p>
 <p>Первым Фреймворком просто пользоваться - пирамиду Маслова проходят кажется в Школе. Последний фреймворк даёт больше всего возможностей. И помните: </p>
 <p><strong><em>Работать с бизнес Заказчиком гораздо проще но менее эффективно, чем работать с Архетипическим заказчиком...</em></strong></p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/c62/ccb/96f/c62ccb96f4bae429acb2e854b6b03d91.jpg" width="1200" height="829">
  <figcaption></figcaption>
 </figure>
</div>', '2021-05-20 17:10:00', 'Продуктовая Алхимия — 3 очень крутых фреймворка для создания продукта', 31, null, 9),
        (103, true, 'ACCEPTED', '<div class="post__text post__text-html post__text_v1" id="post-content-body">
 <img src="https://habrastorage.org/getpro/habr/post_images/ef8/7a4/5cf/ef87a45cf7f01b1e90ec3e2973a4c1ef.jpg" alt="image">
 <br> 
 <br> <b>Об авторе:</b> Пол Букхайт — создатель Gmail и FriendFeed, партнер Y Combinator.
 <br> 
 <br> <i>Инстинктивная (интуитивная) прозорливость, серендипность (англ. serendipity) — способность, делая глубокие выводы из случайных наблюдений, находить то, чего не искал намеренно.</i>
 <br> 
 <br> Вот интересный комментарий из «Hacker News» к статье о том, как человек отклонил предложение работать в Google в начале его пути. 
 <br> 
 <br> 
 <blockquote>
  «Со мной в 1999 году была такая же история. Я понял, что Google гораздо круче, чем AltaVista, и лучше находит нужное, чем каталог Yahoo. Подумал: вот оно, будущее. И отправил им резюме на позицию, не связанную с развитием — хранение и обработка данных, и системное администрирование. Они дважды позвонили мне, но я убедил себя, что они всё равно бы меня не взяли — и поэтому не стал перезванивать.» 
 </blockquote>
 <br> 
 <br> Независимо от того, насколько правильным было решение проигнорировать звонки от Google, причина этого игнорирования (страх отказа) — на самом деле, не очень хорошая. 
 <br> 
 <br> У меня немного воспоминаний из старшей школы, но то, что осталось со мной надолго — связано с первым учебным днём в 11 классе. Наш учитель английского (кажется, его звали мистер Мэй) поделился с нами историей о том, что произошло с ним накануне вечером. Он вёл машину под дождём и заметил на обочине двух людей на велосипедах. Он остановился узнать, не нужна ли им помощь, и в итоге отвёз их к себе домой, дал сухую одежду, и они вместе с женой пригласили их на ужин. За столом те рассказали кучу удивительных случаев, которые произошли с ними в поездке через всю страну. 
 <br> 
 <br> Это не очень драматичная история, но мне нравится её серендипность — как в плане пары, поездка которой проходила в приключениях, так и в отношении моего учителя, который увидел людей на дороге и пригласил их к себе в дом. Ничего из этого не было запланировано — они просто позволили этому случиться. Это было для меня вдохновением, потому что ощущалось как правильный способ жить, весёлый и интересный. Но при всём при том достаточно редкий. 
 <br> <a name="habracut"></a>
 <br> Моя собственная история о том, как я попал в Google в 1999, довольно скучная. Мне были интересны и стартапы, и Linux (который в то время был всё ещё достаточно маргинальным), и я отправил резюме в несколько компаний, которые увидел на Slashdot (как я сейчас понимаю, не самый активный способ найти работу). К счастью, большинство из них не ответили, и единственные, кто предложили мне работу, были Google. Я относился к ним скептически и ожидал, что они долго не протянут, но там могло быть весело и полезно в плане обучения, поэтому я согласился. 
 <br> 
 <br> Это явный пример очень экстремальной удачи, но я заметил, что большинство хороших вещей происходит со мной примерно таким же образом, и не является частью какого-то «плана». История моей встречи с женой такая же примечательно простая. Вскоре после того, как я переехал в Калифорнию, я зарегистрировался на match.com, просмотрел несколько профилей, написал трём барышням, и только одна из них ответила. Я точно не искал кого-то для женитьбы, но именно это в итоге и случилось. Как говорится: «Жизнь — это то, что происходит, пока ты строишь другие планы». 
 <br> 
 <br> Мои планы редко срабатывали (только если они не были скучны до нудности), но серендипность мне благоволила, поэтому со временем я постарался научиться использовать её преимущества по максимуму. Моя теория серендипности всё ещё эволюционирует, но что я уже понял — так это что стоит мыслить в сторону того, чтобы скорее «разрешать» ей происходить, а не «искать» её, или не «создавать». 
 <br> 
 <br> Возможность — повсюду, но её блокируют наши убеждения и привычки. 
 <br> 
 <br> Два самых больших блока, которые мешают серендипности, — это эго-страх и «другие планы». 
 <br> 
 <br> Я использую термин «эго-страх» для описания страхов, которые выходят за пределы рациональных соображений. К примеру, вы не выскочите на середину скоростной автострады благодаря здоровому страху попасть под машину — это не эго-страх. Тем не менее, страх, который часто удерживает людей от публичных выступлений, разговоров с незнакомцами, прохождения собеседования при устройстве на работу и т.д., обычно бывает вызван страхом стыда, унижения, отвержения, критики и пр. — это и есть эго-страх. Иногда эти два вида страха бывает трудно отделить друг от друга, потому что эго-страх рационализируется под страх здоровый, например: «Я не хочу разговаривать с этим незнакомцем, потому что он может напасть на меня или зря потратить моё время.» 
 <br> 
 <br> Комментатор Hacker News, о котором шла речь выше и который не ответил на звонки Google, потому что «они всё равно бы меня не взяли», похоже, находится под влиянием достаточно сильного эго-страха, страха отвержения и унижения. Этот страх блокирует и множество других возможностей. 
 <br> 
 <br> Легко поддаться соблазну и найти из эго-страха мысленный выход, но я подозреваю, что это создаст более сложный клубок рационализаций, и сделает проблему только хуже. Страх побеждается противостоянием, избегание делает его только сильнее. 
 <br> 
 <br> 
 <blockquote>
  «Вы обретаете силу, смелость и уверенность каждый раз, когда смотрите страху прямо в глаза. Вы должны сделать то что, как вы считаете, вы не можете сделать.» 
  <br> — Элеонора Рузвельт. 
 </blockquote>
 <br> 
 <br> Программа устранения эго-страха и разблокировки серендипности очень проста: ищите эго-страх. Выследите его и пропитайтесь им насквозь. Заберите его силу. Подобное даже звучит страшно. Это хорошо. 
 <br> 
 <br> Другой большой блок серендипности — это «план». Серендипность и удача непредсказуемы по своей природе, и, следовательно, не могут быть частью хорошего плана. Когда происходит что-то непредвиденное, всё перестаёт «идти по плану», люди склонны рассматривать неожиданное событие как раздражающий фактор, или как отвлекающее препятствие на пути к цели. 
 <br> 
 <br> Разница между жизнью, полной отвлекающих препятствий, и жизнью, наполненной серендипностью, — по большому счёту, дело интерпретации. Это может быть трудно, но самый эффективный ответ на неожиданное событие — это состояние благодарности. Даже те обстоятельства, которые кажутся негативными, могут вести к чему-то очень хорошему. Примите то, что вам даётся. (Посмотрите фильм «Всегда говори ДА», там этот взгляд на жизнь показан смешно и симпатично.) 
 <br> 
 <br> 
 <blockquote>
  «Планы бесполезны. Планирование бесценно.» 
  <br> — Дуайт Д. Эйзенхауэр. 
  <br> 
 </blockquote>
 <br> Планирование само по себе неплохо, но выбрать один план и старательно его придерживаться — не сильно способствует серендипности. Мир очень сложен, и мы, люди, очень глупы, поэтому стоит быть гибким и открытым новому. Вместо одного плана — имейте про запас тысячу планов, и при необходимости пересматривайте их. 
 <br> 
 <br> Желание иметь «план» может также вызвать «паралич анализа» — когда мы вкладываем всю свою энергию в создание идеального плана, и, соответственно, больше уже ничего не делаем. Более эффективный подход состоит в том, чтобы просто выбрать план, понимая, что он несовершенен, запустить этот план в действие, и затем переделывать, пересматривать, или менять план по мере того, как разворачиваются события. 
 <br> 
 <br> Подозреваю, что желание иметь определённый план тоже частично происходит из страха. Неопределённость может быть пугающей, и наличие плана помогает создать иллюзию предсказуемости в этом очень непредсказуемом мире. Но если мы сможем снизить риск и непредсказуемость — то мы также снизим и серендипность. Это одна из причин, почему большим организациям часто так сложно производить инновации — они хотят, чтобы всё было расписано и запланировано, и это просто убивает эти самые инновации. 
 <br> 
 <br> Само понятие о том, что планов надо «придерживаться» — уводит нас от цели, так что я предпочитаю называть их «идеи» или «наброски». Сам я стараюсь планов избегать, но генерирую много идей. Какая из них по факту воплотится в жизнь — для меня сюрприз. Так гораздо интереснее.
 <br> 
 <br> <i>За перевод спасибо Inga Afanasieva</i>
 <br> 
 <br> 
 <h3>Еще переводы Пола Букхайта</h3>
 <br> 
 <ul> 
  <li><a href="https://habr.com/ru/post/524928/">Мировоззрение хакера</a></li> 
  <li><a href="https://habr.com/ru/post/538152/">Если ваш продукт Великий, ему не обязательно быть Хорошим</a></li> 
 </ul>
 <br> 
 <br> 
 <hr>
 <br> 
 <h3>Ontol</h3>
 <br> Проект <a href="http://ontol.org/" rel="nofollow noopener noreferrer">Ontol</a> — это Github для знаний/мудрости (по модели <a href="https://en.wikipedia.org/wiki/DIKW_pyramid" rel="nofollow noopener noreferrer">DIKW</a>). Ontol призван в 100 раз сократить трение и время доступа к информации, которая формирует адекватное мировоззрение. 
 <br> 
 <br> 
 <img src="https://habrastorage.org/webt/ra/19/ra/ra19ra2bzkwmx1iubfn_r-yvwuu.jpeg" alt="image">
 <br> 
 <br> Каждый пользователь может создать/скопировать Ontol (список топ-10/100 статей/видео) по важной для него теме и пополнять/модифицировать его в течение всей жизни. Например, этот перевод Пола Букхейта находится <a href="http://ontol.org/ru/magisterludi/serendipity" rel="nofollow noopener noreferrer">в моём Ontol</a> на тему #серендипность на первом месте. 
 <br> 
 <br> Ontol — решает проблемму и переизбытка информации и (маркетинговой) дезинформации. При помощи тысяч волонтеров/хакеров/интеллектуалов (которые поставят свою шкуру на кон) мы сможем отфильтровать всю доступную мудрость и знания человечесва и принесем пользу миллиардам людей на горизоннте 100+ лет.
 <br> 
 <br> Пока я пилю прототип бэкэнда, я делюсь своими лучшими находками за всю жизнь (из серии: «эх, жаль что я не знал этого раньше!») в канале в телеграм: <a href="https://t.me/ontol" rel="nofollow noopener noreferrer">t.me/ontol</a>
</div>', '2021-05-24 14:51:00', 'Серендипность тебя найдет', 91, null, 4),
        (104, true, 'ACCEPTED', '<div class="post__text post__text_v2" id="post-content-body">
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/000/d00/c83/000d00c83eae414ec577aac956767622.jpg" width="766" height="541">
  <figcaption></figcaption>
 </figure>
 <p>Компания Huawei HiSilicon выпустила свою первую плату на архитектуре RISC-V с открытым исходным кодом. На ее основе будут разрабатываться устройства Интернета вещей.</p>
 <p>Плата HiSpark разработана на собственном контроллере HiSilicon Hi3861 и предназначена для работы под ОС Harmony. Плата оснащена разъемом USB Type-C, модулем беспроводной связи малого радиуса NFC и Wi-Fi. Есть также возможность подключения экрана OLED и аккумулятора.</p>
 <figure class="full-width ">
  <img src="https://habrastorage.org/getpro/habr/upload_files/bca/904/209/bca904209facce9ef21ed666eef449a8.jpg" width="723" height="683">
  <figcaption></figcaption>
 </figure>
 <p>Как <a href="https://www.tomshardware.com/news/huaweis-hisilicon-develops-first-risc-v-design-to-overcome-arm-restrictions" rel="noopener noreferrer nofollow">пишет</a> Tom’s Hardware, хотя в документации Huawei не указано предназначение микросхемы, Hi3861 обладает довольно обширными (по крайней мере, Raspberry Pi-подобными) возможностями. Hi3861 нацелен, в основном, на рынок Интернета вещей.&nbsp;</p>
 <p>Подразделение Huawei HiSilicon выпускало микропроцессоры на архитектуре Arm, но из-за санкций правительства США китайские компании потеряли доступ к американским технологиям. Релиз позволит Huawei снизить зависимость от технологий, базирующихся в США.</p>
</div>', '2021-05-24 19:05:00', 'HiSilicon представила первый одноплатник на RISC-V', 34, null, 7);